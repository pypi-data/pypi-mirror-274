Metadata-Version: 2.1
Name: pyo3-stubgen
Version: 0.1.0
Summary: Enable hinting for pyo3 extension modules by generating type and docstring stubs
Author: Mike Foster
License: MIT
Project-URL: Repository, https://github.com/MusicalNinjas/pyo3-stubgen
Project-URL: Issues, https://github.com/MusicalNinjas/pyo3-stubgen
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Provides-Extra: lint
Requires-Dist: ruff; extra == "lint"
Provides-Extra: test
Requires-Dist: pytest; extra == "test"
Requires-Dist: pytest-doctest-mkdocstrings; extra == "test"
Provides-Extra: cov
Requires-Dist: pyigen[test]; extra == "cov"
Requires-Dist: pytest-cov; extra == "cov"
Provides-Extra: doc
Requires-Dist: black; extra == "doc"
Requires-Dist: mkdocs; extra == "doc"
Requires-Dist: mkdocstrings[python]; extra == "doc"
Requires-Dist: mkdocs-material; extra == "doc"
Provides-Extra: dev
Requires-Dist: pyo3-stubgen[cov,doc,lint,test]; extra == "dev"

# pyo3-stubgen

`pyo3-stubgen` generates `.pyi` typing files for extension modules which were written in rust with pyo3.

It is designed to work for extension modules created in rust with pyo3 but should work with any compiled extension
modules which include a `__text_signature__` and optionally a `__doc__` attribute for functions.

The package containing the module must be installed in the current virtual environment, but does not need to be
imported before running `pyo3_stubgen`.

Despite flake8's recommendation to the contrary, `pyo3_stubgen` adds docstrings to the `.pyi` files so that IDEs can
provide them in hover pop-ups.

You will need to manually add the typing information to the generated files as this is not included in any of the
function attributes available.

Currently `pyo3_stubgen` only generates info for functions. Classes are on the to-do list.
