Metadata-Version: 2.1
Name: clerk_django
Version: 1.0.3
Summary: A package for django rest framework to handle clerk authentication. It includes a auth middleware, permission and a wrapper around all the user related apis.
Author-email: Ravi Kumar Singh <ravikrsngh1999@gmail.com>
License: MIT License
        
        Copyright (c) 2024 Ravi Kumar Singh.
        
        Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
        
Project-URL: Homepage, https://github.com/ravikrsngh/clerk_django
Project-URL: Issues, https://github.com/ravikrsngh/clerk_django/issues
Keywords: django,clerk,clerk django,clerk django package,integrate clerk and django
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: PyJWT >=2.8.0

# Clerk Django

"Clerk Django" is a Python library that offers middleware and permissions for authenticating requests when your authentication process is managed by Clerk.

## Installation

Use the package manager [pip](https://pip.pypa.io/en/stable/) to install clerk_django.

```bash
pip install clerk-django
```

## Usage

The first step will be to set your `CLERK_SECRET_KEY` and `CLERK_PEM_PUBLIC_KEY` in your environment variables.
Then go to your `settings.py` file and set the `ALLOWED_PARTIES` config.

```python
ALLOWED_PARTIES = ["http://localhost:5173"]
```

To use the `ClerkAuthMiddleware`, add `clerk_django.middlewares.clerk.ClerkAuthMiddleware` to your middlewares.

```python
MIDDLEWARE = [
    # other middlewares
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'clerk_django.middlewares.clerk.ClerkAuthMiddleware'
]
```

Once you have added the middleware, you can access the user from the request using `request.clerk_user`. clerk_user has 3 properties.

- `is_authenticated` - It is true/false based on if the user is authenticated or not.
- `id` - Clerk user id. This key will be available only if the user is authenticated.
- `decoded_token` - This is the value after decoding the token which might contain useful user info based on how you have configured your [JWTTemplates in Clerk](https://clerk.com/docs/backend-requests/making/jwt-templates). This key will be available only if the user is authenticated.

```python
from rest_framework import viewsets
from rest_framework.response import Response
from permissions.clerk import ClerkAuthenticated

class ExampleViewset(viewsets.ViewSet):
    permission_classes = [ClerkAuthenticated]

    def list(self, request):
        user_id = request.clerk_user.get('id')
        return Response()
```

There is a wrapper around the User related apis. All the different function can be found in [clerk backend sdk](https://clerk.com/docs/references/backend/user/get-user-list) and [ clerk backend apis ](https://clerk.com/docs/reference/backend-api/tag/Users#operation/GetUserList)

```python
from clerk_django.client import ClerkClient

#Set your CLERK_SECRET_KEY and CLERK_PEM_PUBLIC_KEY in your environment variables.

cc = ClerkClient()

user_details = cc.users.getUser(user_id=user_id)

#Check the clerk documentation for the list of query params.
user_list = cc.users.getUserList({
               "email_address" : ["reachsahilverma@gmail.com"]
            })
```

I have added all the functions mentioned in the [Clerk Backend SDK - User](https://clerk.com/docs/references/backend/user/get-user-list). You just need to use `user_id` instead of `userId`. Also in case of `verifyPassword`, just pass the `user_id` and `password` directly. In all the other functions you can pass the params as required and mentioned in the documentation.

```python
res = cc.users.verifyPassword(user_id,password)
```

## Contributing

Pull requests are welcome. For major changes, please open an issue first
to discuss what you would like to change.

## License

[MIT](https://github.com/ravikrsngh/clerk_django?tab=MIT-1-ov-file)
