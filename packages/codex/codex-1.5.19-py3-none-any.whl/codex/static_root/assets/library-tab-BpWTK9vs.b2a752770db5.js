import{_ as H}from"./confirm-dialog-BoVvCI5y.js";import{A as Q,a as J,b as X,_ as z,V as Z}from"./VDataTableVirtual-BMondxto.js";import{cs as ee,b2 as $,N as w,t as f,ad as te,_ as k,Q as b,R as c,aB as _,L as l,T as s,aG as r,ai as g,P as V,ae as d,ah as T,aE as A,M as B,aC as oe,aK as j,aL as N,ap as P,k as x,O as v,ak as le,a_ as re,ct as se,cu as ae,aF as ie,b8 as ne,cb as de,af as me}from"./admin-drawer-panel-DffXGW1d.js";import{D as W}from"./datetime-column-C3t430gN.js";import{V as D,a as E,b as R,c as O}from"./VExpansionPanels-CDS9qp1D.js";import{V as ue}from"./VTable-TEvK4Tmn.js";import{a as pe}from"./VSlideGroup-BdgkaRxE.js";import{a as S,u as ce}from"./main-DB0zDxIA.js";import{V as he}from"./VCombobox-BWrSBDP9.js";import{V as C}from"./VCheckbox-D7WF5wMC.js";import{V as U}from"./VCheckboxBtn-CzTNt4cV.js";import"./confirm-footer-CIu2tkFD.js";import"./VSelect-DfV5vhqb.js";import"./VSelectionControl-DvHEDoJy.js";import"./filter-BQ_FuhIp.js";const fe={name:"AdminFailedImportsPanel",components:{DateTimeColumn:W},data(){return{mdiBookAlert:ee,mdiOpenInNew:$}},computed:{...w(f,["failedImports"]),...te(f,["unseenFailedImports"])},created(){this.unseenFailedImports=!0}},y=e=>(j("data-v-bc6470a2"),e=e(),N(),e),be={key:0,id:"failedImports"},_e=y(()=>r("thead",null,[r("tr",null,[r("th",null,"Path"),r("th",null,"Created")])],-1)),ye={class:"dateCol"},ge=y(()=>r("h4",null,"Failed Imports Help",-1)),we=y(()=>r("p",null," These are Comic archives that have failed to import. This list is updated every time the library updates. You should probably review these files and fix or remove them. ",-1)),ke=y(()=>r("h4",null,"Fixing comics",-1)),Fe=y(()=>r("p",null,[d(" Try using the zip fixer to fix comics: "),r("code",{class:"cli"},[d(" cp problem-comic.cbz /somewhere/safe/problem-comic.cbz.backup"),r("br"),d(" zip -F problem-comic.cbz --out fixed.zip"),r("br"),d(" mv fixed.zip problem-comic.cbz ")]),d(" You may also try "),r("code",null,"zip -FF"),d(" to fix comics which uses a different (not necissarily better) algorithm. If you fix some imports, and Codex does not immediately detect the change, poll the library which contains the fixed comics. ")],-1)),ve=y(()=>r("h4",null,"Reporting Issues",-1)),Pe={href:"https://github.com/ajslater/codex/issues/",target:"_blank"},Ce=y(()=>r("code",null,"config/logs/codex.log",-1));function Ie(e,t,m,h,o,u){const i=b("DateTimeColumn");return e.failedImports&&e.failedImports.length>0?(c(),_("div",be,[l(O,null,{default:s(()=>[l(D,{id:"failedImportsPanel",onClick:t[0]||(t[0]=p=>e.unseenFailedImports=!1)},{default:s(()=>[l(E,null,{default:s(()=>[r("h4",null,"Failed Imports: "+g(e.failedImports.length),1),e.unseenFailedImports?(c(),V(T,{key:0,id:"failedImportsIcon",title:"New Failed Imports"},{default:s(()=>[d(g(o.mdiBookAlert),1)]),_:1})):A("",!0)]),_:1}),l(R,null,{default:s(()=>[l(ue,{class:"highlight-table"},{default:s(()=>[_e,r("tbody",null,[(c(!0),_(B,null,oe(e.failedImports,p=>(c(),_("tr",{key:`fi:${p.path}`},[r("td",null,g(p.path),1),r("td",ye,[l(i,{dttm:p.createdAt},null,8,["dttm"])])]))),128))])]),_:1}),l(O,null,{default:s(()=>[l(D,{id:"failedImportsHelp"},{default:s(()=>[l(E,null,{default:s(()=>[ge]),_:1}),l(R,null,{default:s(()=>[we,ke,Fe,ve,r("p",null,[d(" If the comic looks good to you, but still shows up as a failed import, it might be Codex's fault for not importing it correctly. Please file an "),r("a",Pe,[d("Issue Report"),l(T,{size:"small"},{default:s(()=>[d(g(o.mdiOpenInNew),1)]),_:1})]),d(" and include the stack trace from the logs at "),Ce,d(" if you can. ")])]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})])):A("",!0)}const Ve=k(fe,[["render",Ie],["__scopeId","data-v-bc6470a2"]]),Te={name:"TimeTextField",data(){return{FORMAT:"DDD HH:mm:SS",timeRules:[e=>/^(\d{1,3} )?([01]\d|2[0-3]):([0-5]\d):([0-5]\d)$/.test(e)||`Invalid time format ${this.FORMAT}`]}}};function Ae(e,t,m,h,o,u){return c(),V(pe,P({ref:"timeField",density:"compact",filled:"",hint:o.FORMAT,round:"",rules:o.timeRules},e.$attrs),null,16,["hint","rules"])}const K=k(Te,[["render",Ae]]),xe={name:"AdminServerFolderPicker",emits:["change","menu"],data(){return{path:"",originalPath:"",showHidden:!1,menuOpen:!1}},computed:{...w(f,{folders:e=>e.folderPicker.folders,rootFolder:e=>e.folderPicker.rootFolder}),...w(x,{formErrors:e=>e.form.errors}),appendOuterIcon(){return this.showHidden?this.mdiFolderHidden:this.mdiFolderOutline},showHiddenTooltipPrefix(){return this.showHidden?"Hide":"Show"}},watch:{menuOpen(e){e&&this.$emit("menu",e)}},created(){this.loadFolders().then(()=>(this.path=this.rootFolder,this.originalPath=this.rootFolder,!0)).catch(console.warn)},methods:{...v(f,["clearFolders","loadFolders"]),...v(x,["clearErrors"]),change(e){const t=e?e.startsWith("/")||e.startsWith("\\")?e:[this.rootFolder,e].join("/"):this.rootFolder,m=this.menuOpen;this.clearErrors(),this.loadFolders(t,this.showHidden).then(()=>{this.menuOpen=m;let h="";return this.formErrors.length===0&&(this.path=h=this.rootFolder),this.$emit("change",h)}).catch(console.warn)},onBlur(){this.menuOpen=!1,this.change(this.path)},onClear(){this.clearFolders(this.orignalPath).then(()=>this.change(this.orginalPath)).catch(console.error)},onKeyDownEnter(){this.change(this.path)},onItemClick(e){this.change(e)}}},De={id:"folderPicker"};function Ee(e,t,m,h,o,u){return c(),_("div",De,[l(he,P({modelValue:o.path,"onUpdate:modelValue":t[0]||(t[0]=i=>o.path=i),menu:o.menuOpen,"onUpdate:menu":t[1]||(t[1]=i=>o.menuOpen=i)},e.$attrs,{"aria-label":"Library folder",clearable:"","error-messages":e.formErrors,"full-width":"","hide-details":"auto",items:e.folders,"menu-props":{maxHeight:"370px"},"validate-on":"blur",variant:"filled",onBlur:u.onBlur,"onClick:clear":u.onClear,onKeydown:re(u.onKeyDownEnter,["enter"])}),{item:s(({item:i,props:p})=>[l(le,P(p,{title:i.title,value:i.value,onClick:F=>u.onItemClick(i.value)}),null,16,["title","value","onClick"])]),_:1},16,["modelValue","menu","error-messages","items","onBlur","onClick:clear","onKeydown"]),l(C,{modelValue:o.showHidden,"onUpdate:modelValue":t[2]||(t[2]=i=>o.showHidden=i),density:"compact",class:"showHidden","hide-details":"auto",label:"Show Hidden Folders"},null,8,["modelValue"])])}const Re=k(xe,[["render",Ee],["__scopeId","data-v-3cf2705f"]]),M=["events","poll","pollEvery","groups"];Object.freeze(M);const I={path:"",events:!0,poll:!0,pollEvery:"01:00:00",groups:[]};Object.freeze(I);const L=(e,t)=>(e=e.replaceAll("\\","/"),t=t.replaceAll("\\","/"),e.endsWith("/")||(e+="/"),t.endsWith("/")||(t+="/"),t.startsWith(e)),Oe={name:"AdminLibraryCreateUpdateInputs",components:{AdminRelationPicker:Q,AdminServerFolderPicker:Re,TimeTextField:K},props:{oldRow:{type:[Object,Boolean],default:!1}},emits:["change"],data(){return{rules:{path:[e=>!!e||"Path is required",e=>{if(!e)return!1;for(const t of this.paths){if(L(t,e))return"Path is a child of an existing library";if(L(e,t))return"Path is a parent of an existing library"}return!0}]},row:S.cloneDeep(this.oldRow||I)}},computed:{...w(f,{groups:e=>e.groups,libraries:e=>e.libraries}),paths(){return this.nameSet(this.libraries,"path",this.oldRow,!1)}},watch:{row:{handler(e){this.$emit("change",e)},deep:!0},oldRow:{handler(e){this.row=S.cloneDeep(e)},deep:!0}},methods:{...v(f,["nameSet"])},UPDATE_KEYS:M,EMPTY_ROW:I},Se={key:1};function Ue(e,t,m,h,o,u){const i=b("AdminServerFolderPicker"),p=K,F=b("AdminRelationPicker");return c(),_(B,null,[m.oldRow?(c(),_("div",Se,g(m.oldRow.path),1)):(c(),V(i,{key:0,rules:o.rules.path,autofocus:"",label:"Library Folder",onChange:t[0]||(t[0]=n=>o.row.path=n)},null,8,["rules"])),l(C,{modelValue:o.row.events,"onUpdate:modelValue":t[1]||(t[1]=n=>o.row.events=n),"hide-details":"auto",hint:"Update Codex instantly when the filesystem changes",label:"Watch Filesystem Events","persistent-hint":!0},null,8,["modelValue"]),l(C,{modelValue:o.row.poll,"onUpdate:modelValue":t[2]||(t[2]=n=>o.row.poll=n),label:"Poll Filesystem Periodically","hide-details":"auto",hint:"Periodically poll the library for changes","persistent-hint":!0},null,8,["modelValue"]),l(p,{modelValue:o.row.pollEvery,"onUpdate:modelValue":t[3]||(t[3]=n=>o.row.pollEvery=n),label:"Poll Every",disabled:!o.row.poll},null,8,["modelValue","disabled"]),l(F,{modelValue:o.row.groups,"onUpdate:modelValue":t[4]||(t[4]=n=>o.row.groups=n),label:"Groups",objs:e.groups,"group-type":"","title-key":"name"},null,8,["modelValue","objs"])],64)}const Le=k(Oe,[["render",Ue]]),He={name:"AdminLibrariesTab",components:{AdminDeleteRowDialog:J,AdminFailedImportsPanel:Ve,AdminCreateUpdateDialog:X,RelationChips:z,ConfirmDialog:H,DateTimeColumn:W},data(){return{lastUpdate:{pk:0,field:void 0},mdiDatabaseClockOutline:se,mdiDatabaseSyncOutline:ae,mdiOpenInNew:$,AdminLibraryCreateUpdateInputs:ie(Le),headers:[{title:"Path",key:"path",align:"start"},{title:"Watch File Events",key:"events"},{title:"Poll Files Periodically",key:"poll"},{title:"Poll Every",key:"pollEvery"},{title:"Last Poll",key:"lastPoll"},{title:"Groups",key:"groups"},{title:"Actions",key:"actions",sortable:!1}]}},computed:{...w(f,{groups:e=>e.groups,libraries:e=>e.libraries,formErrors:e=>e.form.errors}),...w(ce,{twentyFourHourTime:e=>e.settings.twentyFourHourTime})},mounted(){this.loadTables(["Group","Library","FailedImport"])},methods:{...v(f,["updateRow","clearErrors","librarianTask","loadTables"]),formatDateTime:e=>e?ne(e,(void 0).twentyFourHourTime):"",changeCol(e,t,m){this.lastUpdate.pk=e,this.lastUpdate.field=t;const h={[t]:m};this.updateRow("Library",e,h)},getFormErrors(e,t){if(e===this.lastUpdate.pk&&t===this.lastUpdate.field)return this.formErrors},poll(e){this.librarianTask("poll",`Poll Library ${e}`,e)},forcePoll(e){this.librarianTask("poll_force",`Force Poll Library ${e}`,e)}}},ze=e=>(j("data-v-4107b305"),e=e(),N(),e),$e={class:"tabHeader"},Be=ze(()=>r("td",{class:"adminNoData",colspan:"100%"}," Add a Library to start using Codex ",-1));function je(e,t,m,h,o,u){const i=b("AdminCreateUpdateDialog"),p=b("DateTimeColumn"),F=z,n=H,G=b("AdminDeleteRowDialog"),Y=b("AdminFailedImportsPanel");return c(),_("div",null,[r("header",$e,[l(i,{table:"Library",inputs:o.AdminLibraryCreateUpdateInputs},null,8,["inputs"])]),l(Z,{class:"adminTable","fixed-header":"","item-value":"pk",headers:o.headers,items:e.libraries,"sort-by":[{key:"path",order:"asc"}]},{"no-data":s(()=>[Be]),"item.events":s(({item:a})=>[l(U,{"model-value":a.events,disabled:""},null,8,["model-value"])]),"item.poll":s(({item:a})=>[l(U,{"model-value":a.poll,disabled:""},null,8,["model-value"])]),"item.pollEvery":s(({item:a})=>[r("span",{class:me({disabled:!a.poll})},g(a.pollEvery),3)]),"item.lastPoll":s(({item:a})=>[l(p,{dttm:a.lastPoll},null,8,["dttm"])]),"item.groups":s(({item:a})=>[l(F,{pks:a.groups,objs:e.groups,"group-type":"","title-key":"name"},null,8,["pks","objs"])]),"item.actions":s(({item:a})=>[l(n,{icon:o.mdiDatabaseClockOutline,"title-text":"Poll for updated comics","object-name":a.path,"confirm-text":"Poll Library",size:"small",density:"compact",onConfirm:q=>u.poll(a.pk)},null,8,["icon","object-name","onConfirm"]),l(n,{icon:o.mdiDatabaseSyncOutline,"title-text":"Force update every comic","object-name":a.path,"confirm-text":"Force Update",size:"small",density:"compact",onConfirm:q=>u.forcePoll(a.pk)},null,8,["icon","object-name","onConfirm"]),l(i,{table:"Library","old-row":a,inputs:o.AdminLibraryCreateUpdateInputs,"max-width":"22em",size:"small",density:"compact"},null,8,["old-row","inputs"]),l(G,{table:"Library",pk:a.pk,name:a.path,size:"small",density:"compact"},null,8,["pk","name"])]),_:2},1032,["headers","items"]),l(de,null,{default:s(()=>[l(Y)]),_:1})])}const rt=k(He,[["render",je],["__scopeId","data-v-4107b305"]]);export{rt as default};
