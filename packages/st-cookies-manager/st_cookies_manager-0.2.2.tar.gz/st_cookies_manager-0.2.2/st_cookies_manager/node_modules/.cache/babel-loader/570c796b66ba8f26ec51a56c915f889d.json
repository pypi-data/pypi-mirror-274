{"ast":null,"code":"// automatically generated by the FlatBuffers compiler, do not modify\nimport * as NS7624605610262437867 from './Schema';\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n *\n * @constructor\n */\nexport var org;\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class Footer {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Footer\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param Footer= obj\n           * @returns Footer\n           */\n          static getRootAsFooter(bb, obj) {\n            return (obj || new Footer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          /**\n           * @returns org.apache.arrow.flatbuf.MetadataVersion\n           */\n          version() {\n            let offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? ( /**  */this.bb.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n          }\n          /**\n           * @param org.apache.arrow.flatbuf.Schema= obj\n           * @returns org.apache.arrow.flatbuf.Schema|null\n           */\n          schema(obj) {\n            let offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Schema()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n          }\n          /**\n           * @param number index\n           * @param org.apache.arrow.flatbuf.Block= obj\n           * @returns org.apache.arrow.flatbuf.Block\n           */\n          dictionaries(index, obj) {\n            let offset = this.bb.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block()).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\n          }\n          /**\n           * @returns number\n           */\n          dictionariesLength() {\n            let offset = this.bb.__offset(this.bb_pos, 8);\n            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n          }\n          /**\n           * @param number index\n           * @param org.apache.arrow.flatbuf.Block= obj\n           * @returns org.apache.arrow.flatbuf.Block\n           */\n          recordBatches(index, obj) {\n            let offset = this.bb.__offset(this.bb_pos, 10);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block()).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\n          }\n          /**\n           * @returns number\n           */\n          recordBatchesLength() {\n            let offset = this.bb.__offset(this.bb_pos, 10);\n            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n          static startFooter(builder) {\n            builder.startObject(4);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param org.apache.arrow.flatbuf.MetadataVersion version\n           */\n          static addVersion(builder, version) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset schemaOffset\n           */\n          static addSchema(builder, schemaOffset) {\n            builder.addFieldOffset(1, schemaOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset dictionariesOffset\n           */\n          static addDictionaries(builder, dictionariesOffset) {\n            builder.addFieldOffset(2, dictionariesOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param number numElems\n           */\n          static startDictionariesVector(builder, numElems) {\n            builder.startVector(24, numElems, 8);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset recordBatchesOffset\n           */\n          static addRecordBatches(builder, recordBatchesOffset) {\n            builder.addFieldOffset(3, recordBatchesOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param number numElems\n           */\n          static startRecordBatchesVector(builder, numElems) {\n            builder.startVector(24, numElems, 8);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n          static endFooter(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset offset\n           */\n          static finishFooterBuffer(builder, offset) {\n            builder.finish(offset);\n          }\n          static createFooter(builder, version, schemaOffset, dictionariesOffset, recordBatchesOffset) {\n            Footer.startFooter(builder);\n            Footer.addVersion(builder, version);\n            Footer.addSchema(builder, schemaOffset);\n            Footer.addDictionaries(builder, dictionariesOffset);\n            Footer.addRecordBatches(builder, recordBatchesOffset);\n            return Footer.endFooter(builder);\n          }\n        }\n        flatbuf.Footer = Footer;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class Block {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Block\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * Index to the start of the RecordBlock (note this is past the Message header)\n           *\n           * @returns flatbuffers.Long\n           */\n          offset() {\n            return this.bb.readInt64(this.bb_pos);\n          }\n          /**\n           * Length of the metadata\n           *\n           * @returns number\n           */\n          metaDataLength() {\n            return this.bb.readInt32(this.bb_pos + 8);\n          }\n          /**\n           * Length of the data (this is aligned so there can be a gap between this and\n           * the metatdata).\n           *\n           * @returns flatbuffers.Long\n           */\n          bodyLength() {\n            return this.bb.readInt64(this.bb_pos + 16);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Long offset\n           * @param number metaDataLength\n           * @param flatbuffers.Long bodyLength\n           * @returns flatbuffers.Offset\n           */\n          static createBlock(builder, offset, metaDataLength, bodyLength) {\n            builder.prep(8, 24);\n            builder.writeInt64(bodyLength);\n            builder.pad(4);\n            builder.writeInt32(metaDataLength);\n            builder.writeInt64(offset);\n            return builder.offset();\n          }\n        }\n        flatbuf.Block = Block;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));","map":{"version":3,"sources":["fb/File.ts"],"names":[],"mappings":"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","sourcesContent":["// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Footer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Footer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Footer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Footer= obj\n         * @returns Footer\n         */\n        static getRootAsFooter(bb: flatbuffers.ByteBuffer, obj?: Footer): Footer {\n            return (obj || new Footer).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.Schema= obj\n         * @returns org.apache.arrow.flatbuf.Schema|null\n         */\n        schema(obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Schema): NS7624605610262437867.org.apache.arrow.flatbuf.Schema | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Schema).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        dictionaries(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        dictionariesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        recordBatches(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        recordBatchesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFooter(builder: flatbuffers.Builder) {\n            builder.startObject(4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset schemaOffset\n         */\n        static addSchema(builder: flatbuffers.Builder, schemaOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, schemaOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionariesOffset\n         */\n        static addDictionaries(builder: flatbuffers.Builder, dictionariesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, dictionariesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startDictionariesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset recordBatchesOffset\n         */\n        static addRecordBatches(builder: flatbuffers.Builder, recordBatchesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, recordBatchesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startRecordBatchesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFooter(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishFooterBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createFooter(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, schemaOffset: flatbuffers.Offset, dictionariesOffset: flatbuffers.Offset, recordBatchesOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Footer.startFooter(builder);\n            Footer.addVersion(builder, version);\n            Footer.addSchema(builder, schemaOffset);\n            Footer.addDictionaries(builder, dictionariesOffset);\n            Footer.addRecordBatches(builder, recordBatchesOffset);\n            return Footer.endFooter(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Block {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Block\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Block {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * Index to the start of the RecordBlock (note this is past the Message header)\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * Length of the metadata\n         *\n         * @returns number\n         */\n        metaDataLength(): number {\n            return this.bb!.readInt32(this.bb_pos + 8);\n        }\n\n        /**\n         * Length of the data (this is aligned so there can be a gap between this and\n         * the metatdata).\n         *\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 16);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param number metaDataLength\n         * @param flatbuffers.Long bodyLength\n         * @returns flatbuffers.Offset\n         */\n        static createBlock(builder: flatbuffers.Builder, offset: flatbuffers.Long, metaDataLength: number, bodyLength: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 24);\n            builder.writeInt64(bodyLength);\n            builder.pad(4);\n            builder.writeInt32(metaDataLength);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}