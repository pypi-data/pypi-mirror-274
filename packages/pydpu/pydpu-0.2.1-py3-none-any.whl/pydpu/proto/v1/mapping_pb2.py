# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: mapping.proto
# Protobuf Python Version: 4.25.2
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import networktypes_pb2 as networktypes__pb2
from google.api import resource_pb2 as google_dot_api_dot_resource__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\rmapping.proto\x12\x1eopi_api.network.cloud.v1alpha1\x1a\x12networktypes.proto\x1a\x19google/api/resource.proto\"\xe6\x01\n\x07Mapping\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12?\n\x04spec\x18\x02 \x01(\x0b\x32+.opi_api.network.cloud.v1alpha1.MappingSpecR\x04spec\x12\x45\n\x06status\x18\x03 \x01(\x0b\x32-.opi_api.network.cloud.v1alpha1.MappingStatusR\x06status:?\xea\x41<\n&opi_api.network.cloud.v1alpha1/mapping\x12\x12mappings/{mapping}\"\xdd\x04\n\x0bMappingSpec\x12\x45\n\x06ip_key\x18\x01 \x01(\x0b\x32,.opi_api.network.cloud.v1alpha1.L3MappingKeyH\x00R\x05ipKey\x12G\n\x07mac_key\x18\x02 \x01(\x0b\x32,.opi_api.network.cloud.v1alpha1.L2MappingKeyH\x00R\x06macKey\x12&\n\x0fsubnet_name_ref\x18\x03 \x01(\tR\rsubnetNameRef\x12$\n\rvnic_name_ref\x18\x04 \x01(\tH\x01R\x0bvnicNameRef\x12(\n\x0ftunnel_name_ref\x18\x05 \x01(\tH\x01R\rtunnelNameRef\x12+\n\x11nh_group_name_ref\x18\x06 \x01(\tH\x01R\x0enhGroupNameRef\x12\x19\n\x08mac_addr\x18\x07 \x01(\x0cR\x07macAddr\x12\x42\n\x05\x65ncap\x18\x08 \x01(\x0b\x32,.opi_api.network.opinetcommon.v1alpha1.EncapR\x05\x65ncap\x12M\n\tpublic_ip\x18\t \x01(\x0b\x32\x30.opi_api.network.opinetcommon.v1alpha1.IPAddressR\x08publicIp\x12\x12\n\x04tags\x18\n \x03(\rR\x04tags\x12?\n\x04type\x18\x0b \x01(\x0e\x32+.opi_api.network.cloud.v1alpha1.MappingTypeR\x04typeB\x0b\n\tmac_or_ipB\t\n\x07\x64stinfo\"\xa0\x03\n\rMappingStatus\x12(\n\x10public_nat_index\x18\x01 \x01(\x05R\x0epublicNatIndex\x12*\n\x11private_nat_index\x18\x02 \x01(\x05R\x0fprivateNatIndex\x12M\n\ttunnel_ip\x18\x03 \x03(\x0b\x32\x30.opi_api.network.opinetcommon.v1alpha1.IPAddressR\x08tunnelIp\x12\x63\n\x16svc_port_map_hw_handle\x18\x04 \x01(\x0b\x32/.opi_api.network.opinetcommon.v1alpha1.HwHandleR\x12svcPortMapHwHandle\x12`\n\x14vnf_tunnel_hw_handle\x18\x05 \x01(\x0b\x32/.opi_api.network.opinetcommon.v1alpha1.HwHandleR\x11vnfTunnelHwHandle\x12#\n\rrewrite_index\x18\x06 \x01(\x05R\x0crewriteIndex\"\x81\x01\n\x0cL3MappingKey\x12 \n\x0cvpc_name_ref\x18\x01 \x01(\tR\nvpcNameRef\x12O\n\nip_address\x18\x02 \x01(\x0b\x32\x30.opi_api.network.opinetcommon.v1alpha1.IPAddressR\tipAddress\"W\n\x0cL2MappingKey\x12&\n\x0fsubnet_name_ref\x18\x01 \x01(\tR\rsubnetNameRef\x12\x1f\n\x0bmac_address\x18\x02 \x01(\x0cR\nmacAddress\"\xee\x03\n\x13MappingLookupFilter\x12\x14\n\x05local\x18\x01 \x01(\x08R\x05local\x12I\n\x08key_type\x18\x02 \x01(\x0e\x32..opi_api.network.cloud.v1alpha1.MappingKeyTypeR\x07keyType\x12?\n\x04type\x18\x03 \x01(\x0e\x32+.opi_api.network.cloud.v1alpha1.MappingTypeR\x04type\x12\x45\n\x06ip_key\x18\x04 \x01(\x0b\x32,.opi_api.network.cloud.v1alpha1.L3MappingKeyH\x00R\x05ipKey\x12G\n\x07mac_key\x18\x05 \x01(\x0b\x32,.opi_api.network.cloud.v1alpha1.L2MappingKeyH\x00R\x06macKey\x12Q\n\nip_address\x18\x06 \x01(\x0b\x32\x30.opi_api.network.opinetcommon.v1alpha1.IPAddressH\x00R\tipAddress\x12!\n\x0bmac_address\x18\x07 \x01(\x0cH\x00R\nmacAddress\x12\"\n\x0cvpc_name_ref\x18\x08 \x01(\tH\x00R\nvpcNameRefB\x0b\n\tip_or_mac*t\n\x0bMappingType\x12\x1c\n\x18MAPPING_TYPE_UNSPECIFIED\x10\x00\x12\x14\n\x10MAPPING_TYPE_VPC\x10\x01\x12\x18\n\x14MAPPING_TYPE_SERVICE\x10\x02\x12\x17\n\x13MAPPING_TYPE_LB_VIP\x10\x03*d\n\x0eMappingKeyType\x12 \n\x1cMAPPING_KEY_TYPE_UNSPECIFIED\x10\x00\x12\x17\n\x13MAPPING_KEY_TYPE_L2\x10\x01\x12\x17\n\x13MAPPING_KEY_TYPE_L3\x10\x02\x42m\n\x1eopi_api.network.cloud.v1alpha1B\x0cMappingProtoP\x01Z;github.com/opiproject/opi-api/network/cloud/v1alpha1/gen/gob\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'mapping_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  _globals['DESCRIPTOR']._options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\036opi_api.network.cloud.v1alpha1B\014MappingProtoP\001Z;github.com/opiproject/opi-api/network/cloud/v1alpha1/gen/go'
  _globals['_MAPPING']._options = None
  _globals['_MAPPING']._serialized_options = b'\352A<\n&opi_api.network.cloud.v1alpha1/mapping\022\022mappings/{mapping}'
  _globals['_MAPPINGTYPE']._serialized_start=2074
  _globals['_MAPPINGTYPE']._serialized_end=2190
  _globals['_MAPPINGKEYTYPE']._serialized_start=2192
  _globals['_MAPPINGKEYTYPE']._serialized_end=2292
  _globals['_MAPPING']._serialized_start=97
  _globals['_MAPPING']._serialized_end=327
  _globals['_MAPPINGSPEC']._serialized_start=330
  _globals['_MAPPINGSPEC']._serialized_end=935
  _globals['_MAPPINGSTATUS']._serialized_start=938
  _globals['_MAPPINGSTATUS']._serialized_end=1354
  _globals['_L3MAPPINGKEY']._serialized_start=1357
  _globals['_L3MAPPINGKEY']._serialized_end=1486
  _globals['_L2MAPPINGKEY']._serialized_start=1488
  _globals['_L2MAPPINGKEY']._serialized_end=1575
  _globals['_MAPPINGLOOKUPFILTER']._serialized_start=1578
  _globals['_MAPPINGLOOKUPFILTER']._serialized_end=2072
# @@protoc_insertion_point(module_scope)
