# Generated file. To retain edits, remove this comment.

from itkwasm.pyodide import JsPackageConfig, JsPackage

from ._version import __version__
default_js_module = """data:text/javascript;base64,var hr=Object.defineProperty;var wr=(e,A)=>{for(var t in A)hr(e,t,{get:A[t],enumerable:!0})};var Rr=new Map([["bmp","bmp"],["dcm","gdcm"],["gipl","gipl"],["gipl.gz","gipl"],["hdf5","hdf5"],["jpg","jpeg"],["jpeg","jpeg"],["iwi","wasm"],["iwi.cbor","wasm"],["iwi.cbor.zst","wasmZstd"],["lsm","lsm"],["mnc","mnc"],["mnc.gz","mnc"],["mnc2","mnc"],["mgh","mgh"],["mgz","mgh"],["mgh.gz","mgh"],["mha","meta"],["mhd","meta"],["mrc","mrc"],["nia","nifti"],["nii","nifti"],["nii.gz","nifti"],["hdr","nifti"],["nrrd","nrrd"],["nhdr","nrrd"],["png","png"],["pic","bioRad"],["tif","tiff"],["tiff","tiff"],["vtk","vtk"],["isq","scanco"],["aim","scanco"],["fdf","fdf"]]),Y=Rr;var kr={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},h=kr;var br={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},b=br;function Dr(e,A){let t=null;switch(e){case h.UInt8:{t=new Uint8Array(A);break}case h.Int8:{t=new Int8Array(A);break}case h.UInt16:{t=new Uint16Array(A);break}case h.Int16:{t=new Int16Array(A);break}case h.UInt32:{t=new Uint32Array(A);break}case h.Int32:{t=new Int32Array(A);break}case h.UInt64:{typeof globalThis.BigUint64Array=="function"?t=new BigUint64Array(A):t=new Uint8Array(A);break}case h.Int64:{typeof globalThis.BigInt64Array=="function"?t=new BigInt64Array(A):t=new Uint8Array(A);break}case b.Float32:{t=new Float32Array(A);break}case b.Float64:{t=new Float64Array(A);break}case"null":{t=null;break}case null:{t=null;break}default:throw new Error("Type is not supported as a TypedArray")}return t}var N=Dr;var Wr={Unknown:"Unknown",Scalar:"Scalar",RGB:"RGB",RGBA:"RGBA",Offset:"Offset",Vector:"Vector",Point:"Point",CovariantVector:"CovariantVector",SymmetricSecondRankTensor:"SymmetricSecondRankTensor",DiffusionTensor3D:"DiffusionTensor3D",Complex:"Complex",FixedArray:"FixedArray",Array:"Array",Matrix:"Matrix",VariableLengthVector:"VariableLengthVector",VariableSizeMatrix:"VariableSizeMatrix"},me=Wr;var Pe=class{dimension;componentType;pixelType;components;constructor(A=2,t=h.UInt8,r=me.Scalar,o=1){this.dimension=A,this.componentType=t,this.pixelType=r,this.components=o}},It=Pe;function Fr(e,A,t,r,o){e[r+t*A]=o}var gt=Fr;var xe=class{imageType;name="image";origin;spacing;direction;size;metadata;data;constructor(A=new It){this.imageType=A;let t=A.dimension;this.origin=new Array(t),this.origin.fill(0),this.spacing=new Array(t),this.spacing.fill(1),this.direction=new Float64Array(t*t),this.direction.fill(0);for(let r=0;r<t;r++)gt(this.direction,t,r,r,1);this.size=new Array(t),this.size.fill(0),this.metadata=new Map,this.data=null}},K=xe;function Ur(e){let A=new K(e.imageType);if(A.name=e.name,A.origin=Array.from(e.origin),A.spacing=Array.from(e.spacing),A.direction=e.direction.slice(),A.size=Array.from(e.size),e.data!==null){let t=e.data.constructor;A.data=new t(e.data.length),A.data!=null&&A.data.set(e.data,0)}return A}var Ge=Ur;function Nr(e){if(e.length<1)throw Error("At least one images is required.");let A=e[0];if(A.data===null)throw Error("Image data is null.");let t=new K(A.imageType);t.origin=Array.from(A.origin),t.spacing=Array.from(A.spacing);let r=t.imageType.dimension;t.direction=A.direction.slice();let o=r-1;t.size=Array.from(A.size);let i=e.reduce((a,s)=>a+s.size[o],0);t.size[o]=i;let n=t.size.reduce((a,s)=>a*s,1)*t.imageType.components,m=A.data.constructor;t.data=new m(n);let f=t.imageType.components;for(let a=0;a<t.size.length-1;a++)f*=t.size[a];let p=0;if(t.data!=null)for(let a=0;a<e.length;a++)t.data.set(e[a].data,f*p),p+=e[a].size[o];else throw Error("Could not create result image data.");return t}var Te=Nr;function Sr(e){let A=e.slice((e.lastIndexOf(".")-1>>>0)+2);if(A.toLowerCase()==="gz"){let t=e.slice(0,-3).lastIndexOf(".");A=e.slice((t-1>>>0)+2)}else if(A.toLowerCase()==="cbor"){let t=e.slice(0,-5).lastIndexOf(".");A=e.slice((t-1>>>0)+2)}else if(A.toLowerCase()==="zst"){let t=e.slice(0,-10).lastIndexOf(".");A=e.slice((t-1>>>0)+2)}else if(A.toLowerCase()==="zip"){let t=e.slice(0,-4).lastIndexOf(".");A=e.slice((t-1>>>0)+2)}return A}var te=Sr;function Or(e,A){let t={...e.imageType};if(typeof A<"u"&&typeof A.pixelType<"u"&&(t.pixelType=A.pixelType,A.pixelType===me.Scalar&&t.components!==1))throw new Error("Cannot cast multi-component image to a scalar image");typeof A<"u"&&typeof A.componentType<"u"&&A.componentType!==e.imageType.componentType&&(t.componentType=A.componentType);let r=new K(t);if(r.name=e.name,r.origin=Array.from(e.origin),r.spacing=Array.from(e.spacing),r.direction=e.direction.slice(),r.size=Array.from(e.size),r.metadata=new Map(JSON.parse(JSON.stringify(Array.from(e.metadata)))),e.data!==null)if(typeof A<"u"&&typeof A.componentType<"u"&&A.componentType!==e.imageType.componentType)switch(e.imageType.componentType){case h.UInt8:case h.Int8:case h.UInt16:case h.Int16:case h.UInt32:case h.Int32:case b.Float32:case b.Float64:switch(r.imageType.componentType){case h.UInt8:r.data=new Uint8Array(e.data);break;case h.Int8:r.data=new Int8Array(e.data);break;case h.UInt16:r.data=new Uint16Array(e.data);break;case h.Int16:r.data=new Int16Array(e.data);break;case h.UInt32:r.data=new Uint32Array(e.data);break;case h.Int32:r.data=new Int32Array(e.data);break;case b.Float32:r.data=new Float32Array(e.data);break;case b.Float64:r.data=new Float64Array(e.data);break;case h.UInt64:r.data=new BigUint64Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=BigInt.asIntN(64,BigInt(e.data[o]));break;case h.Int64:r.data=new BigInt64Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=BigInt.asUintN(64,BigInt(e.data[o]));break}break;case h.UInt64:case h.Int64:switch(r.imageType.componentType){case h.UInt8:r.data=new Uint8Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case h.Int8:r.data=new Int8Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case h.UInt16:r.data=new Uint16Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case h.Int16:r.data=new Int16Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case h.UInt32:r.data=new Uint32Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case h.Int32:r.data=new Int32Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case b.Float32:r.data=new Float32Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case b.Float64:r.data=new Float64Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case h.UInt64:r.data=new BigUint64Array(e.data);break;case h.Int64:r.data=new BigInt64Array(e.data);break}break}else{let o=e.data.constructor;r.data=new o(e.data.length),r.data!=null&&r.data.set(e.data,0)}return r}var J=Or;var Je=class{fcn;workerQueue;runInfo;constructor(A,t){this.fcn=t,this.workerQueue=new Array(A),this.workerQueue.fill(null),this.runInfo=[]}runTasks(A,t=null){let r={taskQueue:[],results:[],addingTasks:!1,postponed:!1,runningWorkers:0,index:0,completedTasks:0,progressCallback:t,canceled:!1};return this.runInfo.push(r),r.index=this.runInfo.length-1,{promise:new Promise((o,i)=>{r.resolve=o,r.reject=i,r.results=new Array(A.length),r.completedTasks=0,r.addingTasks=!0,A.forEach((n,m)=>{this.addTask(r.index,m,n)}),r.addingTasks=!1}),runId:r.index}}terminateWorkers(){for(let A=0;A<this.workerQueue.length;A++){let t=this.workerQueue[A];t?.terminate(),this.workerQueue[A]=null}}cancel(A){let t=this.runInfo[A];t!=null&&(t.canceled=!0)}addTask(A,t,r){let o=this.runInfo[A];if(o?.canceled===!0){o.reject("Remaining tasks canceled"),this.clearTask(o.index);return}if(this.workerQueue.length>0){let i=this.workerQueue.pop();o.runningWorkers++,r[r.length-1].webWorker=i,this.fcn(...r).then(({webWorker:n,...m})=>{if(this.workerQueue.push(n),this.runInfo[A]!==null){if(o.runningWorkers--,o.results[t]=m,o.completedTasks++,o.progressCallback!=null&&o.progressCallback(o.completedTasks,o.results.length),o.taskQueue.length>0){let f=o.taskQueue.shift();this.addTask(A,f[0],f[1])}else if(!o.addingTasks&&o.runningWorkers===0){let f=o.results;o.resolve(f),this.clearTask(o.index)}}}).catch(n=>{o.reject(n),this.clearTask(o.index)})}else o.runningWorkers!==0||o.postponed?o.taskQueue.push([t,r]):(o.postponed=!0,setTimeout(()=>{o.postponed=!1,this.addTask(o.index,t,r)},50))}clearTask(A){this.runInfo[A].results=[],this.runInfo[A].taskQueue=[],this.runInfo[A].progressCallback=null,this.runInfo[A].canceled=null,this.runInfo[A].reject=()=>{},this.runInfo[A].resolve=()=>{}}},Le=Je;var Pr={TextFile:"TextFile",BinaryFile:"BinaryFile",TextStream:"TextStream",BinaryStream:"BinaryStream",Image:"Image",Mesh:"Mesh",PolyData:"PolyData",JsonCompatible:"JsonCompatible"},g=Pr;var pt=Symbol("Comlink.proxy"),xr=Symbol("Comlink.endpoint"),Ye=Symbol("Comlink.releaseProxy"),Me=Symbol("Comlink.finalizer"),fe=Symbol("Comlink.thrown"),mt=e=>typeof e=="object"&&e!==null||typeof e=="function",Gr={canHandle:e=>mt(e)&&e[pt],serialize(e){let{port1:A,port2:t}=new MessageChannel;return ft(e,A),[t,[t]]},deserialize(e){return e.start(),qe(e)}},Tr={canHandle:e=>mt(e)&&fe in e,serialize({value:e}){let A;return e instanceof Error?A={isError:!0,value:{message:e.message,name:e.name,stack:e.stack}}:A={isError:!1,value:e},[A,[]]},deserialize(e){throw e.isError?Object.assign(new Error(e.value.message),e.value):e.value}},ut=new Map([["proxy",Gr],["throw",Tr]]);function Jr(e,A){for(let t of e)if(A===t||t==="*"||t instanceof RegExp&&t.test(A))return!0;return!1}function ft(e,A=globalThis,t=["*"]){A.addEventListener("message",function r(o){if(!o||!o.data)return;if(!Jr(t,o.origin)){console.warn(`Invalid origin '${o.origin}' for comlink proxy`);return}let{id:i,type:n,path:m}=Object.assign({path:[]},o.data),f=(o.data.argumentList||[]).map(q),p;try{let a=m.slice(0,-1).reduce((u,I)=>u[I],e),s=m.reduce((u,I)=>u[I],e);switch(n){case"GET":p=s;break;case"SET":a[m.slice(-1)[0]]=q(o.data.value),p=!0;break;case"APPLY":p=s.apply(a,f);break;case"CONSTRUCT":{let u=new s(...f);p=qr(u)}break;case"ENDPOINT":{let{port1:u,port2:I}=new MessageChannel;ft(e,I),p=Ke(u,[u])}break;case"RELEASE":p=void 0;break;default:return}}catch(a){p={value:a,[fe]:0}}Promise.resolve(p).catch(a=>({value:a,[fe]:0})).then(a=>{let[s,u]=de(a);A.postMessage(Object.assign(Object.assign({},s),{id:i}),u),n==="RELEASE"&&(A.removeEventListener("message",r),ct(A),Me in e&&typeof e[Me]=="function"&&e[Me]())}).catch(a=>{let[s,u]=de({value:new TypeError("Unserializable return value"),[fe]:0});A.postMessage(Object.assign(Object.assign({},s),{id:i}),u)})}),A.start&&A.start()}function Lr(e){return e.constructor.name==="MessagePort"}function ct(e){Lr(e)&&e.close()}function qe(e,A){return He(e,[],A)}function ue(e){if(e)throw new Error("Proxy has been released and is not useable")}function Bt(e){return j(e,{type:"RELEASE"}).then(()=>{ct(e)})}var ce=new WeakMap,Be="FinalizationRegistry"in globalThis&&new FinalizationRegistry(e=>{let A=(ce.get(e)||0)-1;ce.set(e,A),A===0&&Bt(e)});function Mr(e,A){let t=(ce.get(A)||0)+1;ce.set(A,t),Be&&Be.register(e,A,e)}function Hr(e){Be&&Be.unregister(e)}function He(e,A=[],t=function(){}){let r=!1,o=new Proxy(t,{get(i,n){if(ue(r),n===Ye)return()=>{Hr(o),Bt(e),r=!0};if(n==="then"){if(A.length===0)return{then:()=>o};let m=j(e,{type:"GET",path:A.map(f=>f.toString())}).then(q);return m.then.bind(m)}return He(e,[...A,n])},set(i,n,m){ue(r);let[f,p]=de(m);return j(e,{type:"SET",path:[...A,n].map(a=>a.toString()),value:f},p).then(q)},apply(i,n,m){ue(r);let f=A[A.length-1];if(f===xr)return j(e,{type:"ENDPOINT"}).then(q);if(f==="bind")return He(e,A.slice(0,-1));let[p,a]=lt(m);return j(e,{type:"APPLY",path:A.map(s=>s.toString()),argumentList:p},a).then(q)},construct(i,n){ue(r);let[m,f]=lt(n);return j(e,{type:"CONSTRUCT",path:A.map(p=>p.toString()),argumentList:m},f).then(q)}});return Mr(o,e),o}function Yr(e){return Array.prototype.concat.apply([],e)}function lt(e){let A=e.map(de);return[A.map(t=>t[0]),Yr(A.map(t=>t[1]))]}var dt=new WeakMap;function Ke(e,A){return dt.set(e,A),e}function qr(e){return Object.assign(e,{[pt]:!0})}function de(e){for(let[A,t]of ut)if(t.canHandle(e)){let[r,o]=t.serialize(e);return[{type:"HANDLER",name:A,value:r},o]}return[{type:"RAW",value:e},dt.get(e)||[]]}function q(e){switch(e.type){case"HANDLER":return ut.get(e.name).deserialize(e.value);case"RAW":return e.value}}function j(e,A,t){return new Promise(r=>{let o=Kr();e.addEventListener("message",function i(n){!n.data||!n.data.id||n.data.id!==o||(e.removeEventListener("message",i),r(n.data))}),e.start&&e.start(),e.postMessage(Object.assign({id:o},A),t)})}function Kr(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function re(e,A){return function(){return e.apply(A,arguments)}}var{toString:jr}=Object.prototype,{getPrototypeOf:ze}=Object,Ee=(e=>A=>{let t=jr.call(A);return e[t]||(e[t]=t.slice(8,-1).toLowerCase())})(Object.create(null)),x=e=>(e=e.toLowerCase(),A=>Ee(A)===e),ye=e=>A=>typeof A===e,{isArray:v}=Array,ie=ye("undefined");function vr(e){return e!==null&&!ie(e)&&e.constructor!==null&&!ie(e.constructor)&&S(e.constructor.isBuffer)&&e.constructor.isBuffer(e)}var Qt=x("ArrayBuffer");function zr(e){let A;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?A=ArrayBuffer.isView(e):A=e&&e.buffer&&Qt(e.buffer),A}var _r=ye("string"),S=ye("function"),ht=ye("number"),Qe=e=>e!==null&&typeof e=="object",Vr=e=>e===!0||e===!1,Ce=e=>{if(Ee(e)!=="object")return!1;let A=ze(e);return(A===null||A===Object.prototype||Object.getPrototypeOf(A)===null)&&!(Symbol.toStringTag in e)&&!(Symbol.iterator in e)},Zr=x("Date"),Xr=x("File"),$r=x("Blob"),ei=x("FileList"),Ai=e=>Qe(e)&&S(e.pipe),ti=e=>{let A;return e&&(typeof FormData=="function"&&e instanceof FormData||S(e.append)&&((A=Ee(e))==="formdata"||A==="object"&&S(e.toString)&&e.toString()==="[object FormData]"))},ri=x("URLSearchParams"),ii=e=>e.trim?e.trim():e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"");function oe(e,A,{allOwnKeys:t=!1}={}){if(e===null||typeof e>"u")return;let r,o;if(typeof e!="object"&&(e=[e]),v(e))for(r=0,o=e.length;r<o;r++)A.call(null,e[r],r,e);else{let i=t?Object.getOwnPropertyNames(e):Object.keys(e),n=i.length,m;for(r=0;r<n;r++)m=i[r],A.call(null,e[m],m,e)}}function wt(e,A){A=A.toLowerCase();let t=Object.keys(e),r=t.length,o;for(;r-- >0;)if(o=t[r],A===o.toLowerCase())return o;return null}var Rt=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,kt=e=>!ie(e)&&e!==Rt;function ve(){let{caseless:e}=kt(this)&&this||{},A={},t=(r,o)=>{let i=e&&wt(A,o)||o;Ce(A[i])&&Ce(r)?A[i]=ve(A[i],r):Ce(r)?A[i]=ve({},r):v(r)?A[i]=r.slice():A[i]=r};for(let r=0,o=arguments.length;r<o;r++)arguments[r]&&oe(arguments[r],t);return A}var oi=(e,A,t,{allOwnKeys:r}={})=>(oe(A,(o,i)=>{t&&S(o)?e[i]=re(o,t):e[i]=o},{allOwnKeys:r}),e),ai=e=>(e.charCodeAt(0)===65279&&(e=e.slice(1)),e),ni=(e,A,t,r)=>{e.prototype=Object.create(A.prototype,r),e.prototype.constructor=e,Object.defineProperty(e,"super",{value:A.prototype}),t&&Object.assign(e.prototype,t)},si=(e,A,t,r)=>{let o,i,n,m={};if(A=A||{},e==null)return A;do{for(o=Object.getOwnPropertyNames(e),i=o.length;i-- >0;)n=o[i],(!r||r(n,e,A))&&!m[n]&&(A[n]=e[n],m[n]=!0);e=t!==!1&&ze(e)}while(e&&(!t||t(e,A))&&e!==Object.prototype);return A},Ii=(e,A,t)=>{e=String(e),(t===void 0||t>e.length)&&(t=e.length),t-=A.length;let r=e.indexOf(A,t);return r!==-1&&r===t},gi=e=>{if(!e)return null;if(v(e))return e;let A=e.length;if(!ht(A))return null;let t=new Array(A);for(;A-- >0;)t[A]=e[A];return t},li=(e=>A=>e&&A instanceof e)(typeof Uint8Array<"u"&&ze(Uint8Array)),pi=(e,A)=>{let r=(e&&e[Symbol.iterator]).call(e),o;for(;(o=r.next())&&!o.done;){let i=o.value;A.call(e,i[0],i[1])}},mi=(e,A)=>{let t,r=[];for(;(t=e.exec(A))!==null;)r.push(t);return r},ui=x("HTMLFormElement"),fi=e=>e.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function(t,r,o){return r.toUpperCase()+o}),Et=(({hasOwnProperty:e})=>(A,t)=>e.call(A,t))(Object.prototype),ci=x("RegExp"),bt=(e,A)=>{let t=Object.getOwnPropertyDescriptors(e),r={};oe(t,(o,i)=>{let n;(n=A(o,i,e))!==!1&&(r[i]=n||o)}),Object.defineProperties(e,r)},Bi=e=>{bt(e,(A,t)=>{if(S(e)&&["arguments","caller","callee"].indexOf(t)!==-1)return!1;let r=e[t];if(S(r)){if(A.enumerable=!1,"writable"in A){A.writable=!1;return}A.set||(A.set=()=>{throw Error("Can not rewrite read-only method '"+t+"'")})}})},di=(e,A)=>{let t={},r=o=>{o.forEach(i=>{t[i]=!0})};return v(e)?r(e):r(String(e).split(A)),t},Ci=()=>{},Ei=(e,A)=>(e=+e,Number.isFinite(e)?e:A),je="abcdefghijklmnopqrstuvwxyz",yt="0123456789",Dt={DIGIT:yt,ALPHA:je,ALPHA_DIGIT:je+je.toUpperCase()+yt},yi=(e=16,A=Dt.ALPHA_DIGIT)=>{let t="",{length:r}=A;for(;e--;)t+=A[Math.random()*r|0];return t};function Qi(e){return!!(e&&S(e.append)&&e[Symbol.toStringTag]==="FormData"&&e[Symbol.iterator])}var hi=e=>{let A=new Array(10),t=(r,o)=>{if(Qe(r)){if(A.indexOf(r)>=0)return;if(!("toJSON"in r)){A[o]=r;let i=v(r)?[]:{};return oe(r,(n,m)=>{let f=t(n,o+1);!ie(f)&&(i[m]=f)}),A[o]=void 0,i}}return r};return t(e,0)},wi=x("AsyncFunction"),Ri=e=>e&&(Qe(e)||S(e))&&S(e.then)&&S(e.catch),c={isArray:v,isArrayBuffer:Qt,isBuffer:vr,isFormData:ti,isArrayBufferView:zr,isString:_r,isNumber:ht,isBoolean:Vr,isObject:Qe,isPlainObject:Ce,isUndefined:ie,isDate:Zr,isFile:Xr,isBlob:$r,isRegExp:ci,isFunction:S,isStream:Ai,isURLSearchParams:ri,isTypedArray:li,isFileList:ei,forEach:oe,merge:ve,extend:oi,trim:ii,stripBOM:ai,inherits:ni,toFlatObject:si,kindOf:Ee,kindOfTest:x,endsWith:Ii,toArray:gi,forEachEntry:pi,matchAll:mi,isHTMLForm:ui,hasOwnProperty:Et,hasOwnProp:Et,reduceDescriptors:bt,freezeMethods:Bi,toObjectSet:di,toCamelCase:fi,noop:Ci,toFiniteNumber:Ei,findKey:wt,global:Rt,isContextDefined:kt,ALPHABET:Dt,generateString:yi,isSpecCompliantForm:Qi,toJSONObject:hi,isAsyncFn:wi,isThenable:Ri};function z(e,A,t,r,o){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=e,this.name="AxiosError",A&&(this.code=A),t&&(this.config=t),r&&(this.request=r),o&&(this.response=o)}c.inherits(z,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:c.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var Wt=z.prototype,Ft={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(e=>{Ft[e]={value:e}});Object.defineProperties(z,Ft);Object.defineProperty(Wt,"isAxiosError",{value:!0});z.from=(e,A,t,r,o,i)=>{let n=Object.create(Wt);return c.toFlatObject(e,n,function(f){return f!==Error.prototype},m=>m!=="isAxiosError"),z.call(n,e.message,A,t,r,o),n.cause=e,n.name=e.name,i&&Object.assign(n,i),n};var w=z;var he=null;function _e(e){return c.isPlainObject(e)||c.isArray(e)}function Nt(e){return c.endsWith(e,"[]")?e.slice(0,-2):e}function Ut(e,A,t){return e?e.concat(A).map(function(o,i){return o=Nt(o),!t&&i?"["+o+"]":o}).join(t?".":""):A}function ki(e){return c.isArray(e)&&!e.some(_e)}var bi=c.toFlatObject(c,{},null,function(A){return/^is[A-Z]/.test(A)});function Di(e,A,t){if(!c.isObject(e))throw new TypeError("target must be an object");A=A||new(he||FormData),t=c.toFlatObject(t,{metaTokens:!0,dots:!1,indexes:!1},!1,function(B,Q){return!c.isUndefined(Q[B])});let r=t.metaTokens,o=t.visitor||a,i=t.dots,n=t.indexes,f=(t.Blob||typeof Blob<"u"&&Blob)&&c.isSpecCompliantForm(A);if(!c.isFunction(o))throw new TypeError("visitor must be a function");function p(l){if(l===null)return"";if(c.isDate(l))return l.toISOString();if(!f&&c.isBlob(l))throw new w("Blob is not supported. Use a Buffer instead.");return c.isArrayBuffer(l)||c.isTypedArray(l)?f&&typeof Blob=="function"?new Blob([l]):Buffer.from(l):l}function a(l,B,Q){let R=l;if(l&&!Q&&typeof l=="object"){if(c.endsWith(B,"{}"))B=r?B:B.slice(0,-2),l=JSON.stringify(l);else if(c.isArray(l)&&ki(l)||(c.isFileList(l)||c.endsWith(B,"[]"))&&(R=c.toArray(l)))return B=Nt(B),R.forEach(function(P,Qr){!(c.isUndefined(P)||P===null)&&A.append(n===!0?Ut([B],Qr,i):n===null?B:B+"[]",p(P))}),!1}return _e(l)?!0:(A.append(Ut(Q,B,i),p(l)),!1)}let s=[],u=Object.assign(bi,{defaultVisitor:a,convertValue:p,isVisitable:_e});function I(l,B){if(!c.isUndefined(l)){if(s.indexOf(l)!==-1)throw Error("Circular reference detected in "+B.join("."));s.push(l),c.forEach(l,function(R,O){(!(c.isUndefined(R)||R===null)&&o.call(A,R,c.isString(O)?O.trim():O,B,u))===!0&&I(R,B?B.concat(O):[O])}),s.pop()}}if(!c.isObject(e))throw new TypeError("data must be an object");return I(e),A}var L=Di;function St(e){let A={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g,function(r){return A[r]})}function Ot(e,A){this._pairs=[],e&&L(e,this,A)}var Pt=Ot.prototype;Pt.append=function(A,t){this._pairs.push([A,t])};Pt.toString=function(A){let t=A?function(r){return A.call(this,r,St)}:St;return this._pairs.map(function(o){return t(o[0])+"="+t(o[1])},"").join("&")};var we=Ot;function Wi(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function ae(e,A,t){if(!A)return e;let r=t&&t.encode||Wi,o=t&&t.serialize,i;if(o?i=o(A,t):i=c.isURLSearchParams(A)?A.toString():new we(A,t).toString(r),i){let n=e.indexOf("#");n!==-1&&(e=e.slice(0,n)),e+=(e.indexOf("?")===-1?"?":"&")+i}return e}var Ve=class{constructor(){this.handlers=[]}use(A,t,r){return this.handlers.push({fulfilled:A,rejected:t,synchronous:r?r.synchronous:!1,runWhen:r?r.runWhen:null}),this.handlers.length-1}eject(A){this.handlers[A]&&(this.handlers[A]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(A){c.forEach(this.handlers,function(r){r!==null&&A(r)})}},Ze=Ve;var Re={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var xt=typeof URLSearchParams<"u"?URLSearchParams:we;var Gt=typeof FormData<"u"?FormData:null;var Tt=typeof Blob<"u"?Blob:null;var Jt={isBrowser:!0,classes:{URLSearchParams:xt,FormData:Gt,Blob:Tt},protocols:["http","https","file","blob","url","data"]};var Xe={};wr(Xe,{hasBrowserEnv:()=>Lt,hasStandardBrowserEnv:()=>Fi,hasStandardBrowserWebWorkerEnv:()=>Ui});var Lt=typeof window<"u"&&typeof document<"u",Fi=(e=>Lt&&["ReactNative","NativeScript","NS"].indexOf(e)<0)(typeof navigator<"u"&&navigator.product),Ui=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function";var W={...Xe,...Jt};function $e(e,A){return L(e,new W.classes.URLSearchParams,Object.assign({visitor:function(t,r,o,i){return W.isNode&&c.isBuffer(t)?(this.append(r,t.toString("base64")),!1):i.defaultVisitor.apply(this,arguments)}},A))}function Ni(e){return c.matchAll(/\w+|\[(\w*)]/g,e).map(A=>A[0]==="[]"?"":A[1]||A[0])}function Si(e){let A={},t=Object.keys(e),r,o=t.length,i;for(r=0;r<o;r++)i=t[r],A[i]=e[i];return A}function Oi(e){function A(t,r,o,i){let n=t[i++];if(n==="__proto__")return!0;let m=Number.isFinite(+n),f=i>=t.length;return n=!n&&c.isArray(o)?o.length:n,f?(c.hasOwnProp(o,n)?o[n]=[o[n],r]:o[n]=r,!m):((!o[n]||!c.isObject(o[n]))&&(o[n]=[]),A(t,r,o[n],i)&&c.isArray(o[n])&&(o[n]=Si(o[n])),!m)}if(c.isFormData(e)&&c.isFunction(e.entries)){let t={};return c.forEachEntry(e,(r,o)=>{A(Ni(r),o,t,0)}),t}return null}var ke=Oi;function Pi(e,A,t){if(c.isString(e))try{return(A||JSON.parse)(e),c.trim(e)}catch(r){if(r.name!=="SyntaxError")throw r}return(t||JSON.stringify)(e)}var eA={transitional:Re,adapter:["xhr","http"],transformRequest:[function(A,t){let r=t.getContentType()||"",o=r.indexOf("application/json")>-1,i=c.isObject(A);if(i&&c.isHTMLForm(A)&&(A=new FormData(A)),c.isFormData(A))return o?JSON.stringify(ke(A)):A;if(c.isArrayBuffer(A)||c.isBuffer(A)||c.isStream(A)||c.isFile(A)||c.isBlob(A))return A;if(c.isArrayBufferView(A))return A.buffer;if(c.isURLSearchParams(A))return t.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),A.toString();let m;if(i){if(r.indexOf("application/x-www-form-urlencoded")>-1)return $e(A,this.formSerializer).toString();if((m=c.isFileList(A))||r.indexOf("multipart/form-data")>-1){let f=this.env&&this.env.FormData;return L(m?{"files[]":A}:A,f&&new f,this.formSerializer)}}return i||o?(t.setContentType("application/json",!1),Pi(A)):A}],transformResponse:[function(A){let t=this.transitional||eA.transitional,r=t&&t.forcedJSONParsing,o=this.responseType==="json";if(A&&c.isString(A)&&(r&&!this.responseType||o)){let n=!(t&&t.silentJSONParsing)&&o;try{return JSON.parse(A)}catch(m){if(n)throw m.name==="SyntaxError"?w.from(m,w.ERR_BAD_RESPONSE,this,null,this.response):m}}return A}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:W.classes.FormData,Blob:W.classes.Blob},validateStatus:function(A){return A>=200&&A<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};c.forEach(["delete","get","head","post","put","patch"],e=>{eA.headers[e]={}});var _=eA;var xi=c.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),Mt=e=>{let A={},t,r,o;return e&&e.split(`
`).forEach(function(n){o=n.indexOf(":"),t=n.substring(0,o).trim().toLowerCase(),r=n.substring(o+1).trim(),!(!t||A[t]&&xi[t])&&(t==="set-cookie"?A[t]?A[t].push(r):A[t]=[r]:A[t]=A[t]?A[t]+", "+r:r)}),A};var Ht=Symbol("internals");function ne(e){return e&&String(e).trim().toLowerCase()}function be(e){return e===!1||e==null?e:c.isArray(e)?e.map(be):String(e)}function Gi(e){let A=Object.create(null),t=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g,r;for(;r=t.exec(e);)A[r[1]]=r[2];return A}var Ti=e=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim());function AA(e,A,t,r,o){if(c.isFunction(r))return r.call(this,A,t);if(o&&(A=t),!!c.isString(A)){if(c.isString(r))return A.indexOf(r)!==-1;if(c.isRegExp(r))return r.test(A)}}function Ji(e){return e.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(A,t,r)=>t.toUpperCase()+r)}function Li(e,A){let t=c.toCamelCase(" "+A);["get","set","has"].forEach(r=>{Object.defineProperty(e,r+t,{value:function(o,i,n){return this[r].call(this,A,o,i,n)},configurable:!0})})}var V=class{constructor(A){A&&this.set(A)}set(A,t,r){let o=this;function i(m,f,p){let a=ne(f);if(!a)throw new Error("header name must be a non-empty string");let s=c.findKey(o,a);(!s||o[s]===void 0||p===!0||p===void 0&&o[s]!==!1)&&(o[s||f]=be(m))}let n=(m,f)=>c.forEach(m,(p,a)=>i(p,a,f));return c.isPlainObject(A)||A instanceof this.constructor?n(A,t):c.isString(A)&&(A=A.trim())&&!Ti(A)?n(Mt(A),t):A!=null&&i(t,A,r),this}get(A,t){if(A=ne(A),A){let r=c.findKey(this,A);if(r){let o=this[r];if(!t)return o;if(t===!0)return Gi(o);if(c.isFunction(t))return t.call(this,o,r);if(c.isRegExp(t))return t.exec(o);throw new TypeError("parser must be boolean|regexp|function")}}}has(A,t){if(A=ne(A),A){let r=c.findKey(this,A);return!!(r&&this[r]!==void 0&&(!t||AA(this,this[r],r,t)))}return!1}delete(A,t){let r=this,o=!1;function i(n){if(n=ne(n),n){let m=c.findKey(r,n);m&&(!t||AA(r,r[m],m,t))&&(delete r[m],o=!0)}}return c.isArray(A)?A.forEach(i):i(A),o}clear(A){let t=Object.keys(this),r=t.length,o=!1;for(;r--;){let i=t[r];(!A||AA(this,this[i],i,A,!0))&&(delete this[i],o=!0)}return o}normalize(A){let t=this,r={};return c.forEach(this,(o,i)=>{let n=c.findKey(r,i);if(n){t[n]=be(o),delete t[i];return}let m=A?Ji(i):String(i).trim();m!==i&&delete t[i],t[m]=be(o),r[m]=!0}),this}concat(...A){return this.constructor.concat(this,...A)}toJSON(A){let t=Object.create(null);return c.forEach(this,(r,o)=>{r!=null&&r!==!1&&(t[o]=A&&c.isArray(r)?r.join(", "):r)}),t}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([A,t])=>A+": "+t).join(`
`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(A){return A instanceof this?A:new this(A)}static concat(A,...t){let r=new this(A);return t.forEach(o=>r.set(o)),r}static accessor(A){let r=(this[Ht]=this[Ht]={accessors:{}}).accessors,o=this.prototype;function i(n){let m=ne(n);r[m]||(Li(o,n),r[m]=!0)}return c.isArray(A)?A.forEach(i):i(A),this}};V.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);c.reduceDescriptors(V.prototype,({value:e},A)=>{let t=A[0].toUpperCase()+A.slice(1);return{get:()=>e,set(r){this[t]=r}}});c.freezeMethods(V);var F=V;function se(e,A){let t=this||_,r=A||t,o=F.from(r.headers),i=r.data;return c.forEach(e,function(m){i=m.call(t,i,o.normalize(),A?A.status:void 0)}),o.normalize(),i}function Ie(e){return!!(e&&e.__CANCEL__)}function Yt(e,A,t){w.call(this,e??"canceled",w.ERR_CANCELED,A,t),this.name="CanceledError"}c.inherits(Yt,w,{__CANCEL__:!0});var M=Yt;function tA(e,A,t){let r=t.config.validateStatus;!t.status||!r||r(t.status)?e(t):A(new w("Request failed with status code "+t.status,[w.ERR_BAD_REQUEST,w.ERR_BAD_RESPONSE][Math.floor(t.status/100)-4],t.config,t.request,t))}var qt=W.hasStandardBrowserEnv?{write(e,A,t,r,o,i){let n=[e+"="+encodeURIComponent(A)];c.isNumber(t)&&n.push("expires="+new Date(t).toGMTString()),c.isString(r)&&n.push("path="+r),c.isString(o)&&n.push("domain="+o),i===!0&&n.push("secure"),document.cookie=n.join("; ")},read(e){let A=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return A?decodeURIComponent(A[3]):null},remove(e){this.write(e,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function rA(e){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(e)}function iA(e,A){return A?e.replace(/\/?\/$/,"")+"/"+A.replace(/^\/+/,""):e}function ge(e,A){return e&&!rA(A)?iA(e,A):A}var Kt=W.hasStandardBrowserEnv?function(){let A=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a"),r;function o(i){let n=i;return A&&(t.setAttribute("href",n),n=t.href),t.setAttribute("href",n),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:t.pathname.charAt(0)==="/"?t.pathname:"/"+t.pathname}}return r=o(window.location.href),function(n){let m=c.isString(n)?o(n):n;return m.protocol===r.protocol&&m.host===r.host}}():function(){return function(){return!0}}();function oA(e){let A=/^([-+\w]{1,25})(:?\/\/|:)/.exec(e);return A&&A[1]||""}function Mi(e,A){e=e||10;let t=new Array(e),r=new Array(e),o=0,i=0,n;return A=A!==void 0?A:1e3,function(f){let p=Date.now(),a=r[i];n||(n=p),t[o]=f,r[o]=p;let s=i,u=0;for(;s!==o;)u+=t[s++],s=s%e;if(o=(o+1)%e,o===i&&(i=(i+1)%e),p-n<A)return;let I=a&&p-a;return I?Math.round(u*1e3/I):void 0}}var jt=Mi;function vt(e,A){let t=0,r=jt(50,250);return o=>{let i=o.loaded,n=o.lengthComputable?o.total:void 0,m=i-t,f=r(m),p=i<=n;t=i;let a={loaded:i,total:n,progress:n?i/n:void 0,bytes:m,rate:f||void 0,estimated:f&&n&&p?(n-i)/f:void 0,event:o};a[A?"download":"upload"]=!0,e(a)}}var Hi=typeof XMLHttpRequest<"u",zt=Hi&&function(e){return new Promise(function(t,r){let o=e.data,i=F.from(e.headers).normalize(),{responseType:n,withXSRFToken:m}=e,f;function p(){e.cancelToken&&e.cancelToken.unsubscribe(f),e.signal&&e.signal.removeEventListener("abort",f)}let a;if(c.isFormData(o)){if(W.hasStandardBrowserEnv||W.hasStandardBrowserWebWorkerEnv)i.setContentType(!1);else if((a=i.getContentType())!==!1){let[B,...Q]=a?a.split(";").map(R=>R.trim()).filter(Boolean):[];i.setContentType([B||"multipart/form-data",...Q].join("; "))}}let s=new XMLHttpRequest;if(e.auth){let B=e.auth.username||"",Q=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";i.set("Authorization","Basic "+btoa(B+":"+Q))}let u=ge(e.baseURL,e.url);s.open(e.method.toUpperCase(),ae(u,e.params,e.paramsSerializer),!0),s.timeout=e.timeout;function I(){if(!s)return;let B=F.from("getAllResponseHeaders"in s&&s.getAllResponseHeaders()),R={data:!n||n==="text"||n==="json"?s.responseText:s.response,status:s.status,statusText:s.statusText,headers:B,config:e,request:s};tA(function(P){t(P),p()},function(P){r(P),p()},R),s=null}if("onloadend"in s?s.onloadend=I:s.onreadystatechange=function(){!s||s.readyState!==4||s.status===0&&!(s.responseURL&&s.responseURL.indexOf("file:")===0)||setTimeout(I)},s.onabort=function(){s&&(r(new w("Request aborted",w.ECONNABORTED,e,s)),s=null)},s.onerror=function(){r(new w("Network Error",w.ERR_NETWORK,e,s)),s=null},s.ontimeout=function(){let Q=e.timeout?"timeout of "+e.timeout+"ms exceeded":"timeout exceeded",R=e.transitional||Re;e.timeoutErrorMessage&&(Q=e.timeoutErrorMessage),r(new w(Q,R.clarifyTimeoutError?w.ETIMEDOUT:w.ECONNABORTED,e,s)),s=null},W.hasStandardBrowserEnv&&(m&&c.isFunction(m)&&(m=m(e)),m||m!==!1&&Kt(u))){let B=e.xsrfHeaderName&&e.xsrfCookieName&&qt.read(e.xsrfCookieName);B&&i.set(e.xsrfHeaderName,B)}o===void 0&&i.setContentType(null),"setRequestHeader"in s&&c.forEach(i.toJSON(),function(Q,R){s.setRequestHeader(R,Q)}),c.isUndefined(e.withCredentials)||(s.withCredentials=!!e.withCredentials),n&&n!=="json"&&(s.responseType=e.responseType),typeof e.onDownloadProgress=="function"&&s.addEventListener("progress",vt(e.onDownloadProgress,!0)),typeof e.onUploadProgress=="function"&&s.upload&&s.upload.addEventListener("progress",vt(e.onUploadProgress)),(e.cancelToken||e.signal)&&(f=B=>{s&&(r(!B||B.type?new M(null,e,s):B),s.abort(),s=null)},e.cancelToken&&e.cancelToken.subscribe(f),e.signal&&(e.signal.aborted?f():e.signal.addEventListener("abort",f)));let l=oA(u);if(l&&W.protocols.indexOf(l)===-1){r(new w("Unsupported protocol "+l+":",w.ERR_BAD_REQUEST,e));return}s.send(o||null)})};var aA={http:he,xhr:zt};c.forEach(aA,(e,A)=>{if(e){try{Object.defineProperty(e,"name",{value:A})}catch{}Object.defineProperty(e,"adapterName",{value:A})}});var _t=e=>`- ${e}`,Yi=e=>c.isFunction(e)||e===null||e===!1,De={getAdapter:e=>{e=c.isArray(e)?e:[e];let{length:A}=e,t,r,o={};for(let i=0;i<A;i++){t=e[i];let n;if(r=t,!Yi(t)&&(r=aA[(n=String(t)).toLowerCase()],r===void 0))throw new w(`Unknown adapter '${n}'`);if(r)break;o[n||"#"+i]=r}if(!r){let i=Object.entries(o).map(([m,f])=>`adapter ${m} `+(f===!1?"is not supported by the environment":"is not available in the build")),n=A?i.length>1?`since :
`+i.map(_t).join(`
`):" "+_t(i[0]):"as no adapter specified";throw new w("There is no suitable adapter to dispatch the request "+n,"ERR_NOT_SUPPORT")}return r},adapters:aA};function nA(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new M(null,e)}function We(e){return nA(e),e.headers=F.from(e.headers),e.data=se.call(e,e.transformRequest),["post","put","patch"].indexOf(e.method)!==-1&&e.headers.setContentType("application/x-www-form-urlencoded",!1),De.getAdapter(e.adapter||_.adapter)(e).then(function(r){return nA(e),r.data=se.call(e,e.transformResponse,r),r.headers=F.from(r.headers),r},function(r){return Ie(r)||(nA(e),r&&r.response&&(r.response.data=se.call(e,e.transformResponse,r.response),r.response.headers=F.from(r.response.headers))),Promise.reject(r)})}var Vt=e=>e instanceof F?{...e}:e;function T(e,A){A=A||{};let t={};function r(p,a,s){return c.isPlainObject(p)&&c.isPlainObject(a)?c.merge.call({caseless:s},p,a):c.isPlainObject(a)?c.merge({},a):c.isArray(a)?a.slice():a}function o(p,a,s){if(c.isUndefined(a)){if(!c.isUndefined(p))return r(void 0,p,s)}else return r(p,a,s)}function i(p,a){if(!c.isUndefined(a))return r(void 0,a)}function n(p,a){if(c.isUndefined(a)){if(!c.isUndefined(p))return r(void 0,p)}else return r(void 0,a)}function m(p,a,s){if(s in A)return r(p,a);if(s in e)return r(void 0,p)}let f={url:i,method:i,data:i,baseURL:n,transformRequest:n,transformResponse:n,paramsSerializer:n,timeout:n,timeoutMessage:n,withCredentials:n,withXSRFToken:n,adapter:n,responseType:n,xsrfCookieName:n,xsrfHeaderName:n,onUploadProgress:n,onDownloadProgress:n,decompress:n,maxContentLength:n,maxBodyLength:n,beforeRedirect:n,transport:n,httpAgent:n,httpsAgent:n,cancelToken:n,socketPath:n,responseEncoding:n,validateStatus:m,headers:(p,a)=>o(Vt(p),Vt(a),!0)};return c.forEach(Object.keys(Object.assign({},e,A)),function(a){let s=f[a]||o,u=s(e[a],A[a],a);c.isUndefined(u)&&s!==m||(t[a]=u)}),t}var Fe="1.6.8";var sA={};["object","boolean","number","function","string","symbol"].forEach((e,A)=>{sA[e]=function(r){return typeof r===e||"a"+(A<1?"n ":" ")+e}});var Zt={};sA.transitional=function(A,t,r){function o(i,n){return"[Axios v"+Fe+"] Transitional option '"+i+"'"+n+(r?". "+r:"")}return(i,n,m)=>{if(A===!1)throw new w(o(n," has been removed"+(t?" in "+t:"")),w.ERR_DEPRECATED);return t&&!Zt[n]&&(Zt[n]=!0,console.warn(o(n," has been deprecated since v"+t+" and will be removed in the near future"))),A?A(i,n,m):!0}};function qi(e,A,t){if(typeof e!="object")throw new w("options must be an object",w.ERR_BAD_OPTION_VALUE);let r=Object.keys(e),o=r.length;for(;o-- >0;){let i=r[o],n=A[i];if(n){let m=e[i],f=m===void 0||n(m,i,e);if(f!==!0)throw new w("option "+i+" must be "+f,w.ERR_BAD_OPTION_VALUE);continue}if(t!==!0)throw new w("Unknown option "+i,w.ERR_BAD_OPTION)}}var Ue={assertOptions:qi,validators:sA};var H=Ue.validators,Z=class{constructor(A){this.defaults=A,this.interceptors={request:new Ze,response:new Ze}}async request(A,t){try{return await this._request(A,t)}catch(r){if(r instanceof Error){let o;Error.captureStackTrace?Error.captureStackTrace(o={}):o=new Error;let i=o.stack?o.stack.replace(/^.+\n/,""):"";r.stack?i&&!String(r.stack).endsWith(i.replace(/^.+\n.+\n/,""))&&(r.stack+=`
`+i):r.stack=i}throw r}}_request(A,t){typeof A=="string"?(t=t||{},t.url=A):t=A||{},t=T(this.defaults,t);let{transitional:r,paramsSerializer:o,headers:i}=t;r!==void 0&&Ue.assertOptions(r,{silentJSONParsing:H.transitional(H.boolean),forcedJSONParsing:H.transitional(H.boolean),clarifyTimeoutError:H.transitional(H.boolean)},!1),o!=null&&(c.isFunction(o)?t.paramsSerializer={serialize:o}:Ue.assertOptions(o,{encode:H.function,serialize:H.function},!0)),t.method=(t.method||this.defaults.method||"get").toLowerCase();let n=i&&c.merge(i.common,i[t.method]);i&&c.forEach(["delete","get","head","post","put","patch","common"],l=>{delete i[l]}),t.headers=F.concat(n,i);let m=[],f=!0;this.interceptors.request.forEach(function(B){typeof B.runWhen=="function"&&B.runWhen(t)===!1||(f=f&&B.synchronous,m.unshift(B.fulfilled,B.rejected))});let p=[];this.interceptors.response.forEach(function(B){p.push(B.fulfilled,B.rejected)});let a,s=0,u;if(!f){let l=[We.bind(this),void 0];for(l.unshift.apply(l,m),l.push.apply(l,p),u=l.length,a=Promise.resolve(t);s<u;)a=a.then(l[s++],l[s++]);return a}u=m.length;let I=t;for(s=0;s<u;){let l=m[s++],B=m[s++];try{I=l(I)}catch(Q){B.call(this,Q);break}}try{a=We.call(this,I)}catch(l){return Promise.reject(l)}for(s=0,u=p.length;s<u;)a=a.then(p[s++],p[s++]);return a}getUri(A){A=T(this.defaults,A);let t=ge(A.baseURL,A.url);return ae(t,A.params,A.paramsSerializer)}};c.forEach(["delete","get","head","options"],function(A){Z.prototype[A]=function(t,r){return this.request(T(r||{},{method:A,url:t,data:(r||{}).data}))}});c.forEach(["post","put","patch"],function(A){function t(r){return function(i,n,m){return this.request(T(m||{},{method:A,headers:r?{"Content-Type":"multipart/form-data"}:{},url:i,data:n}))}}Z.prototype[A]=t(),Z.prototype[A+"Form"]=t(!0)});var le=Z;var IA=class e{constructor(A){if(typeof A!="function")throw new TypeError("executor must be a function.");let t;this.promise=new Promise(function(i){t=i});let r=this;this.promise.then(o=>{if(!r._listeners)return;let i=r._listeners.length;for(;i-- >0;)r._listeners[i](o);r._listeners=null}),this.promise.then=o=>{let i,n=new Promise(m=>{r.subscribe(m),i=m}).then(o);return n.cancel=function(){r.unsubscribe(i)},n},A(function(i,n,m){r.reason||(r.reason=new M(i,n,m),t(r.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(A){if(this.reason){A(this.reason);return}this._listeners?this._listeners.push(A):this._listeners=[A]}unsubscribe(A){if(!this._listeners)return;let t=this._listeners.indexOf(A);t!==-1&&this._listeners.splice(t,1)}static source(){let A;return{token:new e(function(o){A=o}),cancel:A}}},Xt=IA;function gA(e){return function(t){return e.apply(null,t)}}function lA(e){return c.isObject(e)&&e.isAxiosError===!0}var pA={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(pA).forEach(([e,A])=>{pA[A]=e});var $t=pA;function er(e){let A=new le(e),t=re(le.prototype.request,A);return c.extend(t,le.prototype,A,{allOwnKeys:!0}),c.extend(t,A,null,{allOwnKeys:!0}),t.create=function(o){return er(T(e,o))},t}var k=er(_);k.Axios=le;k.CanceledError=M;k.CancelToken=Xt;k.isCancel=Ie;k.VERSION=Fe;k.toFormData=L;k.AxiosError=w;k.Cancel=k.CanceledError;k.all=function(A){return Promise.all(A)};k.spread=gA;k.isAxiosError=lA;k.mergeConfig=T;k.AxiosHeaders=F;k.formToJSON=e=>ke(c.isHTMLForm(e)?new FormData(e):e);k.getAdapter=De.getAdapter;k.HttpStatusCode=$t;k.default=k;var G=k;var{Axios:xI,AxiosError:GI,CanceledError:TI,isCancel:JI,CancelToken:LI,VERSION:MI,all:HI,Cancel:YI,isAxiosError:qI,spread:KI,toFormData:jI,AxiosHeaders:vI,HttpStatusCode:zI,formToJSON:_I,getAdapter:VI,mergeConfig:ZI}=G;async function Ki(e,A){let t=e,r=null;if(t==null)r=new Worker(new URL("./web-workers/itk-wasm-pipeline.worker.js",import.meta.url),{type:"module"});else if(t.startsWith("http")){let o=await G.get(t,{responseType:"blob",params:A}),i=URL.createObjectURL(o.data);r=new Worker(i,{type:"module"})}else r=new Worker(t,{type:"module"});return r}var pe=Ki;function Ar(e){let A=qe(e),t=e;return t.terminated=!1,t.workerProxy=A,t.originalTerminate=t.terminate,t.terminate=()=>{t.terminated=!0,t.workerProxy[Ye](),t.originalTerminate()},{workerProxy:A,worker:t}}async function ji(e,A,t){let r;if(e!=null){let i=e;return i.workerProxy!==void 0?(r=i.workerProxy,{workerProxy:r,worker:i}):Ar(e)}let o=await pe(A,t);return Ar(o)}var tr=ji;async function vi(e,A,t){let r="unknown";typeof e!="string"?r=e.href:e.startsWith("http")?r=e:r=typeof A<"u"?`${A}/${e}`:e,r.endsWith(".js")&&(r=r.substring(0,r.length-3)),r.endsWith(".wasm")&&(r=r.substring(0,r.length-5));let o=`${r}.wasm`,n=(await G.get(o,{responseType:"arraybuffer",params:t})).data;return(await import(`${r}.js`)).default({wasmBinary:n})}var rr=vi;var ir=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11]));var nr=typeof globalThis.SharedArrayBuffer=="function",or=new TextEncoder,ar=new TextDecoder("utf-8");function zi(e,A){let t={flags:"r",encoding:"binary"},r=e.fs_open(A,t.flags),i=e.fs_stat(A).size,n=null;nr?n=new SharedArrayBuffer(i):n=new ArrayBuffer(i);let m=new Uint8Array(n);return e.fs_read(r,m,0,i,0),e.fs_close(r),m}function sr(e,A,t){let r=null;nr?r=new SharedArrayBuffer(t):r=new ArrayBuffer(t);let o=new Uint8Array(r),i=new Uint8Array(e.HEAPU8.buffer,A,t);return o.set(i),o}function D(e,A,t,r){let o=0;return A!==null&&(o=e.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,t,r,A.buffer.byteLength]),e.HEAPU8.set(new Uint8Array(A.buffer),o)),o}function X(e,A,t){let r=JSON.stringify(A),o=e.lengthBytesUTF8(r)+1,i=e.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,t,o]);e.stringToUTF8(r,i,o)}function U(e,A,t,r){let o=e.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,A,t]),i=e.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,A,t]),n=sr(e,o,i);return N(r,n.buffer)}function mA(e,A){let t=e.ccall("itk_wasm_output_json_address","number",["number","number"],[0,A]),r=e.UTF8ToString(t);return JSON.parse(r)}function _i(e,A,t,r){r!=null&&r.length>0&&r.forEach(function(p,a){switch(p.type){case g.TextStream:{let s=or.encode(p.data.data),u=D(e,s,a,0),I={size:s.buffer.byteLength,data:`data:application/vnd.itk.address,0:${u}`};X(e,I,a);break}case g.JsonCompatible:{let s=or.encode(JSON.stringify(p.data)),u=D(e,s,a,0),I={size:s.buffer.byteLength,data:`data:application/vnd.itk.address,0:${u}`};X(e,I,a);break}case g.BinaryStream:{let s=p.data.data,u=D(e,s,a,0),I={size:s.buffer.byteLength,data:`data:application/vnd.itk.address,0:${u}`};X(e,I,a);break}case g.TextFile:{e.fs_writeFile(p.data.path,p.data.data);break}case g.BinaryFile:{e.fs_writeFile(p.data.path,p.data.data);break}case g.Image:{let s=p.data,u=D(e,s.data,a,0),I=D(e,s.direction,a,1),l=typeof s.metadata?.entries<"u"?JSON.stringify(Array.from(s.metadata.entries())):"[]",B={imageType:s.imageType,name:s.name,origin:s.origin,spacing:s.spacing,direction:`data:application/vnd.itk.address,0:${I}`,size:s.size,data:`data:application/vnd.itk.address,0:${u}`,metadata:l};X(e,B,a);break}case g.Mesh:{let s=p.data,u=D(e,s.points,a,0),I=D(e,s.cells,a,1),l=D(e,s.pointData,a,2),B=D(e,s.cellData,a,3),Q={meshType:s.meshType,name:s.name,numberOfPoints:s.numberOfPoints,points:`data:application/vnd.itk.address,0:${u}`,numberOfCells:s.numberOfCells,cells:`data:application/vnd.itk.address,0:${I}`,cellBufferSize:s.cellBufferSize,numberOfPointPixels:s.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${l}`,numberOfCellPixels:s.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${B}`};X(e,Q,a);break}case g.PolyData:{let s=p.data,u=D(e,s.points,a,0),I=D(e,s.vertices,a,1),l=D(e,s.lines,a,2),B=D(e,s.polygons,a,3),Q=D(e,s.triangleStrips,a,4),R=D(e,s.pointData,a,5),O=D(e,s.pointData,a,6),P={polyDataType:s.polyDataType,name:s.name,numberOfPoints:s.numberOfPoints,points:`data:application/vnd.itk.address,0:${u}`,verticesBufferSize:s.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${I}`,linesBufferSize:s.linesBufferSize,lines:`data:application/vnd.itk.address,0:${l}`,polygonsBufferSize:s.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${B}`,triangleStripsBufferSize:s.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${Q}`,numberOfPointPixels:s.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${R}`,numberOfCellPixels:s.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${O}`};X(e,P,a);break}default:throw Error("Unsupported input InterfaceType")}}),e.resetModuleStdout(),e.resetModuleStderr();let o=e.stackSave(),i=0;try{i=e.callMain(A.slice())}catch(p){throw typeof p=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",e.getModuleStdout()),console.error("stderr:",e.getModuleStderr()),typeof e.getExceptionMessage<"u"?console.error("exception:",e.getExceptionMessage(p)):console.error("Build module in Debug mode for exception message information.")),p}finally{e.stackRestore(o)}let n=e.getModuleStdout(),m=e.getModuleStderr(),f=[];return t!=null&&t.length>0&&i===0&&t.forEach(function(p,a){let s=null;switch(p.type){case g.TextStream:{let I=e.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,a,0]),l=e.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,a,0]),B=new Uint8Array(e.HEAPU8.buffer,I,l);s={data:ar.decode(B)};break}case g.JsonCompatible:{let I=e.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,a,0]),l=e.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,a,0]),B=new Uint8Array(e.HEAPU8.buffer,I,l);s=JSON.parse(ar.decode(B));break}case g.BinaryStream:{let I=e.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,a,0]),l=e.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,a,0]);s={data:sr(e,I,l)};break}case g.TextFile:{s={path:p.data.path,data:e.fs_readFile(p.data.path,{encoding:"utf8"})};break}case g.BinaryFile:{s={path:p.data.path,data:zi(e,p.data.path)};break}case g.Image:{let I=mA(e,a);I.data=U(e,a,0,I.imageType.componentType),I.direction=U(e,a,1,b.Float64),I.metadata=new Map(I.metadata),s=I;break}case g.Mesh:{let I=mA(e,a);I.numberOfPoints>0?I.points=U(e,a,0,I.meshType.pointComponentType):I.points=N(I.meshType.pointComponentType,new ArrayBuffer(0)),I.numberOfCells>0?I.cells=U(e,a,1,I.meshType.cellComponentType):I.cells=N(I.meshType.cellComponentType,new ArrayBuffer(0)),I.numberOfPointPixels>0?I.pointData=U(e,a,2,I.meshType.pointPixelComponentType):I.pointData=N(I.meshType.pointPixelComponentType,new ArrayBuffer(0)),I.numberOfCellPixels>0?I.cellData=U(e,a,3,I.meshType.cellPixelComponentType):I.cellData=N(I.meshType.cellPixelComponentType,new ArrayBuffer(0)),s=I;break}case g.PolyData:{let I=mA(e,a);I.numberOfPoints>0?I.points=U(e,a,0,b.Float32):I.points=new Float32Array,I.verticesBufferSize>0?I.vertices=U(e,a,1,h.UInt32):I.vertices=new Uint32Array,I.linesBufferSize>0?I.lines=U(e,a,2,h.UInt32):I.lines=new Uint32Array,I.polygonsBufferSize>0?I.polygons=U(e,a,3,h.UInt32):I.polygons=new Uint32Array,I.triangleStripsBufferSize>0?I.triangleStrips=U(e,a,4,h.UInt32):I.triangleStrips=new Uint32Array,I.numberOfPointPixels>0?I.pointData=U(e,a,5,I.polyDataType.pointPixelComponentType):I.pointData=N(I.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),I.numberOfCellPixels>0?I.cellData=U(e,a,6,I.polyDataType.cellPixelComponentType):I.cellData=N(I.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),s=I;break}default:throw Error("Unsupported output InterfaceType")}let u={type:p.type,data:s};f.push(u)}),{returnValue:i,stdout:n,stderr:m,outputs:f}}var Ir=_i;var Vi=typeof globalThis.SharedArrayBuffer<"u";function Zi(e,A){if(e==null)return[];let t=[];for(let r=0;r<e.length;r++){let o=Xi(e[r],A);o!==null&&t.push(o)}return t}function Xi(e,A){if(e==null)return null;let t=null;return e.buffer!==void 0?t=e.buffer:e.byteLength!==void 0&&(t=e),Vi&&t instanceof SharedArrayBuffer?null:A?t:t.slice(0)}var gr=Zi;function $i(e){return[e.data,e.direction]}var lr=$i;function eo(e){return[e.points,e.pointData,e.cells,e.cellData]}var pr=eo;function Ao(e){return[e.points,e.vertices,e.lines,e.polygons,e.triangleStrips,e.pointData,e.cellData]}var mr=Ao;var to;function Ne(){return to}var ro;function ur(){return ro}var io;function Se(){return io}var uA=new Map;function oo(){let e=Se();return typeof e>"u"&&(e=null),e}function fr(){let e=Ne();return typeof e>"u"&&(e=new URL("/pipelines",document.location.origin).href),e}function Oe(){let e=ur();return typeof e>"u"&&(e={}),e}async function ao(e,A,t){let r=e,o=e;if(typeof e!="string"&&(r=new URL(e.href),o=r.href),uA.has(o))return uA.get(o);{let i=await rr(e,A?.toString()??fr(),t??Oe());return uA.set(o,i),i}}async function no(e,A,t,r,o){if(!await ir()){let Q="WebAssembly SIMD support is required -- please update your browser.";throw alert(Q),new Error(Q)}let i=o?.webWorker??null;if(i===!1){let Q=await ao(e.toString(),o?.pipelineBaseUrl,o?.pipelineQueryParams??Oe());return Ir(Q,A,t,r)}let n=i,m=o?.pipelineWorkerUrl??oo(),f=typeof m!="string"&&typeof m?.href<"u"?m.href:m,{workerProxy:p,worker:a}=await tr(n,f,o?.pipelineQueryParams??Oe());n=a;let s=[];r!=null&&r.length>0&&r.forEach(function(Q){if(Q.type===g.BinaryStream){let R=Q.data.data;s.push(R)}else if(Q.type===g.BinaryFile){let R=Q.data.data;s.push(R)}else if(Q.type===g.Image){let R=Q.data;R.data!==null&&s.push(...lr(R))}else if(Q.type===g.Mesh){let R=Q.data;s.push(...pr(R))}else if(Q.type===g.PolyData){let R=Q.data;s.push(...mr(R))}});let u=o?.pipelineBaseUrl??fr(),I=typeof u!="string"&&typeof u?.href<"u"?u.href:u,l=r!=null?Ke(r,gr(s,o?.noCopy)):null,B=await p.runPipeline(e.toString(),I,A,t,l,o?.pipelineQueryParams??Oe());return{returnValue:B.returnValue,stdout:B.stdout,stderr:B.stderr,outputs:B.outputs,webWorker:n}}var C=no;var so=null;function cr(){return so}var Io="1.2.0",Br=Io;var fA,go=`https://cdn.jsdelivr.net/npm/@itk-wasm/image-io@${Br}/dist/pipelines`;function Hg(e){fA=e}function E(){if(typeof fA<"u")return fA;let e=Ne();return typeof e<"u"?e:go}var cA,lo=null;function dr(e){cA=e}function d(){if(typeof cA<"u")return cA;let e=Se();return typeof e<"u"?e:lo}var $=null;async function Cr(){let e=d(),A=typeof e!="string"&&typeof e?.href<"u"?e.href:e;$=await pe(A)}function _g(e){$=e}async function y(){if($!==null)return $.terminated&&await Cr(),$;let e=cr();return e!==null?e:(await Cr(),$)}async function po(e){let t=(await G.get(`${e}/index.json`,{responseType:"json"})).data,r=await G.get(`${e}/data/data.raw`,{responseType:"arraybuffer"});t.data=N(t.imageType.componentType,r.data);let o=await G.get(`${e}/data/direction.raw`,{responseType:"arraybuffer"});return t.direction=N(b.Float64,o.data),t}var mo=po;var uo=new Map([["image/jpeg","jpeg"],["image/png","png"],["image/tiff","tiff"],["image/x-ms-bmp","bmp"],["image/x-bmp","bmp"],["image/bmp","bmp"],["application/dicom","gdcm"]]),ee=uo;async function fo(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:g.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="png-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,image:l[1]?.data}}var BA=fo;async function co(e,A,t={}){let r=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:g.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="png-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var dA=co;async function Bo(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:g.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="meta-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,image:l[1]?.data}}var CA=Bo;async function Co(e,A,t={}){let r=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:g.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="meta-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var EA=Co;async function Eo(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:g.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="tiff-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,image:l[1]?.data}}var yA=Eo;async function yo(e,A,t={}){let r=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:g.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="tiff-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var QA=yo;async function Qo(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:g.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="nifti-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,image:l[1]?.data}}var hA=Qo;async function ho(e,A,t={}){let r=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:g.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="nifti-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var wA=ho;async function wo(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:g.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="jpeg-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,image:l[1]?.data}}var RA=wo;async function Ro(e,A,t={}){let r=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:g.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="jpeg-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var kA=Ro;async function ko(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:g.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="nrrd-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,image:l[1]?.data}}var bA=ko;async function bo(e,A,t={}){let r=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:g.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="nrrd-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var DA=bo;async function Do(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:g.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="vtk-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,image:l[1]?.data}}var WA=Do;async function Wo(e,A,t={}){let r=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:g.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="vtk-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var FA=Wo;async function Fo(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:g.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="bmp-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,image:l[1]?.data}}var UA=Fo;async function Uo(e,A,t={}){let r=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:g.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="bmp-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var NA=Uo;async function No(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:g.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="hdf5-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,image:l[1]?.data}}var SA=No;async function So(e,A,t={}){let r=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:g.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="hdf5-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var OA=So;async function Oo(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:g.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="minc-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,image:l[1]?.data}}var PA=Oo;async function Po(e,A,t={}){let r=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:g.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="minc-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var xA=Po;async function xo(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:g.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="mrc-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,image:l[1]?.data}}var GA=xo;async function Go(e,A,t={}){let r=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:g.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="mrc-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var TA=Go;async function To(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:g.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="lsm-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,image:l[1]?.data}}var JA=To;async function Jo(e,A,t={}){let r=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:g.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="lsm-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var LA=Jo;async function Lo(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:g.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="mgh-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,image:l[1]?.data}}var MA=Lo;async function Mo(e,A,t={}){let r=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:g.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="mgh-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var HA=Mo;async function Ho(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:g.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="bio-rad-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,image:l[1]?.data}}var YA=Ho;async function Yo(e,A,t={}){let r=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:g.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="bio-rad-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var qA=Yo;async function qo(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:g.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="gipl-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,image:l[1]?.data}}var KA=qo;async function Ko(e,A,t={}){let r=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:g.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="gipl-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var jA=Ko;async function jo(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:g.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="ge-adw-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,image:l[1]?.data}}var vA=jo;async function vo(e,A,t={}){let r=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:g.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="ge-adw-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var zA=vo;async function zo(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:g.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="ge4-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,image:l[1]?.data}}var _A=zo;async function _o(e,A,t={}){let r=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:g.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="ge4-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var VA=_o;async function Vo(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:g.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="ge5-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,image:l[1]?.data}}var ZA=Vo;async function Zo(e,A,t={}){let r=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:g.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="ge5-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var XA=Zo;async function Xo(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:g.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="gdcm-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,image:l[1]?.data}}var $A=Xo;async function $o(e,A,t={}){let r=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:g.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="gdcm-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var et=$o;async function ea(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:g.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="scanco-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,image:l[1]?.data}}var At=ea;async function Aa(e,A,t={}){let r=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:g.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="scanco-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var tt=Aa;async function ta(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:g.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="fdf-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,image:l[1]?.data}}var rt=ta;async function ra(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:g.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="wasm-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,image:l[1]?.data}}var it=ra;async function ia(e,A,t={}){let r=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:g.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="wasm-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var ot=ia;async function oa(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:g.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="wasm-zstd-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,image:l[1]?.data}}var at=oa;async function aa(e,A,t={}){let r=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:g.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="wasm-zstd-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var nt=aa;var na=new Map([["png",[BA,dA]],["meta",[CA,EA]],["tiff",[yA,QA]],["nifti",[hA,wA]],["jpeg",[RA,kA]],["nrrd",[bA,DA]],["vtk",[WA,FA]],["bmp",[UA,NA]],["hdf5",[SA,OA]],["minc",[PA,xA]],["mrc",[GA,TA]],["lsm",[JA,LA]],["mgh",[MA,HA]],["bioRad",[YA,qA]],["gipl",[KA,jA]],["geAdw",[vA,zA]],["ge4",[_A,VA]],["ge5",[ZA,XA]],["gdcm",[$A,et]],["scanco",[At,tt]],["fdf",[rt,null]],["wasm",[it,ot]],["wasmZstd",[at,nt]]]),Ae=na;async function sa(e,A={}){let t=e.type??"",r=e.name??e.path??"fileName",o=te(r).toLowerCase(),i=A?.webWorker,n=e;if(e instanceof Blob){let I=await e.arrayBuffer();n={path:e.name,data:new Uint8Array(I)}}let m=null;if(t&&ee.has(t))m=ee.get(t);else if(Y.has(o))m=Y.get(o);else for(let I of Ae.values())if(I[0]!==null){let{webWorker:l,couldRead:B,image:Q}=await I[0]({path:n.path,data:n.data.slice()},{webWorker:i,informationOnly:A?.informationOnly,noCopy:A?.noCopy});if(i=l,B)return typeof A<"u"&&(Q=J(Q,A)),{webWorker:i,image:Q}}if(!m)throw Error("Could not find IO for: "+r);let p=Ae.get(m)[0],{webWorker:a,couldRead:s,image:u}=await p(n,{webWorker:i,informationOnly:A?.informationOnly,noCopy:A?.noCopy});if(i=a,!s)throw Error("Could not read: "+r);return typeof A<"u"&&(u=J(u,A)),{webWorker:i,image:u}}var st=sa;var Ia=typeof globalThis.navigator?.hardwareConcurrency=="number"?globalThis.navigator.hardwareConcurrency:6,Er=new Le(Ia,st);async function ga(e,A={}){let t=1,r=0,o=!1;typeof A=="object"&&(typeof A.zSpacing<"u"&&(t=A.zSpacing),typeof A.zOrigin<"u"&&(r=A.zOrigin),typeof A.sortedSeries<"u"&&(o=A.sortedSeries));let i=Array.from(e,async function(s){if(s instanceof File){let u=await s.arrayBuffer();return{path:s.name,data:new Uint8Array(u)}}return s}),n=await Promise.all(i);o||n.sort((s,u)=>s.path<u.path?-1:s.path>u.path?1:0);let m=[];for(let s=0;s<n.length;s++)m.push([n[s],{}]);let p=(await Er.runTasks(m).promise).map(s=>{let u=s.image;return u.imageType.dimension=3,u.size.push(1),u.spacing.push(t),u.origin.push(r),u.direction=new Float64Array(9),u.direction.fill(0),u.direction[0]=1,u.direction[4]=1,u.direction[8]=1,u}),a=Te(p);return typeof A=="object"&&(typeof A.componentType<"u"||typeof A.pixelType<"u")&&(a=J(a,A)),{image:a,webWorkerPool:Er}}var la=ga;async function pa(e,A,t={}){let r=e;(typeof t.componentType<"u"||typeof t.pixelType<"u")&&(r=J(e,t));let o=t.mimeType,i=te(A).toLowerCase(),n=t.webWorker,m=null;if(typeof o<"u"&&ee.has(o))m=ee.get(o);else if(Y.has(i))m=Y.get(i);else for(let l of Ae.values())if(l[1]!==null){let{webWorker:B,couldWrite:Q,serializedImage:R}=await l[1](Ge(r),A,t);if(n=B,Q)return{webWorker:n,serializedImage:R}}if(!m)throw Error("Could not find IO for: "+A);let p=Ae.get(m)[1],{webWorker:a,couldWrite:s,serializedImage:u}=await p(r,A,t);if(n=a,!s)throw Error("Could not write: "+A);return{webWorker:n,serializedImage:u}}var ma=pa;async function ua(e,A,t={}){let r=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:g.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="fdf-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:u,stderr:I,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var fa=ua;var yr='data:text/javascript;charset=utf-8,var tt=Object.defineProperty;var et=(A,I)=>{for(var t in I)tt(A,t,{get:I[t],enumerable:!0})};var vA=Symbol("Comlink.proxy"),gt=Symbol("Comlink.endpoint"),rt=Symbol("Comlink.releaseProxy"),mA=Symbol("Comlink.finalizer"),eA=Symbol("Comlink.thrown"),$A=A=>typeof A=="object"&&A!==null||typeof A=="function",it={canHandle:A=>$A(A)&&A[vA],serialize(A){let{port1:I,port2:t}=new MessageChannel;return oA(A,I),[t,[t]]},deserialize(A){return A.start(),st(A)}},ot={canHandle:A=>$A(A)&&eA in A,serialize({value:A}){let I;return A instanceof Error?I={isError:!0,value:{message:A.message,name:A.name,stack:A.stack}}:I={isError:!1,value:A},[I,[]]},deserialize(A){throw A.isError?Object.assign(new Error(A.value.message),A.value):A.value}},AI=new Map([["proxy",it],["throw",ot]]);function Bt(A,I){for(let t of A)if(I===t||t==="*"||t instanceof RegExp&&t.test(I))return!0;return!1}function oA(A,I=globalThis,t=["*"]){I.addEventListener("message",function e(g){if(!g||!g.data)return;if(!Bt(t,g.origin)){console.warn(`Invalid origin \'${g.origin}\' for comlink proxy`);return}let{id:r,type:i,path:s}=Object.assign({path:[]},g.data),a=(g.data.argumentList||[]).map(b),Q;try{let C=s.slice(0,-1).reduce((f,n)=>f[n],A),o=s.reduce((f,n)=>f[n],A);switch(i){case"GET":Q=o;break;case"SET":C[s.slice(-1)[0]]=b(g.data.value),Q=!0;break;case"APPLY":Q=o.apply(C,a);break;case"CONSTRUCT":{let f=new o(...a);Q=at(f)}break;case"ENDPOINT":{let{port1:f,port2:n}=new MessageChannel;oA(A,n),Q=SA(f,[f])}break;case"RELEASE":Q=void 0;break;default:return}}catch(C){Q={value:C,[eA]:0}}Promise.resolve(Q).catch(C=>({value:C,[eA]:0})).then(C=>{let[o,f]=iA(C);I.postMessage(Object.assign(Object.assign({},o),{id:r}),f),i==="RELEASE"&&(I.removeEventListener("message",e),II(I),mA in A&&typeof A[mA]=="function"&&A[mA]())}).catch(C=>{let[o,f]=iA({value:new TypeError("Unserializable return value"),[eA]:0});I.postMessage(Object.assign(Object.assign({},o),{id:r}),f)})}),I.start&&I.start()}function Ct(A){return A.constructor.name==="MessagePort"}function II(A){Ct(A)&&A.close()}function st(A,I){return pA(A,[],I)}function tA(A){if(A)throw new Error("Proxy has been released and is not useable")}function tI(A){return M(A,{type:"RELEASE"}).then(()=>{II(A)})}var gA=new WeakMap,rA="FinalizationRegistry"in globalThis&&new FinalizationRegistry(A=>{let I=(gA.get(A)||0)-1;gA.set(A,I),I===0&&tI(A)});function nt(A,I){let t=(gA.get(I)||0)+1;gA.set(I,t),rA&&rA.register(A,I,A)}function Qt(A){rA&&rA.unregister(A)}function pA(A,I=[],t=function(){}){let e=!1,g=new Proxy(t,{get(r,i){if(tA(e),i===rt)return()=>{Qt(g),tI(A),e=!0};if(i==="then"){if(I.length===0)return{then:()=>g};let s=M(A,{type:"GET",path:I.map(a=>a.toString())}).then(b);return s.then.bind(s)}return pA(A,[...I,i])},set(r,i,s){tA(e);let[a,Q]=iA(s);return M(A,{type:"SET",path:[...I,i].map(C=>C.toString()),value:a},Q).then(b)},apply(r,i,s){tA(e);let a=I[I.length-1];if(a===gt)return M(A,{type:"ENDPOINT"}).then(b);if(a==="bind")return pA(A,I.slice(0,-1));let[Q,C]=_A(s);return M(A,{type:"APPLY",path:I.map(o=>o.toString()),argumentList:Q},C).then(b)},construct(r,i){tA(e);let[s,a]=_A(i);return M(A,{type:"CONSTRUCT",path:I.map(Q=>Q.toString()),argumentList:s},a).then(b)}});return nt(g,A),g}function Et(A){return Array.prototype.concat.apply([],A)}function _A(A){let I=A.map(iA);return[I.map(t=>t[0]),Et(I.map(t=>t[1]))]}var eI=new WeakMap;function SA(A,I){return eI.set(A,I),A}function at(A){return Object.assign(A,{[vA]:!0})}function iA(A){for(let[I,t]of AI)if(t.canHandle(A)){let[e,g]=t.serialize(A);return[{type:"HANDLER",name:I,value:e},g]}return[{type:"RAW",value:A},eI.get(A)||[]]}function b(A){switch(A.type){case"HANDLER":return AI.get(A.name).deserialize(A.value);case"RAW":return A.value}}function M(A,I,t){return new Promise(e=>{let g=ct();A.addEventListener("message",function r(i){!i.data||!i.data.id||i.data.id!==g||(A.removeEventListener("message",r),e(i.data))}),A.start&&A.start(),A.postMessage(Object.assign({id:g},I),t)})}function ct(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function W(A,I){return function(){return A.apply(I,arguments)}}var{toString:ft}=Object.prototype,{getPrototypeOf:NA}=Object,CA=(A=>I=>{let t=ft.call(I);return A[t]||(A[t]=t.slice(8,-1).toLowerCase())})(Object.create(null)),U=A=>(A=A.toLowerCase(),I=>CA(I)===A),sA=A=>I=>typeof I===A,{isArray:q}=Array,Z=sA("undefined");function lt(A){return A!==null&&!Z(A)&&A.constructor!==null&&!Z(A.constructor)&&F(A.constructor.isBuffer)&&A.constructor.isBuffer(A)}var oI=U("ArrayBuffer");function Dt(A){let I;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?I=ArrayBuffer.isView(A):I=A&&A.buffer&&oI(A.buffer),I}var ut=sA("string"),F=sA("function"),BI=sA("number"),nA=A=>A!==null&&typeof A=="object",ht=A=>A===!0||A===!1,BA=A=>{if(CA(A)!=="object")return!1;let I=NA(A);return(I===null||I===Object.prototype||Object.getPrototypeOf(I)===null)&&!(Symbol.toStringTag in A)&&!(Symbol.iterator in A)},dt=U("Date"),yt=U("File"),wt=U("Blob"),mt=U("FileList"),pt=A=>nA(A)&&F(A.pipe),St=A=>{let I;return A&&(typeof FormData=="function"&&A instanceof FormData||F(A.append)&&((I=CA(A))==="formdata"||I==="object"&&F(A.toString)&&A.toString()==="[object FormData]"))},Ft=U("URLSearchParams"),Rt=A=>A.trim?A.trim():A.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,"");function V(A,I,{allOwnKeys:t=!1}={}){if(A===null||typeof A>"u")return;let e,g;if(typeof A!="object"&&(A=[A]),q(A))for(e=0,g=A.length;e<g;e++)I.call(null,A[e],e,A);else{let r=t?Object.getOwnPropertyNames(A):Object.keys(A),i=r.length,s;for(e=0;e<i;e++)s=r[e],I.call(null,A[s],s,A)}}function CI(A,I){I=I.toLowerCase();let t=Object.keys(A),e=t.length,g;for(;e-- >0;)if(g=t[e],I===g.toLowerCase())return g;return null}var sI=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,nI=A=>!Z(A)&&A!==sI;function RA(){let{caseless:A}=nI(this)&&this||{},I={},t=(e,g)=>{let r=A&&CI(I,g)||g;BA(I[r])&&BA(e)?I[r]=RA(I[r],e):BA(e)?I[r]=RA({},e):q(e)?I[r]=e.slice():I[r]=e};for(let e=0,g=arguments.length;e<g;e++)arguments[e]&&V(arguments[e],t);return I}var Nt=(A,I,t,{allOwnKeys:e}={})=>(V(I,(g,r)=>{t&&F(g)?A[r]=W(g,t):A[r]=g},{allOwnKeys:e}),A),Ut=A=>(A.charCodeAt(0)===65279&&(A=A.slice(1)),A),Gt=(A,I,t,e)=>{A.prototype=Object.create(I.prototype,e),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:I.prototype}),t&&Object.assign(A.prototype,t)},kt=(A,I,t,e)=>{let g,r,i,s={};if(I=I||{},A==null)return I;do{for(g=Object.getOwnPropertyNames(A),r=g.length;r-- >0;)i=g[r],(!e||e(i,A,I))&&!s[i]&&(I[i]=A[i],s[i]=!0);A=t!==!1&&NA(A)}while(A&&(!t||t(A,I))&&A!==Object.prototype);return I},Lt=(A,I,t)=>{A=String(A),(t===void 0||t>A.length)&&(t=A.length),t-=I.length;let e=A.indexOf(I,t);return e!==-1&&e===t},Jt=A=>{if(!A)return null;if(q(A))return A;let I=A.length;if(!BI(I))return null;let t=new Array(I);for(;I-- >0;)t[I]=A[I];return t},Ht=(A=>I=>A&&I instanceof A)(typeof Uint8Array<"u"&&NA(Uint8Array)),Yt=(A,I)=>{let e=(A&&A[Symbol.iterator]).call(A),g;for(;(g=e.next())&&!g.done;){let r=g.value;I.call(A,r[0],r[1])}},bt=(A,I)=>{let t,e=[];for(;(t=A.exec(I))!==null;)e.push(t);return e},Mt=U("HTMLFormElement"),qt=A=>A.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,function(t,e,g){return e.toUpperCase()+g}),rI=(({hasOwnProperty:A})=>(I,t)=>A.call(I,t))(Object.prototype),Kt=U("RegExp"),QI=(A,I)=>{let t=Object.getOwnPropertyDescriptors(A),e={};V(t,(g,r)=>{let i;(i=I(g,r,A))!==!1&&(e[r]=i||g)}),Object.defineProperties(A,e)},Ot=A=>{QI(A,(I,t)=>{if(F(A)&&["arguments","caller","callee"].indexOf(t)!==-1)return!1;let e=A[t];if(F(e)){if(I.enumerable=!1,"writable"in I){I.writable=!1;return}I.set||(I.set=()=>{throw Error("Can not rewrite read-only method \'"+t+"\'")})}})},Tt=(A,I)=>{let t={},e=g=>{g.forEach(r=>{t[r]=!0})};return q(A)?e(A):e(String(A).split(I)),t},xt=()=>{},Pt=(A,I)=>(A=+A,Number.isFinite(A)?A:I),FA="abcdefghijklmnopqrstuvwxyz",iI="0123456789",EI={DIGIT:iI,ALPHA:FA,ALPHA_DIGIT:FA+FA.toUpperCase()+iI},jt=(A=16,I=EI.ALPHA_DIGIT)=>{let t="",{length:e}=I;for(;A--;)t+=I[Math.random()*e|0];return t};function Wt(A){return!!(A&&F(A.append)&&A[Symbol.toStringTag]==="FormData"&&A[Symbol.iterator])}var Zt=A=>{let I=new Array(10),t=(e,g)=>{if(nA(e)){if(I.indexOf(e)>=0)return;if(!("toJSON"in e)){I[g]=e;let r=q(e)?[]:{};return V(e,(i,s)=>{let a=t(i,g+1);!Z(a)&&(r[s]=a)}),I[g]=void 0,r}}return e};return t(A,0)},Vt=U("AsyncFunction"),Xt=A=>A&&(nA(A)||F(A))&&F(A.then)&&F(A.catch),B={isArray:q,isArrayBuffer:oI,isBuffer:lt,isFormData:St,isArrayBufferView:Dt,isString:ut,isNumber:BI,isBoolean:ht,isObject:nA,isPlainObject:BA,isUndefined:Z,isDate:dt,isFile:yt,isBlob:wt,isRegExp:Kt,isFunction:F,isStream:pt,isURLSearchParams:Ft,isTypedArray:Ht,isFileList:mt,forEach:V,merge:RA,extend:Nt,trim:Rt,stripBOM:Ut,inherits:Gt,toFlatObject:kt,kindOf:CA,kindOfTest:U,endsWith:Lt,toArray:Jt,forEachEntry:Yt,matchAll:bt,isHTMLForm:Mt,hasOwnProperty:rI,hasOwnProp:rI,reduceDescriptors:QI,freezeMethods:Ot,toObjectSet:Tt,toCamelCase:qt,noop:xt,toFiniteNumber:Pt,findKey:CI,global:sI,isContextDefined:nI,ALPHABET:EI,generateString:jt,isSpecCompliantForm:Wt,toJSONObject:Zt,isAsyncFn:Vt,isThenable:Xt};function K(A,I,t,e,g){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=A,this.name="AxiosError",I&&(this.code=I),t&&(this.config=t),e&&(this.request=e),g&&(this.response=g)}B.inherits(K,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:B.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var aI=K.prototype,cI={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(A=>{cI[A]={value:A}});Object.defineProperties(K,cI);Object.defineProperty(aI,"isAxiosError",{value:!0});K.from=(A,I,t,e,g,r)=>{let i=Object.create(aI);return B.toFlatObject(A,i,function(a){return a!==Error.prototype},s=>s!=="isAxiosError"),K.call(i,A.message,I,t,e,g),i.cause=A,i.name=A.name,r&&Object.assign(i,r),i};var l=K;var QA=null;function UA(A){return B.isPlainObject(A)||B.isArray(A)}function lI(A){return B.endsWith(A,"[]")?A.slice(0,-2):A}function fI(A,I,t){return A?A.concat(I).map(function(g,r){return g=lI(g),!t&&r?"["+g+"]":g}).join(t?".":""):I}function zt(A){return B.isArray(A)&&!A.some(UA)}var _t=B.toFlatObject(B,{},null,function(I){return/^is[A-Z]/.test(I)});function vt(A,I,t){if(!B.isObject(A))throw new TypeError("target must be an object");I=I||new(QA||FormData),t=B.toFlatObject(t,{metaTokens:!0,dots:!1,indexes:!1},!1,function(c,u){return!B.isUndefined(u[c])});let e=t.metaTokens,g=t.visitor||C,r=t.dots,i=t.indexes,a=(t.Blob||typeof Blob<"u"&&Blob)&&B.isSpecCompliantForm(I);if(!B.isFunction(g))throw new TypeError("visitor must be a function");function Q(E){if(E===null)return"";if(B.isDate(E))return E.toISOString();if(!a&&B.isBlob(E))throw new l("Blob is not supported. Use a Buffer instead.");return B.isArrayBuffer(E)||B.isTypedArray(E)?a&&typeof Blob=="function"?new Blob([E]):Buffer.from(E):E}function C(E,c,u){let d=E;if(E&&!u&&typeof E=="object"){if(B.endsWith(c,"{}"))c=e?c:c.slice(0,-2),E=JSON.stringify(E);else if(B.isArray(E)&&zt(E)||(B.isFileList(E)||B.endsWith(c,"[]"))&&(d=B.toArray(E)))return c=lI(c),d.forEach(function(N,It){!(B.isUndefined(N)||N===null)&&I.append(i===!0?fI([c],It,r):i===null?c:c+"[]",Q(N))}),!1}return UA(E)?!0:(I.append(fI(u,c,r),Q(E)),!1)}let o=[],f=Object.assign(_t,{defaultVisitor:C,convertValue:Q,isVisitable:UA});function n(E,c){if(!B.isUndefined(E)){if(o.indexOf(E)!==-1)throw Error("Circular reference detected in "+c.join("."));o.push(E),B.forEach(E,function(d,R){(!(B.isUndefined(d)||d===null)&&g.call(I,d,B.isString(R)?R.trim():R,c,f))===!0&&n(d,c?c.concat(R):[R])}),o.pop()}}if(!B.isObject(A))throw new TypeError("data must be an object");return n(A),I}var L=vt;function DI(A){let I={"!":"%2521","\'":"%2527","(":"%2528",")":"%2529","~":"%257E","%2520":"+","%2500":"\\0"};return encodeURIComponent(A).replace(/[!\'()~]|%2520|%2500/g,function(e){return I[e]})}function uI(A,I){this._pairs=[],A&&L(A,this,I)}var hI=uI.prototype;hI.append=function(I,t){this._pairs.push([I,t])};hI.toString=function(I){let t=I?function(e){return I.call(this,e,DI)}:DI;return this._pairs.map(function(g){return t(g[0])+"="+t(g[1])},"").join("&")};var EA=uI;function $t(A){return encodeURIComponent(A).replace(/%253A/gi,":").replace(/%2524/g,"$").replace(/%252C/gi,",").replace(/%2520/g,"+").replace(/%255B/gi,"[").replace(/%255D/gi,"]")}function X(A,I,t){if(!I)return A;let e=t&&t.encode||$t,g=t&&t.serialize,r;if(g?r=g(I,t):r=B.isURLSearchParams(I)?I.toString():new EA(I,t).toString(e),r){let i=A.indexOf("%23");i!==-1&&(A=A.slice(0,i)),A+=(A.indexOf("?")===-1?"?":"&")+r}return A}var GA=class{constructor(){this.handlers=[]}use(I,t,e){return this.handlers.push({fulfilled:I,rejected:t,synchronous:e?e.synchronous:!1,runWhen:e?e.runWhen:null}),this.handlers.length-1}eject(I){this.handlers[I]&&(this.handlers[I]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(I){B.forEach(this.handlers,function(e){e!==null&&I(e)})}},kA=GA;var aA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var dI=typeof URLSearchParams<"u"?URLSearchParams:EA;var yI=typeof FormData<"u"?FormData:null;var wI=typeof Blob<"u"?Blob:null;var mI={isBrowser:!0,classes:{URLSearchParams:dI,FormData:yI,Blob:wI},protocols:["http","https","file","blob","url","data"]};var LA={};et(LA,{hasBrowserEnv:()=>pI,hasStandardBrowserEnv:()=>Ae,hasStandardBrowserWebWorkerEnv:()=>Ie});var pI=typeof window<"u"&&typeof document<"u",Ae=(A=>pI&&["ReactNative","NativeScript","NS"].indexOf(A)<0)(typeof navigator<"u"&&navigator.product),Ie=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function";var w={...LA,...mI};function JA(A,I){return L(A,new w.classes.URLSearchParams,Object.assign({visitor:function(t,e,g,r){return w.isNode&&B.isBuffer(t)?(this.append(e,t.toString("base64")),!1):r.defaultVisitor.apply(this,arguments)}},I))}function te(A){return B.matchAll(/\\w+|\\[(\\w*)]/g,A).map(I=>I[0]==="[]"?"":I[1]||I[0])}function ee(A){let I={},t=Object.keys(A),e,g=t.length,r;for(e=0;e<g;e++)r=t[e],I[r]=A[r];return I}function ge(A){function I(t,e,g,r){let i=t[r++];if(i==="__proto__")return!0;let s=Number.isFinite(+i),a=r>=t.length;return i=!i&&B.isArray(g)?g.length:i,a?(B.hasOwnProp(g,i)?g[i]=[g[i],e]:g[i]=e,!s):((!g[i]||!B.isObject(g[i]))&&(g[i]=[]),I(t,e,g[i],r)&&B.isArray(g[i])&&(g[i]=ee(g[i])),!s)}if(B.isFormData(A)&&B.isFunction(A.entries)){let t={};return B.forEachEntry(A,(e,g)=>{I(te(e),g,t,0)}),t}return null}var cA=ge;function re(A,I,t){if(B.isString(A))try{return(I||JSON.parse)(A),B.trim(A)}catch(e){if(e.name!=="SyntaxError")throw e}return(t||JSON.stringify)(A)}var HA={transitional:aA,adapter:["xhr","http"],transformRequest:[function(I,t){let e=t.getContentType()||"",g=e.indexOf("application/json")>-1,r=B.isObject(I);if(r&&B.isHTMLForm(I)&&(I=new FormData(I)),B.isFormData(I))return g?JSON.stringify(cA(I)):I;if(B.isArrayBuffer(I)||B.isBuffer(I)||B.isStream(I)||B.isFile(I)||B.isBlob(I))return I;if(B.isArrayBufferView(I))return I.buffer;if(B.isURLSearchParams(I))return t.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),I.toString();let s;if(r){if(e.indexOf("application/x-www-form-urlencoded")>-1)return JA(I,this.formSerializer).toString();if((s=B.isFileList(I))||e.indexOf("multipart/form-data")>-1){let a=this.env&&this.env.FormData;return L(s?{"files[]":I}:I,a&&new a,this.formSerializer)}}return r||g?(t.setContentType("application/json",!1),re(I)):I}],transformResponse:[function(I){let t=this.transitional||HA.transitional,e=t&&t.forcedJSONParsing,g=this.responseType==="json";if(I&&B.isString(I)&&(e&&!this.responseType||g)){let i=!(t&&t.silentJSONParsing)&&g;try{return JSON.parse(I)}catch(s){if(i)throw s.name==="SyntaxError"?l.from(s,l.ERR_BAD_RESPONSE,this,null,this.response):s}}return I}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:w.classes.FormData,Blob:w.classes.Blob},validateStatus:function(I){return I>=200&&I<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};B.forEach(["delete","get","head","post","put","patch"],A=>{HA.headers[A]={}});var O=HA;var ie=B.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),SI=A=>{let I={},t,e,g;return A&&A.split(`%0A`).forEach(function(i){g=i.indexOf(":"),t=i.substring(0,g).trim().toLowerCase(),e=i.substring(g+1).trim(),!(!t||I[t]&&ie[t])&&(t==="set-cookie"?I[t]?I[t].push(e):I[t]=[e]:I[t]=I[t]?I[t]+", "+e:e)}),I};var FI=Symbol("internals");function z(A){return A&&String(A).trim().toLowerCase()}function fA(A){return A===!1||A==null?A:B.isArray(A)?A.map(fA):String(A)}function oe(A){let I=Object.create(null),t=/([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g,e;for(;e=t.exec(A);)I[e[1]]=e[2];return I}var Be=A=>/^[-_a-zA-Z0-9^`|~,!%23$%&\'*+.]+$/.test(A.trim());function YA(A,I,t,e,g){if(B.isFunction(e))return e.call(this,I,t);if(g&&(I=t),!!B.isString(I)){if(B.isString(e))return I.indexOf(e)!==-1;if(B.isRegExp(e))return e.test(I)}}function Ce(A){return A.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g,(I,t,e)=>t.toUpperCase()+e)}function se(A,I){let t=B.toCamelCase(" "+I);["get","set","has"].forEach(e=>{Object.defineProperty(A,e+t,{value:function(g,r,i){return this[e].call(this,I,g,r,i)},configurable:!0})})}var T=class{constructor(I){I&&this.set(I)}set(I,t,e){let g=this;function r(s,a,Q){let C=z(a);if(!C)throw new Error("header name must be a non-empty string");let o=B.findKey(g,C);(!o||g[o]===void 0||Q===!0||Q===void 0&&g[o]!==!1)&&(g[o||a]=fA(s))}let i=(s,a)=>B.forEach(s,(Q,C)=>r(Q,C,a));return B.isPlainObject(I)||I instanceof this.constructor?i(I,t):B.isString(I)&&(I=I.trim())&&!Be(I)?i(SI(I),t):I!=null&&r(t,I,e),this}get(I,t){if(I=z(I),I){let e=B.findKey(this,I);if(e){let g=this[e];if(!t)return g;if(t===!0)return oe(g);if(B.isFunction(t))return t.call(this,g,e);if(B.isRegExp(t))return t.exec(g);throw new TypeError("parser must be boolean|regexp|function")}}}has(I,t){if(I=z(I),I){let e=B.findKey(this,I);return!!(e&&this[e]!==void 0&&(!t||YA(this,this[e],e,t)))}return!1}delete(I,t){let e=this,g=!1;function r(i){if(i=z(i),i){let s=B.findKey(e,i);s&&(!t||YA(e,e[s],s,t))&&(delete e[s],g=!0)}}return B.isArray(I)?I.forEach(r):r(I),g}clear(I){let t=Object.keys(this),e=t.length,g=!1;for(;e--;){let r=t[e];(!I||YA(this,this[r],r,I,!0))&&(delete this[r],g=!0)}return g}normalize(I){let t=this,e={};return B.forEach(this,(g,r)=>{let i=B.findKey(e,r);if(i){t[i]=fA(g),delete t[r];return}let s=I?Ce(r):String(r).trim();s!==r&&delete t[r],t[s]=fA(g),e[s]=!0}),this}concat(...I){return this.constructor.concat(this,...I)}toJSON(I){let t=Object.create(null);return B.forEach(this,(e,g)=>{e!=null&&e!==!1&&(t[g]=I&&B.isArray(e)?e.join(", "):e)}),t}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([I,t])=>I+": "+t).join(`%0A`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(I){return I instanceof this?I:new this(I)}static concat(I,...t){let e=new this(I);return t.forEach(g=>e.set(g)),e}static accessor(I){let e=(this[FI]=this[FI]={accessors:{}}).accessors,g=this.prototype;function r(i){let s=z(i);e[s]||(se(g,i),e[s]=!0)}return B.isArray(I)?I.forEach(r):r(I),this}};T.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);B.reduceDescriptors(T.prototype,({value:A},I)=>{let t=I[0].toUpperCase()+I.slice(1);return{get:()=>A,set(e){this[t]=e}}});B.freezeMethods(T);var m=T;function _(A,I){let t=this||O,e=I||t,g=m.from(e.headers),r=e.data;return B.forEach(A,function(s){r=s.call(t,r,g.normalize(),I?I.status:void 0)}),g.normalize(),r}function v(A){return!!(A&&A.__CANCEL__)}function RI(A,I,t){l.call(this,A??"canceled",l.ERR_CANCELED,I,t),this.name="CanceledError"}B.inherits(RI,l,{__CANCEL__:!0});var J=RI;function bA(A,I,t){let e=t.config.validateStatus;!t.status||!e||e(t.status)?A(t):I(new l("Request failed with status code "+t.status,[l.ERR_BAD_REQUEST,l.ERR_BAD_RESPONSE][Math.floor(t.status/100)-4],t.config,t.request,t))}var NI=w.hasStandardBrowserEnv?{write(A,I,t,e,g,r){let i=[A+"="+encodeURIComponent(I)];B.isNumber(t)&&i.push("expires="+new Date(t).toGMTString()),B.isString(e)&&i.push("path="+e),B.isString(g)&&i.push("domain="+g),r===!0&&i.push("secure"),document.cookie=i.join("; ")},read(A){let I=document.cookie.match(new RegExp("(^|;\\\\s*)("+A+")=([^;]*)"));return I?decodeURIComponent(I[3]):null},remove(A){this.write(A,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function MA(A){return/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(A)}function qA(A,I){return I?A.replace(/\\/?\\/$/,"")+"/"+I.replace(/^\\/+/,""):A}function $(A,I){return A&&!MA(I)?qA(A,I):I}var UI=w.hasStandardBrowserEnv?function(){let I=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a"),e;function g(r){let i=r;return I&&(t.setAttribute("href",i),i=t.href),t.setAttribute("href",i),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\\?/,""):"",hash:t.hash?t.hash.replace(/^%23/,""):"",hostname:t.hostname,port:t.port,pathname:t.pathname.charAt(0)==="/"?t.pathname:"/"+t.pathname}}return e=g(window.location.href),function(i){let s=B.isString(i)?g(i):i;return s.protocol===e.protocol&&s.host===e.host}}():function(){return function(){return!0}}();function KA(A){let I=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(A);return I&&I[1]||""}function ne(A,I){A=A||10;let t=new Array(A),e=new Array(A),g=0,r=0,i;return I=I!==void 0?I:1e3,function(a){let Q=Date.now(),C=e[r];i||(i=Q),t[g]=a,e[g]=Q;let o=r,f=0;for(;o!==g;)f+=t[o++],o=o%A;if(g=(g+1)%A,g===r&&(r=(r+1)%A),Q-i<I)return;let n=C&&Q-C;return n?Math.round(f*1e3/n):void 0}}var GI=ne;function kI(A,I){let t=0,e=GI(50,250);return g=>{let r=g.loaded,i=g.lengthComputable?g.total:void 0,s=r-t,a=e(s),Q=r<=i;t=r;let C={loaded:r,total:i,progress:i?r/i:void 0,bytes:s,rate:a||void 0,estimated:a&&i&&Q?(i-r)/a:void 0,event:g};C[I?"download":"upload"]=!0,A(C)}}var Qe=typeof XMLHttpRequest<"u",LI=Qe&&function(A){return new Promise(function(t,e){let g=A.data,r=m.from(A.headers).normalize(),{responseType:i,withXSRFToken:s}=A,a;function Q(){A.cancelToken&&A.cancelToken.unsubscribe(a),A.signal&&A.signal.removeEventListener("abort",a)}let C;if(B.isFormData(g)){if(w.hasStandardBrowserEnv||w.hasStandardBrowserWebWorkerEnv)r.setContentType(!1);else if((C=r.getContentType())!==!1){let[c,...u]=C?C.split(";").map(d=>d.trim()).filter(Boolean):[];r.setContentType([c||"multipart/form-data",...u].join("; "))}}let o=new XMLHttpRequest;if(A.auth){let c=A.auth.username||"",u=A.auth.password?unescape(encodeURIComponent(A.auth.password)):"";r.set("Authorization","Basic "+btoa(c+":"+u))}let f=$(A.baseURL,A.url);o.open(A.method.toUpperCase(),X(f,A.params,A.paramsSerializer),!0),o.timeout=A.timeout;function n(){if(!o)return;let c=m.from("getAllResponseHeaders"in o&&o.getAllResponseHeaders()),d={data:!i||i==="text"||i==="json"?o.responseText:o.response,status:o.status,statusText:o.statusText,headers:c,config:A,request:o};bA(function(N){t(N),Q()},function(N){e(N),Q()},d),o=null}if("onloadend"in o?o.onloadend=n:o.onreadystatechange=function(){!o||o.readyState!==4||o.status===0&&!(o.responseURL&&o.responseURL.indexOf("file:")===0)||setTimeout(n)},o.onabort=function(){o&&(e(new l("Request aborted",l.ECONNABORTED,A,o)),o=null)},o.onerror=function(){e(new l("Network Error",l.ERR_NETWORK,A,o)),o=null},o.ontimeout=function(){let u=A.timeout?"timeout of "+A.timeout+"ms exceeded":"timeout exceeded",d=A.transitional||aA;A.timeoutErrorMessage&&(u=A.timeoutErrorMessage),e(new l(u,d.clarifyTimeoutError?l.ETIMEDOUT:l.ECONNABORTED,A,o)),o=null},w.hasStandardBrowserEnv&&(s&&B.isFunction(s)&&(s=s(A)),s||s!==!1&&UI(f))){let c=A.xsrfHeaderName&&A.xsrfCookieName&&NI.read(A.xsrfCookieName);c&&r.set(A.xsrfHeaderName,c)}g===void 0&&r.setContentType(null),"setRequestHeader"in o&&B.forEach(r.toJSON(),function(u,d){o.setRequestHeader(d,u)}),B.isUndefined(A.withCredentials)||(o.withCredentials=!!A.withCredentials),i&&i!=="json"&&(o.responseType=A.responseType),typeof A.onDownloadProgress=="function"&&o.addEventListener("progress",kI(A.onDownloadProgress,!0)),typeof A.onUploadProgress=="function"&&o.upload&&o.upload.addEventListener("progress",kI(A.onUploadProgress)),(A.cancelToken||A.signal)&&(a=c=>{o&&(e(!c||c.type?new J(null,A,o):c),o.abort(),o=null)},A.cancelToken&&A.cancelToken.subscribe(a),A.signal&&(A.signal.aborted?a():A.signal.addEventListener("abort",a)));let E=KA(f);if(E&&w.protocols.indexOf(E)===-1){e(new l("Unsupported protocol "+E+":",l.ERR_BAD_REQUEST,A));return}o.send(g||null)})};var OA={http:QA,xhr:LI};B.forEach(OA,(A,I)=>{if(A){try{Object.defineProperty(A,"name",{value:I})}catch{}Object.defineProperty(A,"adapterName",{value:I})}});var JI=A=>`- ${A}`,Ee=A=>B.isFunction(A)||A===null||A===!1,lA={getAdapter:A=>{A=B.isArray(A)?A:[A];let{length:I}=A,t,e,g={};for(let r=0;r<I;r++){t=A[r];let i;if(e=t,!Ee(t)&&(e=OA[(i=String(t)).toLowerCase()],e===void 0))throw new l(`Unknown adapter \'${i}\'`);if(e)break;g[i||"%23"+r]=e}if(!e){let r=Object.entries(g).map(([s,a])=>`adapter ${s} `+(a===!1?"is not supported by the environment":"is not available in the build")),i=I?r.length>1?`since :%0A`+r.map(JI).join(`%0A`):" "+JI(r[0]):"as no adapter specified";throw new l("There is no suitable adapter to dispatch the request "+i,"ERR_NOT_SUPPORT")}return e},adapters:OA};function TA(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new J(null,A)}function DA(A){return TA(A),A.headers=m.from(A.headers),A.data=_.call(A,A.transformRequest),["post","put","patch"].indexOf(A.method)!==-1&&A.headers.setContentType("application/x-www-form-urlencoded",!1),lA.getAdapter(A.adapter||O.adapter)(A).then(function(e){return TA(A),e.data=_.call(A,A.transformResponse,e),e.headers=m.from(e.headers),e},function(e){return v(e)||(TA(A),e&&e.response&&(e.response.data=_.call(A,A.transformResponse,e.response),e.response.headers=m.from(e.response.headers))),Promise.reject(e)})}var HI=A=>A instanceof m?{...A}:A;function G(A,I){I=I||{};let t={};function e(Q,C,o){return B.isPlainObject(Q)&&B.isPlainObject(C)?B.merge.call({caseless:o},Q,C):B.isPlainObject(C)?B.merge({},C):B.isArray(C)?C.slice():C}function g(Q,C,o){if(B.isUndefined(C)){if(!B.isUndefined(Q))return e(void 0,Q,o)}else return e(Q,C,o)}function r(Q,C){if(!B.isUndefined(C))return e(void 0,C)}function i(Q,C){if(B.isUndefined(C)){if(!B.isUndefined(Q))return e(void 0,Q)}else return e(void 0,C)}function s(Q,C,o){if(o in I)return e(Q,C);if(o in A)return e(void 0,Q)}let a={url:r,method:r,data:r,baseURL:i,transformRequest:i,transformResponse:i,paramsSerializer:i,timeout:i,timeoutMessage:i,withCredentials:i,withXSRFToken:i,adapter:i,responseType:i,xsrfCookieName:i,xsrfHeaderName:i,onUploadProgress:i,onDownloadProgress:i,decompress:i,maxContentLength:i,maxBodyLength:i,beforeRedirect:i,transport:i,httpAgent:i,httpsAgent:i,cancelToken:i,socketPath:i,responseEncoding:i,validateStatus:s,headers:(Q,C)=>g(HI(Q),HI(C),!0)};return B.forEach(Object.keys(Object.assign({},A,I)),function(C){let o=a[C]||g,f=o(A[C],I[C],C);B.isUndefined(f)&&o!==s||(t[C]=f)}),t}var uA="1.6.8";var xA={};["object","boolean","number","function","string","symbol"].forEach((A,I)=>{xA[A]=function(e){return typeof e===A||"a"+(I<1?"n ":" ")+A}});var YI={};xA.transitional=function(I,t,e){function g(r,i){return"[Axios v"+uA+"] Transitional option \'"+r+"\'"+i+(e?". "+e:"")}return(r,i,s)=>{if(I===!1)throw new l(g(i," has been removed"+(t?" in "+t:"")),l.ERR_DEPRECATED);return t&&!YI[i]&&(YI[i]=!0,console.warn(g(i," has been deprecated since v"+t+" and will be removed in the near future"))),I?I(r,i,s):!0}};function ae(A,I,t){if(typeof A!="object")throw new l("options must be an object",l.ERR_BAD_OPTION_VALUE);let e=Object.keys(A),g=e.length;for(;g-- >0;){let r=e[g],i=I[r];if(i){let s=A[r],a=s===void 0||i(s,r,A);if(a!==!0)throw new l("option "+r+" must be "+a,l.ERR_BAD_OPTION_VALUE);continue}if(t!==!0)throw new l("Unknown option "+r,l.ERR_BAD_OPTION)}}var hA={assertOptions:ae,validators:xA};var H=hA.validators,x=class{constructor(I){this.defaults=I,this.interceptors={request:new kA,response:new kA}}async request(I,t){try{return await this._request(I,t)}catch(e){if(e instanceof Error){let g;Error.captureStackTrace?Error.captureStackTrace(g={}):g=new Error;let r=g.stack?g.stack.replace(/^.+\\n/,""):"";e.stack?r&&!String(e.stack).endsWith(r.replace(/^.+\\n.+\\n/,""))&&(e.stack+=`%0A`+r):e.stack=r}throw e}}_request(I,t){typeof I=="string"?(t=t||{},t.url=I):t=I||{},t=G(this.defaults,t);let{transitional:e,paramsSerializer:g,headers:r}=t;e!==void 0&&hA.assertOptions(e,{silentJSONParsing:H.transitional(H.boolean),forcedJSONParsing:H.transitional(H.boolean),clarifyTimeoutError:H.transitional(H.boolean)},!1),g!=null&&(B.isFunction(g)?t.paramsSerializer={serialize:g}:hA.assertOptions(g,{encode:H.function,serialize:H.function},!0)),t.method=(t.method||this.defaults.method||"get").toLowerCase();let i=r&&B.merge(r.common,r[t.method]);r&&B.forEach(["delete","get","head","post","put","patch","common"],E=>{delete r[E]}),t.headers=m.concat(i,r);let s=[],a=!0;this.interceptors.request.forEach(function(c){typeof c.runWhen=="function"&&c.runWhen(t)===!1||(a=a&&c.synchronous,s.unshift(c.fulfilled,c.rejected))});let Q=[];this.interceptors.response.forEach(function(c){Q.push(c.fulfilled,c.rejected)});let C,o=0,f;if(!a){let E=[DA.bind(this),void 0];for(E.unshift.apply(E,s),E.push.apply(E,Q),f=E.length,C=Promise.resolve(t);o<f;)C=C.then(E[o++],E[o++]);return C}f=s.length;let n=t;for(o=0;o<f;){let E=s[o++],c=s[o++];try{n=E(n)}catch(u){c.call(this,u);break}}try{C=DA.call(this,n)}catch(E){return Promise.reject(E)}for(o=0,f=Q.length;o<f;)C=C.then(Q[o++],Q[o++]);return C}getUri(I){I=G(this.defaults,I);let t=$(I.baseURL,I.url);return X(t,I.params,I.paramsSerializer)}};B.forEach(["delete","get","head","options"],function(I){x.prototype[I]=function(t,e){return this.request(G(e||{},{method:I,url:t,data:(e||{}).data}))}});B.forEach(["post","put","patch"],function(I){function t(e){return function(r,i,s){return this.request(G(s||{},{method:I,headers:e?{"Content-Type":"multipart/form-data"}:{},url:r,data:i}))}}x.prototype[I]=t(),x.prototype[I+"Form"]=t(!0)});var AA=x;var PA=class A{constructor(I){if(typeof I!="function")throw new TypeError("executor must be a function.");let t;this.promise=new Promise(function(r){t=r});let e=this;this.promise.then(g=>{if(!e._listeners)return;let r=e._listeners.length;for(;r-- >0;)e._listeners[r](g);e._listeners=null}),this.promise.then=g=>{let r,i=new Promise(s=>{e.subscribe(s),r=s}).then(g);return i.cancel=function(){e.unsubscribe(r)},i},I(function(r,i,s){e.reason||(e.reason=new J(r,i,s),t(e.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(I){if(this.reason){I(this.reason);return}this._listeners?this._listeners.push(I):this._listeners=[I]}unsubscribe(I){if(!this._listeners)return;let t=this._listeners.indexOf(I);t!==-1&&this._listeners.splice(t,1)}static source(){let I;return{token:new A(function(g){I=g}),cancel:I}}},bI=PA;function jA(A){return function(t){return A.apply(null,t)}}function WA(A){return B.isObject(A)&&A.isAxiosError===!0}var ZA={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(ZA).forEach(([A,I])=>{ZA[I]=A});var MI=ZA;function qI(A){let I=new AA(A),t=W(AA.prototype.request,I);return B.extend(t,AA.prototype,I,{allOwnKeys:!0}),B.extend(t,I,null,{allOwnKeys:!0}),t.create=function(g){return qI(G(A,g))},t}var h=qI(O);h.Axios=AA;h.CanceledError=J;h.CancelToken=bI;h.isCancel=v;h.VERSION=uA;h.toFormData=L;h.AxiosError=l;h.Cancel=h.CanceledError;h.all=function(I){return Promise.all(I)};h.spread=jA;h.isAxiosError=WA;h.mergeConfig=G;h.AxiosHeaders=m;h.formToJSON=A=>cA(B.isHTMLForm(A)?new FormData(A):A);h.getAdapter=lA.getAdapter;h.HttpStatusCode=MI;h.default=h;var dA=h;var{Axios:oi,AxiosError:Bi,CanceledError:Ci,isCancel:si,CancelToken:ni,VERSION:Qi,all:Ei,Cancel:ai,isAxiosError:ci,spread:fi,toFormData:li,AxiosHeaders:Di,HttpStatusCode:ui,formToJSON:hi,getAdapter:di,mergeConfig:yi}=dA;var IA,k,XA,VA={env:{emscripten_notify_memory_growth:function(A){XA=new Uint8Array(k.exports.memory.buffer)}}},yA=class{init(){return IA||(typeof fetch<"u"?IA=fetch("data:application/wasm;base64,"+KI).then(I=>I.arrayBuffer()).then(I=>WebAssembly.instantiate(I,VA)).then(this._init):IA=WebAssembly.instantiate(Buffer.from(KI,"base64"),VA).then(this._init),IA)}_init(I){k=I.instance,VA.env.emscripten_notify_memory_growth(0)}decode(I,t=0){if(!k)throw new Error("ZSTDDecoder: Await .init() before decoding.");let e=I.byteLength,g=k.exports.malloc(e);XA.set(I,g),t=t||Number(k.exports.ZSTD_findDecompressedSize(g,e));let r=k.exports.malloc(t),i=k.exports.ZSTD_decompress(r,t,g,e),s=XA.slice(r,r+i);return k.exports.free(g),k.exports.free(r),s}},KI="AGFzbQEAAAABbg5gA39/fwF/YAF/AX9gAn9/AGABfwBgBX9/f39/AX9gA39/fwBgBH9/f38Bf2AAAX9gAn9/AX9gB39/f39/f38Bf2ACf38BfmAIf39/f39/f38Bf2AFf39/f38AYA5/f39/f39/f39/f39/fwF/AicBA2Vudh9lbXNjcmlwdGVuX25vdGlmeV9tZW1vcnlfZ3Jvd3RoAAMDIyIHAAABAQMHAwEACQQABQEICAEFBgQEBAMGAAAKAAULDA0GBAUBcAEBAQUHAQGAAoCAAgYIAX8BQYCjBAsHrgELBm1lbW9yeQIABm1hbGxvYwAFBGZyZWUABgxaU1REX2lzRXJyb3IAEhlaU1REX2ZpbmREZWNvbXByZXNzZWRTaXplABwPWlNURF9kZWNvbXByZXNzACIZX19pbmRpcmVjdF9mdW5jdGlvbl90YWJsZQEAEF9fZXJybm9fbG9jYXRpb24AAQlzdGFja1NhdmUABwxzdGFja1Jlc3RvcmUACApzdGFja0FsbG9jAAkKi/IBIgUAQYQfCzMBAX8gAgRAIAAhAwNAIAMgAS0AADoAACADQQFqIQMgAUEBaiEBIAJBAWsiAg0ACwsgAAspAQF/IAIEQCAAIQMDQCADIAE6AAAgA0EBaiEDIAJBAWsiAg0ACwsgAAtsAQJ/QYAfKAIAIgEgAEEHakF4cSICaiEAAkAgAkEAIAAgAU0bDQAgAD8AQRB0SwRAIAA/AEEQdGtB//8DakEQdkAAQX9GBH9BAAVBABAAQQELRQ0BC0GAHyAANgIAIAEPC0GEH0EwNgIAQX8LuScBC38jAEEQayIKJAACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAIABB9AFNBEBBiB8oAgAiBkEQIABBC2pBeHEgAEELSRsiBUEDdiIAdiIBQQNxBEACQCABQX9zQQFxIABqIgJBA3QiAUGwH2oiACABQbgfaigCACIBKAIIIgRGBEBBiB8gBkF+IAJ3cTYCAAwBCyAEIAA2AgwgACAENgIICyABQQhqIQAgASACQQN0IgJBA3I2AgQgASACaiIBIAEoAgRBAXI2AgQMDwsgBUGQHygCACIHTQ0BIAEEQAJAQQIgAHQiAkEAIAJrciABIAB0cWgiAUEDdCIAQbAfaiICIABBuB9qKAIAIgAoAggiBEYEQEGIHyAGQX4gAXdxIgY2AgAMAQsgBCACNgIMIAIgBDYCCAsgACAFQQNyNgIEIAAgBWoiCCABQQN0IgEgBWsiBEEBcjYCBCAAIAFqIAQ2AgAgBwRAIAdBeHFBsB9qIQFBnB8oAgAhAgJ/IAZBASAHQQN2dCIDcUUEQEGIHyADIAZyNgIAIAEMAQsgASgCCAshAyABIAI2AgggAyACNgIMIAIgATYCDCACIAM2AggLIABBCGohAEGcHyAINgIAQZAfIAQ2AgAMDwtBjB8oAgAiC0UNASALaEECdEG4IWooAgAiAigCBEF4cSAFayEDIAIhAQNAAkAgASgCECIARQRAIAEoAhQiAEUNAQsgACgCBEF4cSAFayIBIAMgASADSSIBGyEDIAAgAiABGyECIAAhAQwBCwsgAigCGCEJIAIgAigCDCIERwRAQZgfKAIAGiACKAIIIgAgBDYCDCAEIAA2AggMDgsgAkEUaiIBKAIAIgBFBEAgAigCECIARQ0DIAJBEGohAQsDQCABIQggACIEQRRqIgEoAgAiAA0AIARBEGohASAEKAIQIgANAAsgCEEANgIADA0LQX8hBSAAQb9/Sw0AIABBC2oiAEF4cSEFQYwfKAIAIghFDQBBACAFayEDAkACQAJAAn9BACAFQYACSQ0AGkEfIAVB////B0sNABogBUEmIABBCHZnIgBrdkEBcSAAQQF0a0E+agsiB0ECdEG4IWooAgAiAUUEQEEAIQAMAQtBACEAIAVBGSAHQQF2a0EAIAdBH0cbdCECA0ACQCABKAIEQXhxIAVrIgYgA08NACABIQQgBiIDDQBBACEDIAEhAAwDCyAAIAEoAhQiBiAGIAEgAkEddkEEcWooAhAiAUYbIAAgBhshACACQQF0IQIgAQ0ACwsgACAEckUEQEEAIQRBAiAHdCIAQQAgAGtyIAhxIgBFDQMgAGhBAnRBuCFqKAIAIQALIABFDQELA0AgACgCBEF4cSAFayICIANJIQEgAiADIAEbIQMgACAEIAEbIQQgACgCECIBBH8gAQUgACgCFAsiAA0ACwsgBEUNACADQZAfKAIAIAVrTw0AIAQoAhghByAEIAQoAgwiAkcEQEGYHygCABogBCgCCCIAIAI2AgwgAiAANgIIDAwLIARBFGoiASgCACIARQRAIAQoAhAiAEUNAyAEQRBqIQELA0AgASEGIAAiAkEUaiIBKAIAIgANACACQRBqIQEgAigCECIADQALIAZBADYCAAwLCyAFQZAfKAIAIgRNBEBBnB8oAgAhAAJAIAQgBWsiAUEQTwRAIAAgBWoiAiABQQFyNgIEIAAgBGogATYCACAAIAVBA3I2AgQMAQsgACAEQQNyNgIEIAAgBGoiASABKAIEQQFyNgIEQQAhAkEAIQELQZAfIAE2AgBBnB8gAjYCACAAQQhqIQAMDQsgBUGUHygCACICSQRAQZQfIAIgBWsiATYCAEGgH0GgHygCACIAIAVqIgI2AgAgAiABQQFyNgIEIAAgBUEDcjYCBCAAQQhqIQAMDQtBACEAIAVBL2oiAwJ/QeAiKAIABEBB6CIoAgAMAQtB7CJCfzcCAEHkIkKAoICAgIAENwIAQeAiIApBDGpBcHFB2KrVqgVzNgIAQfQiQQA2AgBBxCJBADYCAEGAIAsiAWoiBkEAIAFrIghxIgEgBU0NDEHAIigCACIEBEBBuCIoAgAiByABaiIJIAdNIAQgCUlyDQ0LAkBBxCItAABBBHFFBEACQAJAAkACQEGgHygCACIEBEBByCIhAANAIAQgACgCACIHTwRAIAcgACgCBGogBEsNAwsgACgCCCIADQALC0EAEAQiAkF/Rg0DIAEhBkHkIigCACIAQQFrIgQgAnEEQCABIAJrIAIgBGpBACAAa3FqIQYLIAUgBk8NA0HAIigCACIABEBBuCIoAgAiBCAGaiIIIARNIAAgCElyDQQLIAYQBCIAIAJHDQEMBQsgBiACayAIcSIGEAQiAiAAKAIAIAAoAgRqRg0BIAIhAAsgAEF/Rg0BIAVBMGogBk0EQCAAIQIMBAtB6CIoAgAiAiADIAZrakEAIAJrcSICEARBf0YNASACIAZqIQYgACECDAMLIAJBf0cNAgtBxCJBxCIoAgBBBHI2AgALIAEQBCICQX9GQQAQBCIAQX9GciAAIAJNcg0FIAAgAmsiBiAFQShqTQ0FC0G4IkG4IigCACAGaiIANgIAQbwiKAIAIABJBEBBvCIgADYCAAsCQEGgHygCACIDBEBByCIhAANAIAIgACgCACIBIAAoAgQiBGpGDQIgACgCCCIADQALDAQLQZgfKAIAIgBBACAAIAJNG0UEQEGYHyACNgIAC0EAIQBBzCIgBjYCAEHIIiACNgIAQagfQX82AgBBrB9B4CIoAgA2AgBB1CJBADYCAANAIABBA3QiAUG4H2ogAUGwH2oiBDYCACABQbwfaiAENgIAIABBAWoiAEEgRw0AC0GUHyAGQShrIgBBeCACa0EHcSIBayIENgIAQaAfIAEgAmoiATYCACABIARBAXI2AgQgACACakEoNgIEQaQfQfAiKAIANgIADAQLIAIgA00gASADS3INAiAAKAIMQQhxDQIgACAEIAZqNgIEQaAfIANBeCADa0EHcSIAaiIBNgIAQZQfQZQfKAIAIAZqIgIgAGsiADYCACABIABBAXI2AgQgAiADakEoNgIEQaQfQfAiKAIANgIADAMLQQAhBAwKC0EAIQIMCAtBmB8oAgAgAksEQEGYHyACNgIACyACIAZqIQFByCIhAAJAAkACQANAIAEgACgCAEcEQCAAKAIIIgANAQwCCwsgAC0ADEEIcUUNAQtByCIhAANAIAMgACgCACIBTwRAIAEgACgCBGoiBCADSw0DCyAAKAIIIQAMAAsACyAAIAI2AgAgACAAKAIEIAZqNgIEIAJBeCACa0EHcWoiByAFQQNyNgIEIAFBeCABa0EHcWoiBiAFIAdqIgVrIQAgAyAGRgRAQaAfIAU2AgBBlB9BlB8oAgAgAGoiADYCACAFIABBAXI2AgQMCAtBnB8oAgAgBkYEQEGcHyAFNgIAQZAfQZAfKAIAIABqIgA2AgAgBSAAQQFyNgIEIAAgBWogADYCAAwICyAGKAIEIgNBA3FBAUcNBiADQXhxIQkgA0H/AU0EQCAGKAIMIgEgBigCCCICRgRAQYgfQYgfKAIAQX4gA0EDdndxNgIADAcLIAIgATYCDCABIAI2AggMBgsgBigCGCEIIAYgBigCDCICRwRAIAYoAggiASACNgIMIAIgATYCCAwFCyAGQRRqIgEoAgAiA0UEQCAGKAIQIgNFDQQgBkEQaiEBCwNAIAEhBCADIgJBFGoiASgCACIDDQAgAkEQaiEBIAIoAhAiAw0ACyAEQQA2AgAMBAtBlB8gBkEoayIAQXggAmtBB3EiAWsiCDYCAEGgHyABIAJqIgE2AgAgASAIQQFyNgIEIAAgAmpBKDYCBEGkH0HwIigCADYCACADIARBJyAEa0EHcWpBL2siACAAIANBEGpJGyIBQRs2AgQgAUHQIikCADcCECABQcgiKQIANwIIQdAiIAFBCGo2AgBBzCIgBjYCAEHIIiACNgIAQdQiQQA2AgAgAUEYaiEAA0AgAEEHNgIEIABBCGogAEEEaiEAIARJDQALIAEgA0YNACABIAEoAgRBfnE2AgQgAyABIANrIgJBAXI2AgQgASACNgIAIAJB/wFNBEAgAkF4cUGwH2ohAAJ/QYgfKAIAIgFBASACQQN2dCICcUUEQEGIHyABIAJyNgIAIAAMAQsgACgCCAshASAAIAM2AgggASADNgIMIAMgADYCDCADIAE2AggMAQtBHyEAIAJB////B00EQCACQSYgAkEIdmciAGt2QQFxIABBAXRrQT5qIQALIAMgADYCHCADQgA3AhAgAEECdEG4IWohAQJAAkBBjB8oAgAiBEEBIAB0IgZxRQRAQYwfIAQgBnI2AgAgASADNgIADAELIAJBGSAAQQF2a0EAIABBH0cbdCEAIAEoAgAhBANAIAQiASgCBEF4cSACRg0CIABBHXYhBCAAQQF0IQAgASAEQQRxaiIGKAIQIgQNAAsgBiADNgIQCyADIAE2AhggAyADNgIMIAMgAzYCCAwBCyABKAIIIgAgAzYCDCABIAM2AgggA0EANgIYIAMgATYCDCADIAA2AggLQZQfKAIAIgAgBU0NAEGUHyAAIAVrIgE2AgBBoB9BoB8oAgAiACAFaiICNgIAIAIgAUEBcjYCBCAAIAVBA3I2AgQgAEEIaiEADAgLQYQfQTA2AgBBACEADAcLQQAhAgsgCEUNAAJAIAYoAhwiAUECdEG4IWoiBCgCACAGRgRAIAQgAjYCACACDQFBjB9BjB8oAgBBfiABd3E2AgAMAgsgCEEQQRQgCCgCECAGRhtqIAI2AgAgAkUNAQsgAiAINgIYIAYoAhAiAQRAIAIgATYCECABIAI2AhgLIAYoAhQiAUUNACACIAE2AhQgASACNgIYCyAAIAlqIQAgBiAJaiIGKAIEIQMLIAYgA0F+cTYCBCAFIABBAXI2AgQgACAFaiAANgIAIABB/wFNBEAgAEF4cUGwH2ohAQJ/QYgfKAIAIgJBASAAQQN2dCIAcUUEQEGIHyAAIAJyNgIAIAEMAQsgASgCCAshACABIAU2AgggACAFNgIMIAUgATYCDCAFIAA2AggMAQtBHyEDIABB////B00EQCAAQSYgAEEIdmciAWt2QQFxIAFBAXRrQT5qIQMLIAUgAzYCHCAFQgA3AhAgA0ECdEG4IWohAQJAAkBBjB8oAgAiAkEBIAN0IgRxRQRAQYwfIAIgBHI2AgAgASAFNgIADAELIABBGSADQQF2a0EAIANBH0cbdCEDIAEoAgAhAgNAIAIiASgCBEF4cSAARg0CIANBHXYhAiADQQF0IQMgASACQQRxaiIEKAIQIgINAAsgBCAFNgIQCyAFIAE2AhggBSAFNgIMIAUgBTYCCAwBCyABKAIIIgAgBTYCDCABIAU2AgggBUEANgIYIAUgATYCDCAFIAA2AggLIAdBCGohAAwCCwJAIAdFDQACQCAEKAIcIgBBAnRBuCFqIgEoAgAgBEYEQCABIAI2AgAgAg0BQYwfIAhBfiAAd3EiCDYCAAwCCyAHQRBBFCAHKAIQIARGG2ogAjYCACACRQ0BCyACIAc2AhggBCgCECIABEAgAiAANgIQIAAgAjYCGAsgBCgCFCIARQ0AIAIgADYCFCAAIAI2AhgLAkAgA0EPTQRAIAQgAyAFaiIAQQNyNgIEIAAgBGoiACAAKAIEQQFyNgIEDAELIAQgBUEDcjYCBCAEIAVqIgIgA0EBcjYCBCACIANqIAM2AgAgA0H/AU0EQCADQXhxQbAfaiEAAn9BiB8oAgAiAUEBIANBA3Z0IgNxRQRAQYgfIAEgA3I2AgAgAAwBCyAAKAIICyEBIAAgAjYCCCABIAI2AgwgAiAANgIMIAIgATYCCAwBC0EfIQAgA0H///8HTQRAIANBJiADQQh2ZyIAa3ZBAXEgAEEBdGtBPmohAAsgAiAANgIcIAJCADcCECAAQQJ0QbghaiEBAkACQCAIQQEgAHQiBnFFBEBBjB8gBiAIcjYCACABIAI2AgAMAQsgA0EZIABBAXZrQQAgAEEfRxt0IQAgASgCACEFA0AgBSIBKAIEQXhxIANGDQIgAEEddiEGIABBAXQhACABIAZBBHFqIgYoAhAiBQ0ACyAGIAI2AhALIAIgATYCGCACIAI2AgwgAiACNgIIDAELIAEoAggiACACNgIMIAEgAjYCCCACQQA2AhggAiABNgIMIAIgADYCCAsgBEEIaiEADAELAkAgCUUNAAJAIAIoAhwiAEECdEG4IWoiASgCACACRgRAIAEgBDYCACAEDQFBjB8gC0F+IAB3cTYCAAwCCyAJQRBBFCAJKAIQIAJGG2ogBDYCACAERQ0BCyAEIAk2AhggAigCECIABEAgBCAANgIQIAAgBDYCGAsgAigCFCIARQ0AIAQgADYCFCAAIAQ2AhgLAkAgA0EPTQRAIAIgAyAFaiIAQQNyNgIEIAAgAmoiACAAKAIEQQFyNgIEDAELIAIgBUEDcjYCBCACIAVqIgQgA0EBcjYCBCADIARqIAM2AgAgBwRAIAdBeHFBsB9qIQBBnB8oAgAhAQJ/QQEgB0EDdnQiBSAGcUUEQEGIHyAFIAZyNgIAIAAMAQsgACgCCAshBiAAIAE2AgggBiABNgIMIAEgADYCDCABIAY2AggLQZwfIAQ2AgBBkB8gAzYCAAsgAkEIaiEACyAKQRBqJAAgAAvSCwEHfwJAIABFDQAgAEEIayICIABBBGsoAgAiAUF4cSIAaiEFAkAgAUEBcQ0AIAFBA3FFDQEgAiACKAIAIgFrIgJBmB8oAgBJDQEgACABaiEAAkACQEGcHygCACACRwRAIAFB/wFNBEAgAUEDdiEEIAIoAgwiASACKAIIIgNGBEBBiB9BiB8oAgBBfiAEd3E2AgAMBQsgAyABNgIMIAEgAzYCCAwECyACKAIYIQYgAiACKAIMIgFHBEAgAigCCCIDIAE2AgwgASADNgIIDAMLIAJBFGoiBCgCACIDRQRAIAIoAhAiA0UNAiACQRBqIQQLA0AgBCEHIAMiAUEUaiIEKAIAIgMNACABQRBqIQQgASgCECIDDQALIAdBADYCAAwCCyAFKAIEIgFBA3FBA0cNAkGQHyAANgIAIAUgAUF+cTYCBCACIABBAXI2AgQgBSAANgIADwtBACEBCyAGRQ0AAkAgAigCHCIDQQJ0QbghaiIEKAIAIAJGBEAgBCABNgIAIAENAUGMH0GMHygCAEF+IAN3cTYCAAwCCyAGQRBBFCAGKAIQIAJGG2ogATYCACABRQ0BCyABIAY2AhggAigCECIDBEAgASADNgIQIAMgATYCGAsgAigCFCIDRQ0AIAEgAzYCFCADIAE2AhgLIAIgBU8NACAFKAIEIgFBAXFFDQACQAJAAkACQCABQQJxRQRAQaAfKAIAIAVGBEBBoB8gAjYCAEGUH0GUHygCACAAaiIANgIAIAIgAEEBcjYCBCACQZwfKAIARw0GQZAfQQA2AgBBnB9BADYCAA8LQZwfKAIAIAVGBEBBnB8gAjYCAEGQH0GQHygCACAAaiIANgIAIAIgAEEBcjYCBCAAIAJqIAA2AgAPCyABQXhxIABqIQAgAUH/AU0EQCABQQN2IQQgBSgCDCIBIAUoAggiA0YEQEGIH0GIHygCAEF+IAR3cTYCAAwFCyADIAE2AgwgASADNgIIDAQLIAUoAhghBiAFIAUoAgwiAUcEQEGYHygCABogBSgCCCIDIAE2AgwgASADNgIIDAMLIAVBFGoiBCgCACIDRQRAIAUoAhAiA0UNAiAFQRBqIQQLA0AgBCEHIAMiAUEUaiIEKAIAIgMNACABQRBqIQQgASgCECIDDQALIAdBADYCAAwCCyAFIAFBfnE2AgQgAiAAQQFyNgIEIAAgAmogADYCAAwDC0EAIQELIAZFDQACQCAFKAIcIgNBAnRBuCFqIgQoAgAgBUYEQCAEIAE2AgAgAQ0BQYwfQYwfKAIAQX4gA3dxNgIADAILIAZBEEEUIAYoAhAgBUYbaiABNgIAIAFFDQELIAEgBjYCGCAFKAIQIgMEQCABIAM2AhAgAyABNgIYCyAFKAIUIgNFDQAgASADNgIUIAMgATYCGAsgAiAAQQFyNgIEIAAgAmogADYCACACQZwfKAIARw0AQZAfIAA2AgAPCyAAQf8BTQRAIABBeHFBsB9qIQECf0GIHygCACIDQQEgAEEDdnQiAHFFBEBBiB8gACADcjYCACABDAELIAEoAggLIQAgASACNgIIIAAgAjYCDCACIAE2AgwgAiAANgIIDwtBHyEDIABB////B00EQCAAQSYgAEEIdmciAWt2QQFxIAFBAXRrQT5qIQMLIAIgAzYCHCACQgA3AhAgA0ECdEG4IWohAQJAAkACQEGMHygCACIEQQEgA3QiB3FFBEBBjB8gBCAHcjYCACABIAI2AgAgAiABNgIYDAELIABBGSADQQF2a0EAIANBH0cbdCEDIAEoAgAhAQNAIAEiBCgCBEF4cSAARg0CIANBHXYhASADQQF0IQMgBCABQQRxaiIHQRBqKAIAIgENAAsgByACNgIQIAIgBDYCGAsgAiACNgIMIAIgAjYCCAwBCyAEKAIIIgAgAjYCDCAEIAI2AgggAkEANgIYIAIgBDYCDCACIAA2AggLQagfQagfKAIAQQFrIgBBfyAAGzYCAAsLBAAjAAsGACAAJAALEAAjACAAa0FwcSIAJAAgAAtKAQF/IAAgAUkEQCAAIAEgAhACDwsgAgRAIAAgAmohAyABIAJqIQEDQCADQQFrIgMgAUEBayIBLQAAOgAAIAJBAWsiAg0ACwsgAAv9DgIRfwF+IwBBMGsiByQAQbh/IQgCQCAFRQ0AIAQsAAAiCUH/AXEhCwJAIAlBAEgEQCALQf4Aa0EBdiIGIAVPDQJBbCEIIAtB/wBrIgtB/wFLDQIgBEEBaiEIQQAhBQNAIAUgC08EQCALIQggBiELDAMFIAAgBWogCCAFQQF2aiIELQAAQQR2OgAAIAAgBUEBcmogBC0AAEEPcToAACAFQQJqIQUMAQsACwALIAUgC00NASAHQf8BNgIEIAYgB0EEaiAHQQhqIARBAWoiDiALEAwiBEGIf0sEQCAEIQgMAgtBVCEIIAcoAggiEEEGSw0BIAcoAgQiEUEBdCIJQQJqrUIBIBCthiIYQQEgEHQiDUEBaiIFrUIChnx8Qgt8Qvz//////////wCDQuQCVg0BQVIhCCARQf8BSw0BIA1Bf3NBAnRB5AJqrSARQQFqIhVBAXStIBh8Qgh8VA0BIAsgBGshFiAEIA5qIRcgBkGABGoiEiAFQQJ0aiIRIAlqQQJqIQ4gBkGEBGohE0GAgAIgEHRBEHYhCUEAIQVBASEPIA1BAWsiFCEKA0AgBSAVRkUEQAJAIAYgBUEBdCIIai8BACIEQf//A0YEQCATIApBAnRqIAU6AAIgCkEBayEKQQEhBAwBCyAPQQAgCSAEwUobIQ8LIAggEWogBDsBACAFQQFqIQUMAQsLIAYgDzsBggQgBiAQOwGABAJAIAogFEYEQCANQQN2IQhCACEYQQAhDwNAIAwgFUYEQCAIIA1BAXZqQQNqIglBAXQhCEEAIQRBACEKA0BBACEFIAogDU8NBANAIAVBAkZFBEAgEyAFIAlsIARqIBRxQQJ0aiAOIAUgCmpqLQAAOgACIAVBAWohBQwBCwsgCkECaiEKIAQgCGogFHEhBAwACwAFIAYgDEEBdGouAQAhCSAOIA9qIgQgGDcAAEEIIQUDQCAFIAlORQRAIAQgBWogGDcAACAFQQhqIQUMAQsLIBhCgYKEiJCgwIABfCEYIAxBAWohDCAJIA9qIQ8MAQsACwALIA1BA3YgDUEBdmpBA2ohCEEAIQUDQCAMIBVGRQRAQQAhCSAGIAxBAXRqLgEAIgRBACAEQQBKGyEEA0AgBCAJRkUEQCATIAVBAnRqIAw6AAIDQCAFIAhqIBRxIgUgCksNAAsgCUEBaiEJDAELCyAMQQFqIQwMAQsLQX8hCCAFDQILIBBBAWohCEEAIQUDQCAFIA1GRQRAIBEgEyAFQQJ0aiIOLQACQQF0aiIEIAQvAQAiCUEBajsBACAOIAggCWdBYHNqIgQ6AAMgDiAJIAR0IA1rOwEAIAVBAWohBQwBCwsCQAJAIAYvAYIEBEAgB0EcaiIEIBcgFhANIghBiH9LDQIgB0EUaiAEIBIQDiAHQQxqIAQgEhAOQQAhBQNAIAdBHGoiBBAPIAVB+wFLcg0CIAAgBWoiBiAHQRRqIAQQEDoAACAGIAdBDGogBBAQOgABIAVBAnIhBCAHQRxqEA8EQCAEIQUMAwUgACAEaiAHQRRqIAdBHGoiBBAQOgAAIAYgB0EMaiAEEBA6AAMgBUEEaiEFDAELAAsACyAHQRxqIgQgFyAWEA0iCEGIf0sNASAHQRRqIAQgEhAOIAdBDGogBCASEA5BACEFA0AgB0EcaiIEEA8gBUH7AUtyRQRAIAAgBWoiBiAHQRRqIAQQEToAACAGIAdBDGogBBAROgABIAVBAnIhBCAHQRxqEA8EQCAEIQUFIAAgBGogB0EUaiAHQRxqIgQQEToAACAGIAdBDGogBBAROgADIAVBBGohBQwCCwsLAn8DQEG6fyEIIAVB/QFLDQMgACAFaiIGIAdBFGogB0EcaiIJEBE6AAAgBkEBaiEEIAkQD0EDRgRAIAdBDGohCEECDAILIAVB/AFLDQMgBiAHQQxqIAdBHGoiBBAROgABIAVBAmohBSAEEA9BA0cNAAsgACAFaiEEIAdBFGohCEEDCyAEIAggB0EcahAROgAAIAZqIABrIQgMAQsCfwNAQbp/IQggBUH9AUsNAiAAIAVqIgYgB0EUaiAHQRxqIgkQEDoAACAGQQFqIQQgCRAPQQNGBEAgB0EMaiEIQQIMAgsgBUH8AUsNAiAGIAdBDGogB0EcaiIEEBA6AAEgBUECaiEFIAQQD0EDRw0ACyAAIAVqIQQgB0EUaiEIQQMLIAQgCCAHQRxqEBA6AAAgBmogAGshCAsgCEGIf0sNAQsgCCEEQQAhBSABQQBBNBADIQlBACEKA0AgBCAFRwRAIAAgBWoiBi0AACIBQQtLBEBBbCEIDAMFIAkgAUECdGoiASABKAIAQQFqNgIAIAVBAWohBUEBIAYtAAB0QQF1IApqIQoMAgsACwtBbCEIIApFDQAgCmciBUEfcyIBQQtLDQAgA0EgIAVrNgIAQQFBAiABdCAKayIDZ0EfcyIBdCADRw0AIAAgBGogAUEBaiIAOgAAIAkgAEECdGoiACAAKAIAQQFqNgIAIAkoAgQiAEECSSAAQQFxcg0AIAIgBEEBajYCACALQQFqIQgLIAdBMGokACAIC6AFAQx/IwBBEGsiDCQAAn8gBEEHTQRAIAxCADcDCCAMQQhqIgUgAyAEEAIaQWwgACABIAIgBUEIEAwiACAAIARLGyAAIABBiX9JGwwBCyAAQQAgASgCAEEBaiINQQF0EAMhD0FUIAMoAAAiBkEPcSIAQQpLDQAaIAIgAEEFajYCACADIARqIgJBBGshByACQQdrIQsgAEEGaiEOQQQhAiAGQQR2IQVBICAAdCIIQQFyIQlBACEAQQEhBiADIQQDQAJAIAZBAXFFBEADQCAFQX9zQYCAgIB4cmgiBkEYSUUEQCAAQSRqIQAgBCALTQR/IARBA2oFIAQgC2tBA3QgAmpBH3EhAiAHCyIEKAAAIAJ2IQUMAQsLIAIgBkEecSIKakECaiECIAZBAXZBA2wgAGogBSAKdkEDcWoiACANTw0BAn8gBCALSyACQQN2IARqIgUgB0txRQRAIAJBB3EhAiAFDAELIAQgB2tBA3QgAmpBH3EhAiAHCyIEKAAAIAJ2IQULIAUgCEEBa3EiBiAIQQF0QQFrIgogCWsiEEkEfyAOQQFrBSAFIApxIgUgEEEAIAUgCE4bayEGIA4LIQUgDyAAQQF0aiAGQQFrIgo7AQAgAEEBaiEAIAIgBWohAiAIQQEgBmsgCiAGQQBKGyAJaiIJSgRAIAlBAkgNAUEgIAlnIgVrIQ5BASAFQR9zdCEICyAAIA1PDQAgCkEARyEGAn8gBCALSyACQQN1IARqIgUgB0txRQRAIAJBB3EhAiAFDAELIAIgBCAHa0EDdGpBH3EhAiAHCyIEKAAAIAJ2IQUMAQsLQWwgCUEBRw0AGkFQIAAgDUsNABpBbCACQSBKDQAaIAEgAEEBazYCACAEIAJBB2pBA3VqIANrCyAMQRBqJAAL8gEBAX8gAkUEQCAAQgA3AgAgAEEANgIQIABCADcCCEG4fw8LIAAgATYCDCAAIAFBBGo2AhAgAkEETwRAIAAgASACaiIBQQRrIgM2AgggACADKAAANgIAIAFBAWstAAAiAQRAIAAgAWdBF2s2AgQgAg8LIABBADYCBEF/DwsgACABNgIIIAAgAS0AACIDNgIAAkACQAJAIAJBAmsOAgEAAgsgACABLQACQRB0IANyIgM2AgALIAAgAS0AAUEIdCADajYCAAsgASACakEBay0AACIBRQRAIABBADYCBEFsDwsgACABZyACQQN0a0EJajYCBCACC0QBAn8gASACLwEAIgMgASgCBGoiBDYCBCAAIANBAnRBoB1qKAIAIAEoAgBBACAEa3ZxNgIAIAEQDxogACACQQRqNgIEC58BAQR/QQMhASAAKAIEIgJBIE0EQCAAKAIIIgEgACgCEE8EQCAAIAJBB3E2AgQgACABIAJBA3ZrIgI2AgggACACKAAANgIAQQAPCyAAKAIMIgMgAUYEQEEBQQIgAkEgSRsPCyAAIAEgASADayACQQN2IgQgASAEayADSSIBGyIDayIENgIIIAAgAiADQQN0azYCBCAAIAQoAAA2AgALIAELSAEEfyAAKAIEIAAoAgBBAnRqIgItAAIgAi8BACEEIAEgASgCBCIFIAItAAMiAmo2AgQgACAEIAEoAgAgBXRBACACa3ZqNgIAC1IBBH8gACgCBCAAKAIAQQJ0aiICLQACIAIvAQAhBCABIAItAAMiAiABKAIEaiIFNgIEIAAgBCACQQJ0QaAdaigCACABKAIAQQAgBWt2cWo2AgALCAAgAEGIf0sLGgAgAARAIAEEQCACIAAgARECAA8LIAAQBgsLpggCDX8BfiMAQRBrIgkkACAJQQA2AgwgCUEANgIIAn8CQCADQegJaiADIAlBCGogCUEMaiABIAIgA0GAAWoQCyIPQYh/Sw0AQVQgCSgCDCIEIAAoAgAiAUH/AXFBAWpLDQEaIABBBGohCyAAIAFB/4GAeHEgBEEQdEGAgPwHcXI2AgBBfyAEIARBAEgbQQFqIQBBACEBIAkoAgghBUEAIQIDQCAAIAJGBEAgBUEDayEBQQAhAANAAkBBACECIAAgAU4EQANAIAAgBU4NAiADIAAgA2pB6AlqLQAAQQJ0akFAayIBIAEoAgAiAUEBajYCACABIANqIAA6AOgHIABBAWohAAwACwAFA0AgAkEERkUEQCADIAMgACACaiIHakHoCWotAABBAnRqQUBrIgggCCgCACIIQQFqNgIAIAMgCGogBzoA6AcgAkEBaiECDAELCyAAQQRqIQAMAgsACwsgBEEBaiEOIAMoAgAhB0EAIQBBASEIA0AgCCAORg0DIA4gCGshBCADIAhBAnRqKAIAIQUCQAJAAkACQAJAAkBBASAIdEEBdSINQQFrDggAAQQCBAQEAwQLQQAhAiAFQQAgBUEAShshBiAAIQEDQCACIAZGDQUgAyACIAdqai0A6AchCiALIAFBAXRqIgwgBDoAASAMIAo6AAAgAkEBaiECIAFBAWohAQwACwALQQAhAiAFQQAgBUEAShshCiAAIQEDQCACIApGDQQgCyABQQF0aiIGIAMgAiAHamotAOgHIgw6AAIgBiAEOgABIAYgDDoAACAGIAQ6AAMgAkEBaiECIAFBAmohAQwACwALQQAhAiAFQQAgBUEAShshBiAEQQh0QYD+A3EhBCAAIQEDQCACIAZGDQMgCyABQQF0aiAEIAMgAiAHamotAOgHcq1CgYCEgJCAwAB+NwAAIAJBAWohAiABQQRqIQEMAAsAC0EAIQIgBUEAIAVBAEobIQYgBEEIdEGA/gNxIQQgACEBA0AgAiAGRg0CIAsgAUEBdGoiCiAEIAMgAiAHamotAOgHcq1CgYCEgJCAwAB+IhE3AAggCiARNwAAIAJBAWohAiABQQhqIQEMAAsAC0EAIQEgBUEAIAVBAEobIQogBEEIdEGA/gNxIQwgACEEA0AgASAKRg0BIAsgBEEBdGohECAMIAMgASAHamotAOgHcq1CgYCEgJCAwAB+IRFBACECA0AgAiANTkUEQCAQIAJBAXRqIgYgETcAGCAGIBE3ABAgBiARNwAIIAYgETcAACACQRBqIQIMAQsLIAFBAWohASAEIA1qIQQMAAsACyAIQQFqIQggBSAHaiEHIAUgDWwgAGohAAwACwAFIAMgAkECdGoiB0FAayABNgIAIAJBAWohAiAHKAIAIAFqIQEMAQsACwALIA8LIAlBEGokAAvyAgEGfyMAQSBrIgUkACAEKAIAIQYgBUEMaiACIAMQDSIDQYh/TQRAIARBBGohAiAAIAFqIglBA2shBEEAIAZBEHZrQR9xIQMDQCAFQQxqEA8gACAET3JFBEAgAiAFKAIMIgYgBSgCECIHdCADdkEBdGoiCC0AASEKIAAgCC0AADoAACACIAYgByAKaiIGdCADdkEBdGoiBy0AACEIIAUgBiAHLQABajYCECAAIAg6AAEgAEECaiEADAELCwNAIAVBDGoQDyEHIAUoAgwhBiAFKAIQIQQgACAJTyAHckUEQCACIAYgBHQgA3ZBAXRqIgYtAAAhByAFIAQgBi0AAWo2AhAgACAHOgAAIABBAWohAAwBCwsDQCAAIAlPRQRAIAIgBiAEdCADdkEBdGoiBy0AASEIIAAgBy0AADoAACAAQQFqIQAgBCAIaiEEDAELC0FsQWwgASAFKAIUIAUoAhhHGyAEQSBHGyEDCyAFQSBqJAAgAwvPFAEjfyMAQdAAayIFJABBbCEJAkAgA0EKSQ0AAkAgAyACLwAEIgcgAi8AACIIIAIvAAIiDWpqQQZqIgxJDQAgBC8BAiEGIAVBPGogAkEGaiICIAgQDSIJQYh/Sw0BIAVBKGogAiAIaiICIA0QDSIJQYh/Sw0BIAVBFGogAiANaiICIAcQDSIJQYh/Sw0BIAUgAiAHaiADIAxrEA0iCUGIf0sNASAEQQRqIQogACABaiIfQQNrISBBACAGa0EfcSELIAUoAgghESAFKAIcIRIgBSgCMCETIAUoAkQhFCAFKAIEIQkgBSgCGCENIAUoAiwhDCAFKAJAIQYgBSgCECEhIAUoAiQhIiAFKAI4ISMgBSgCTCEkIAUoAgAhFSAFKAIUIRYgBSgCKCEXIAUoAjwhGEEBIQ8gACABQQNqQQJ2IgRqIgMgBGoiAiAEaiIZIQQgAiEIIAMhBwNAIA9BAXFFIAQgIE9yRQRAIAAgCiAYIAZ0IAt2QQJ0aiIOLwEAOwAAIA4tAAIhGiAOLQADIRAgByAKIBcgDHQgC3ZBAnRqIg4vAQA7AAAgDi0AAiEbIA4tAAMhDyAIIAogFiANdCALdkECdGoiDi8BADsAACAOLQACIRwgDi0AAyEdIAQgCiAVIAl0IAt2QQJ0aiIOLwEAOwAAIA4tAAIhHiAOLQADIQ4gACAQaiIlIAogGCAGIBpqIgZ0IAt2QQJ0aiIQLwEAOwAAIBAtAAIgEC0AAyEmIAcgD2oiJyAKIBcgDCAbaiIadCALdkECdGoiBy8BADsAACAHLQACIQwgBy0AAyEQIAggHWoiGyAKIBYgDSAcaiIPdCALdkECdGoiCC8BADsAACAILQACIQ0gCC0AAyEcIAQgDmoiHSAKIBUgCSAeaiIOdCALdkECdGoiCS8BADsAACAGaiEAQQMhBwJ/IBQgJEkEQCAAIQZBAwwBCyAAQQdxIQYgFCAAQQN2ayIUKAAAIRhBAAsgCS0AAyEeIAktAAIhCCAMIBpqIQAgEyAjSQR/IAAFIBMgAEEDdmsiEygAACEXQQAhByAAQQdxCyEMIA0gD2ohACAHciEJQQMhDwJ/IBIgIkkEQCAAIQ1BAwwBCyAAQQdxIQ0gEiAAQQN2ayISKAAAIRZBAAsgCCAOaiEAIAlyIBEgIUkEfyAABSARIABBA3ZrIhEoAAAhFUEAIQ8gAEEHcQshCSAlICZqIQAgECAnaiEHIBsgHGohCCAdIB5qIQQgD3JFIQ8MAQsLIAUgDDYCLCAFIAY2AkAgBSANNgIYIAUgCTYCBCAFIBQ2AkQgBSATNgIwIAUgEjYCHCAFIBE2AgggBSAYNgI8IAUgFzYCKCAFIBY2AhQgBSAVNgIAIAIgB0kgACADS3INAEFsIQkgCCAZSw0BIANBA2shCQNAIAVBPGoQD0UgACAJSXEEQCAAIAogBSgCPCINIAUoAkAiDHQgC3ZBAnRqIg4vAQA7AAAgACAOLQADaiIGIAogDSAMIA4tAAJqIgB0IAt2QQJ0aiIMLwEAOwAAIAUgACAMLQACajYCQCAGIAwtAANqIQAMAQUgA0ECayEMA0AgBUE8ahAPIQYgBSgCPCENIAUoAkAhCSAAIAxLIAZyRQRAIAAgCiANIAl0IAt2QQJ0aiIGLwEAOwAAIAUgCSAGLQACajYCQCAAIAYtAANqIQAMAQsLA0AgACAMS0UEQCAAIAogDSAJdCALdkECdGoiBi8BADsAACAAIAYtAANqIQAgCSAGLQACaiEJDAELCwJAIAAgA08NACAAIAogDSAJdCALdiIAQQJ0aiIDLQAAOgAAIAMtAANBAUYEQCAJIAMtAAJqIQkMAQsgCUEfSw0AQSAgCSAKIABBAnRqLQACaiIAIABBIE8bIQkLIAJBA2shDANAIAVBKGoQD0UgByAMSXEEQCAHIAogBSgCKCIGIAUoAiwiAHQgC3ZBAnRqIg0vAQA7AAAgByANLQADaiIDIAogBiAAIA0tAAJqIgB0IAt2QQJ0aiIGLwEAOwAAIAUgACAGLQACajYCLCADIAYtAANqIQcMAQUgAkECayEGA0AgBUEoahAPIQMgBSgCKCEMIAUoAiwhACAGIAdJIANyRQRAIAcgCiAMIAB0IAt2QQJ0aiIDLwEAOwAAIAUgACADLQACajYCLCAHIAMtAANqIQcMAQsLA0AgBiAHSUUEQCAHIAogDCAAdCALdkECdGoiAy8BADsAACAHIAMtAANqIQcgACADLQACaiEADAELCwJAIAIgB00NACAHIAogDCAAdCALdiICQQJ0aiIDLQAAOgAAIAMtAANBAUYEQCAAIAMtAAJqIQAMAQsgAEEfSw0AQSAgACAKIAJBAnRqLQACaiIAIABBIE8bIQALIBlBA2shDANAIAVBFGoQD0UgCCAMSXEEQCAIIAogBSgCFCIGIAUoAhgiAnQgC3ZBAnRqIg0vAQA7AAAgCCANLQADaiIDIAogBiACIA0tAAJqIgJ0IAt2QQJ0aiIGLwEAOwAAIAUgAiAGLQACajYCGCADIAYtAANqIQgMAQUgGUECayEDA0AgBUEUahAPIQIgBSgCFCEGIAUoAhghByADIAhJIAJyRQRAIAggCiAGIAd0IAt2QQJ0aiICLwEAOwAAIAUgByACLQACajYCGCAIIAItAANqIQgMAQsLA0AgAyAISUUEQCAIIAogBiAHdCALdkECdGoiAi8BADsAACAIIAItAANqIQggByACLQACaiEHDAELCwJAIAggGU8NACAIIAogBiAHdCALdiICQQJ0aiIDLQAAOgAAIAMtAANBAUYEQCAHIAMtAAJqIQcMAQsgB0EfSw0AQSAgByAKIAJBAnRqLQACaiICIAJBIE8bIQcLA0AgBRAPRSAEICBJcQRAIAQgCiAFKAIAIgYgBSgCBCICdCALdkECdGoiDC8BADsAACAEIAwtAANqIgMgCiAGIAIgDC0AAmoiAnQgC3ZBAnRqIgQvAQA7AAAgBSACIAQtAAJqNgIEIAMgBC0AA2ohBAwBBSAfQQJrIQMDQCAFEA8hAiAFKAIAIQYgBSgCBCEIIAMgBEkgAnJFBEAgBCAKIAYgCHQgC3ZBAnRqIgIvAQA7AAAgBSAIIAItAAJqNgIEIAQgAi0AA2ohBAwBCwsDQCADIARJRQRAIAQgCiAGIAh0IAt2QQJ0aiICLwEAOwAAIAQgAi0AA2ohBCAIIAItAAJqIQgMAQsLAkAgBCAfTw0AIAQgCiAGIAh0IAt2IgJBAnRqIgMtAAA6AAAgAy0AA0EBRgRAIAggAy0AAmohCAwBCyAIQR9LDQBBICAIIAogAkECdGotAAJqIgIgAkEgTxshCAtBbEFsQWxBbEFsQWxBbEFsIAEgCEEgRxsgBSgCCCAFKAIMRxsgB0EgRxsgBSgCHCAFKAIgRxsgAEEgRxsgBSgCMCAFKAI0RxsgCUEgRxsgBSgCRCAFKAJIRxshCQwJCwALAAsACwALAAsACwALAAtBbCEJCyAFQdAAaiQAIAkL7BABHn8jAEHQAGsiBSQAQWwhCQJAIANBCkkNAAJAIAMgAi8ABCIGIAIvAAAiByACLwACIghqakEGaiIOSQ0AIAQvAQIhDyAFQTxqIAJBBmoiAiAHEA0iCUGIf0sNASAFQShqIAIgB2oiAiAIEA0iCUGIf0sNASAFQRRqIAIgCGoiAiAGEA0iCUGIf0sNASAFIAIgBmogAyAOaxANIglBiH9LDQEgBEEEaiEKIAAgAWoiHEEDayEdQQAgD2tBH3EhCyAFKAIIIREgBSgCHCESIAUoAjAhEyAFKAJEIRQgBSgCBCEJIAUoAhghBiAFKAIsIQcgBSgCQCEIIAUoAhAhHiAFKAIkIR8gBSgCOCEgIAUoAkwhISAFKAIAIRUgBSgCFCEWIAUoAighFyAFKAI8IRhBASENIAAgAUEDakECdiICaiIOIAJqIg8gAmoiGSEEIA8hAiAOIQMDQCANRSAEIB1PckUEQCAKIBggCHQgC3ZBAXRqIgwtAAEhDSAAIAwtAAA6AAAgCiAXIAd0IAt2QQF0aiIMLQABIRAgAyAMLQAAOgAAIAogFiAGdCALdkEBdGoiDC0AASEaIAIgDC0AADoAACAKIBUgCXQgC3ZBAXRqIgwtAAEhGyAEIAwtAAA6AAAgCiAYIAggDWoiCHQgC3ZBAXRqIgwtAAEhDSAAIAwtAAA6AAEgCiAXIAcgEGoiB3QgC3ZBAXRqIgwtAAEhECADIAwtAAA6AAEgCiAWIAYgGmoiDHQgC3ZBAXRqIgYtAAEhGiACIAYtAAA6AAEgCiAVIAkgG2oiG3QgC3ZBAXRqIgktAAEhIiAEIAktAAA6AAEgCCANaiEGQQMhCQJ/IBQgIUkEQEEDIQ0gBgwBCyAUIAZBA3ZrIhQoAAAhGEEAIQ0gBkEHcQshCCAHIBBqIQYgEyAgSQR/IAYFIBMgBkEDdmsiEygAACEXQQAhCSAGQQdxCyEHIAwgGmohDCAJIA1yIRBBAyENAn8gEiAfSQRAIAwhBkEDDAELIAxBB3EhBiASIAxBA3ZrIhIoAAAhFkEACyAbICJqIQwgEHIhECARIB5JBH8gDAUgESAMQQN2ayIRKAAAIRVBACENIAxBB3ELIQkgBEECaiEEIAJBAmohAiADQQJqIQMgAEECaiEAIA0gEHJFIQ0MAQsLIAUgBzYCLCAFIAg2AkAgBSAGNgIYIAUgCTYCBCAFIBQ2AkQgBSATNgIwIAUgEjYCHCAFIBE2AgggBSAYNgI8IAUgFzYCKCAFIBY2AhQgBSAVNgIAIAAgDksgAyAPS3INAEFsIQkgAiAZSw0BIA5BA2shCQNAIAVBPGoQDyAAIAlPckUEQCAKIAUoAjwiBiAFKAJAIgd0IAt2QQF0aiIILQABIQwgACAILQAAOgAAIAogBiAHIAxqIgZ0IAt2QQF0aiIHLQAAIQggBSAGIActAAFqNgJAIAAgCDoAASAAQQJqIQAMAQsLA0AgBUE8ahAPIQcgBSgCPCEGIAUoAkAhCSAAIA5PIAdyRQRAIAogBiAJdCALdkEBdGoiBi0AACEHIAUgCSAGLQABajYCQCAAIAc6AAAgAEEBaiEADAELCwNAIAAgDk9FBEAgCiAGIAl0IAt2QQF0aiIHLQABIAAgBy0AADoAACAAQQFqIQAgCWohCQwBCwsgD0EDayEAA0AgBUEoahAPIAAgA01yRQRAIAogBSgCKCIGIAUoAiwiB3QgC3ZBAXRqIggtAAEhDiADIAgtAAA6AAAgCiAGIAcgDmoiBnQgC3ZBAXRqIgctAAAhCCAFIAYgBy0AAWo2AiwgAyAIOgABIANBAmohAwwBCwsDQCAFQShqEA8hByAFKAIoIQYgBSgCLCEAIAMgD08gB3JFBEAgCiAGIAB0IAt2QQF0aiIGLQAAIQcgBSAAIAYtAAFqNgIsIAMgBzoAACADQQFqIQMMAQsLA0AgAyAPT0UEQCAKIAYgAHQgC3ZBAXRqIgctAAEhCCADIActAAA6AAAgA0EBaiEDIAAgCGohAAwBCwsgGUEDayEDA0AgBUEUahAPIAIgA09yRQRAIAogBSgCFCIGIAUoAhgiB3QgC3ZBAXRqIggtAAEhDiACIAgtAAA6AAAgCiAGIAcgDmoiBnQgC3ZBAXRqIgctAAAhCCAFIAYgBy0AAWo2AhggAiAIOgABIAJBAmohAgwBCwsDQCAFQRRqEA8hByAFKAIUIQYgBSgCGCEDIAIgGU8gB3JFBEAgCiAGIAN0IAt2QQF0aiIGLQAAIQcgBSADIAYtAAFqNgIYIAIgBzoAACACQQFqIQIMAQsLA0AgAiAZT0UEQCAKIAYgA3QgC3ZBAXRqIgctAAEhCCACIActAAA6AAAgAkEBaiECIAMgCGohAwwBCwsDQCAFEA8gBCAdT3JFBEAgCiAFKAIAIgIgBSgCBCIGdCALdkEBdGoiBy0AASEIIAQgBy0AADoAACAKIAIgBiAIaiICdCALdkEBdGoiBi0AACEHIAUgAiAGLQABajYCBCAEIAc6AAEgBEECaiEEDAELCwNAIAUQDyEHIAUoAgAhBiAFKAIEIQIgBCAcTyAHckUEQCAKIAYgAnQgC3ZBAXRqIgYtAAAhByAFIAIgBi0AAWo2AgQgBCAHOgAAIARBAWohBAwBCwsDQCAEIBxPRQRAIAogBiACdCALdkEBdGoiBy0AASEIIAQgBy0AADoAACAEQQFqIQQgAiAIaiECDAELC0FsQWxBbEFsQWxBbEFsQWwgASACQSBHGyAFKAIIIAUoAgxHGyADQSBHGyAFKAIcIAUoAiBHGyAAQSBHGyAFKAIwIAUoAjRHGyAJQSBHGyAFKAJEIAUoAkhHGyEJDAELQWwhCQsgBUHQAGokACAJC1gBA38CQCAAKAKQ6wEiAUUNACABKAIAIAFBtNUBaigCACICIAFBuNUBaigCACIDEBMgAgRAIAMgASACEQIADAELIAEQBgsgAEEANgKg6wEgAEIANwOQ6wEL6QMCBH8CfiAAQQBBKBADIQQgAkEBQQUgAxsiAEkEQCAADwsgAUUEQEF/DwtBASEGAkACQCADQQFGDQAgAyEGIAEoAAAiBUGo6r5pRg0AQXYhAyAFQXBxQdDUtMIBRw0BQQghAyACQQhJDQEgATUABCEIIARBATYCFCAEIAg3AwBBAA8LIAEgAiAGEBoiAyACSw0AIAQgAzYCGEFyIQMgACABaiIFQQFrLQAAIgJBCHENACACQSBxIgZFBEBBcCEDIAUtAAAiBUGnAUsNASAFQQdxrUIBIAVBA3ZBCmqthiIIQgOIfiAIfCEJIABBAWohAAsgAkEGdiEFIAJBAnZBACEDAkACQAJAAkAgAkEDcUEBaw4DAAECAwsgACABai0AACEDIABBAWohAAwCCyAAIAFqLwAAIQMgAEECaiEADAELIAAgAWooAAAhAyAAQQRqIQALQQFxIQICfgJAAkACQAJAIAVBAWsOAwECAwALQn8gBkUNAxogACABajEAAAwDCyAAIAFqMwAAQoACfAwCCyAAIAFqNQAADAELIAAgAWopAAALIQggBCACNgIgIAQgAzYCHCAEIAg3AwBBACEDIARBADYCFCAEIAggCSAGGyIINwMIIARCgIAIIAggCEKAgAhaGz4CEAsgAwtfAQF/Qbh/IQMgAUEBQQUgAhsiAk8EfyAAIAJqQQFrLQAAIgBBA3FBAnRBoB5qKAIAIAJqIABBBHZBDHFBsB5qKAIAaiAAQSBxIgFFaiABQQV2IABBwABJcWoFQbh/CwsMACAAIAEgAkEAEBkLlwMCBX8CfiMAQUBqIgQkAAJAA0AgAUEFTwRAAkAgACgAAEFwcUHQ1LTCAUYEQEJ+IQcgAUEISQ0EIAAoAAQiAkF3Sw0EIAJBCGoiAyABSw0EIAJBgX9JDQEMBAsgBEEYaiAAIAEQGyECQn4gBCkDGEIAIAQoAixBAUcbIAIbIgdCfVYNAyAHIAh8IgggB1RCfiEHDQMCQAJAIAFBCEkNACAAKAAAQXBxQdDUtMIBRw0AIAAoAAQiAkF3Sw0FQbh/IAJBCGoiAiABIAJJGyEDDAELIARBGGogACABEBsiAkGIf0sEQCACIQMMAQtBuH8hAyACDQAgASAEKAIwIgJrIQUgACACaiEGA0AgBiAFIARBDGoQHSIDQYh/Sw0BIANBA2oiAiAFSwRAQbh/IQMMAgsgBSACayEFIAIgBmohBiAEKAIQRQ0ACyAEKAI4BH9BuH8hAyAFQQRJDQEgBkEEagUgBgsgAGshAwsgA0GIf0sNAwsgASADayEBIAAgA2ohAAwBCwtCfiAIIAEbIQcLIARBQGskACAHC2QBAX9BuH8hAwJAIAFBA0kNACAALQACIQEgAiAALwAAIgBBAXE2AgQgAiAAQQF2QQNxIgM2AgAgAiAAIAFBEHRyQQN2IgA2AggCQAJAIANBAWsOAwIBAAELQWwPCyAAIQMLIAMLRAECfyABIAIoAgQiAyABKAIEaiIENgIEIAAgA0ECdEGgHWooAgAgASgCAEEAIARrdnE2AgAgARAPGiAAIAJBCGo2AgQLzgEBBn9Bun8hCgJAIAIoAgQiCCACKAIAIglqIg0gASAAa0sNAEFsIQogCSAEIAMoAgAiC2tLDQAgACAJaiIEIAIoAggiDGshAiAAIAFBIGsiACALIAlBABAgIAMgCSALajYCAAJAAkAgBCAFayAMTwRAIAIhBQwBCyAMIAQgBmtLDQIgByAHIAIgBWsiAmoiASAIak8EQCAEIAEgCBAKGgwCCyACIAhqIQggBCABQQAgAmsQCiACayEECyAEIAAgBSAIQQEQIAsgDSEKCyAKC8cEAQJ/IAAgA2ohBgJAIANBB0wEQANAIAAgBk8NAiAAIAItAAA6AAAgAEEBaiEAIAJBAWohAgwACwALIARBAUYEQAJAIAAgAmsiBUEHTQRAIAAgAi0AADoAACAAIAItAAE6AAEgACACLQACOgACIAAgAi0AAzoAAyAAIAIgBUECdCIFQcAeaigCAGoiAigAADYABCACIAVB4B5qKAIAayECDAELIAAgAikAADcAAAsgAkEIaiECIABBCGohAAsgASAGTwRAIAAgA2ohASAEQQFHIAAgAmtBD0pyRQRAA0AgACACKQAANwAAIAJBCGohAiAAQQhqIgAgAUkNAAwDCwALIAAgAikAADcAACAAIAIpAAg3AAggA0ERSQ0BIABBEGohAANAIAAgAikAEDcAACAAIAIpABg3AAggACACKQAgNwAQIAAgAikAKDcAGCACQSBqIQIgAEEgaiIAIAFJDQALDAELAkAgACABSwRAIAAhAQwBCyABIABrIQUCQCAEQQFHIAAgAmtBD0pyRQRAIAIhAwNAIAAgAykAADcAACADQQhqIQMgAEEIaiIAIAFJDQALDAELIAAgAikAADcAACAAIAIpAAg3AAggBUERSA0AIABBEGohACACIQMDQCAAIAMpABA3AAAgACADKQAYNwAIIAAgAykAIDcAECAAIAMpACg3ABggA0EgaiEDIABBIGoiACABSQ0ACwsgAiAFaiECCwNAIAEgBk8NASABIAItAAA6AAAgAUEBaiEBIAJBAWohAgwACwALC64HAgV/AX4jAEGAAWsiESQAIBEgAzYCfEF/IQ8CQAJAAkACQAJAIAIOBAEAAwIECyAGRQRAQbh/IQ8MBAtBbCEPIAUtAAAiAiADSw0DIAggAkEC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IAggH2shBgNAAkAgBiAPTgRAQQAhAwNAIANBA0YNAiAFIANBAnQiAmpBrNABaiACIARqKAJkNgIAIANBAWohAwwACwALAkACQAJAIAQoAtwBIgMgBEHwAGogBkEHcUEMbGoiCCgCACIMaiIQIBdLDQAgByAIKAIEIgsgDGoiCmogIUsNACAKQSBqIBYgB2tNDQELIAQgCCgCCDYCKCAEIAgpAgA3AyAgByAWIARBIGogBEHcAWogFyASIBggGhAfIQoMAQsgByAMaiECIAgoAgghCCAHIAMpAAA3AAAgByADKQAINwAIAkAgDEERSQ0AIAcgAykAEDcAECAHIAMpABg3ABggDEEQa0ERSA0AIANBEGohAyAHQSBqIQwDQCAMIAMpABA3AAAgDCADKQAYNwAIIAwgAykAIDcAECAMIAMpACg3ABggA0EgaiEDIAxBIGoiDCACSQ0ACwsgAiAIayEDIAQgEDYC3AEgAiASayAISQRAIAggAiAYa0sNByAaIBogAyASayIDaiIMIAtqTwRAIAIgDCALEAoaDAILIAMgC2ohCyACIAxBACADaxAKIANrIQIgEiEDCyAIQRBPBEAgAiADKQAANwAAIAIgAykACDcACCALQRFIDQEgAiALaiEIIAJBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAIgAy0AADoAACACIAMtAAE6AAEgAiADLQACOgACIAIgAy0AAzoAAyACIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAIgAykAADcAAAsgC0EJSQ0AIAIgC2ohDCACQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggDEkNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggC0EZSA0AIAJBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAxJDQALCyAKQYh/SwRAIAohCQwGBSAGQQFqIQYgByAKaiEHDAILAAsLIAQoAtwBIQMLQbp/IQkgFyADayICIBYgB2tLDQIgBwR/IAcgAyACEAIgAmoFQQALIA5rIQkMAgsgBUEANgKc6wELIAQgBSgC8OoBIgM2AtwBIAkgDmohDCADIAUoAoDrAWohEAJAIA9FBEAgDiEGDAELIAUoArjpASENIAUoArTpASETIAUoArDpASESIAVBATYChOoBQQAhAwNAIANBA0cEQCAEIANBAnQiAmogAiAFakGs0AFqKAIANgKcASADQQFqIQMMAQsLQWwhCSAEQfAAaiICIAcgBhANQYh/Sw0BIDEgAiAFKAIAEB4gMCACIAUoAggQHiAvIAIgBSgCBBAeIAxBIGshGCAOIQYDQCAEKAKIASAEKAKEAUEDdGopAgAiQKciCkEQdiIZQf8BcSELIAQoApgBIAQoApQBQQN0aikCACJBpyIWQRB2Ih9B/wFxIRogBCgCkAEgBCgCjAFBA3RqKQIAIkJCIIinIQcgQUIgiCBAQiCIpyEDAkAgQkIQiKciCEH/AXEiAkECTwRAAkAgAkEZSSA/QoGAgBBUckUEQCAEQSAgBCgCdCIIayIRIAIgAiARSxsiFyAIajYCdCAHIAQoAnAgCHRBACAXa3YgAiAXayIXdGohCCAEQfAAahAPGiACIBFNDQEgBCAEKAJ0IgIgF2o2AnQgBCgCcCACdEEAIBdrdiAIaiEIDAELIAQgAiAEKAJ0IhFqNgJ0IAQoAnAgEXRBACAIa3YgB2ohCCAEQfAAahAPGgsgBCkCnAEhRCAEIAg2ApwBIAQgRDcCoAEMAQsCQCACRQRAIAMEQCAEKAKcASEIDAMLIAQoAqABIQgMAQsgBCAEKAJ0IgJBAWo2AnQCfyAHIANFaiAEKAJwIAJ0QR92aiICQQNGBEAgBCgCnAFBAWsMAQsgAkECdCAEaigCnAELIgdFIAdqIQggAkEBRwRAIAQgBCgCoAE2AqQBCwsgBCAEKAKcATYCoAEgBCAINgKcAQunIQIgQUKAgPwHg1BFBEAgBCAEKAJ0IgcgGmo2AnQgBCgCcCAHdEEAIB9rdiACaiECCyALIBpqQRRPBEAgBEHwAGoQDxoLIEBCgID8B4NQRQRAIAQgBCgCdCIHIAtqNgJ0IAQoAnAgB3RBACAZa3YgA2ohAwsgBEHwAGoQDxogBCAEKAJwIgdBACAKQRh2IgsgBCgCdGoiGmt2IAtBAnRBoB1qKAIAcSAKQf//A3FqNgKEASAEIBogFkEYdiIKaiILNgJ0IAQgCkECdEGgHWooAgAgB0EAIAtrdnEgFkH//wNxajYClAEgBEHwAGoQDxogBCBCpyIHQRh2IgogBCgCdGoiCzYCdCAEIApBAnRBoB1qKAIAIAQoAnBBACALa3ZxIAdB//8DcWo2AowBIAQgAzYCOCAEIAI2AjwgBCAINgJAAkACQAJAIAQoAtwBIgsgA2oiFiAQSw0AIAYgAiADaiIKaiAYSw0AIApBIGogDCAGa00NAQsgBCAEQUBrKAIANgIIIAQgBCkDODcDACAGIAwgBCAEQdwBaiAQIBIgEyANEB8hCgwBCyADIAZqIQcgBiALKQAANwAAIAYgCykACDcACAJAIANBEUkNACAGIAspABA3ABAgBiALKQAYNwAYIANBEGtBEUgNACALQRBqIQMgBkEgaiELA0AgCyADKQAQNwAAIAsgAykAGDcACCALIAMpACA3ABAgCyADKQAoNwAYIANBIGohAyALQSBqIgsgB0kNAAsLIAcgCGshAyAEIBY2AtwBIAcgEmsgCEkEQCAIIAcgE2tLDQQgDSANIAMgEmsiA2oiCyACak8EQCAHIAsgAhAKGgwCCyAHIAtBACADaxAKIAQgAiADaiICNgI8IANrIQcgEiEDCyAIQRBPBEAgByADKQAANwAAIAcgAykACDcACCACQRFIDQEgAiAHaiEIIAdBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAcgAy0AADoAACAHIAMtAAE6AAEgByADLQACOgACIAcgAy0AAzoAAyAHIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAcgAykAADcAAAsgAkEJSQ0AIAIgB2ohCyAHQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggC0kNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggAkEZSA0AIAdBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAtJDQALCyAKQYh/SwRAIAohCQwDCyAGIApqIQYgBEHwAGoQDyEDIA9B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";var OI=new yA,TI=!1;async function ce(A,I,t){let e=null;typeof A!="string"?e=A.href:A.startsWith("http")?e=A:e=`${I}/${A}`,e.endsWith(".js")&&(e=e.substring(0,e.length-3)),e.endsWith(".wasm")&&(e=e.substring(0,e.length-5));let g=`${e}.wasm`,r=await dA.get(`${g}.zst`,{responseType:"arraybuffer",params:t});TI||(await OI.init(),TI=!0);let s=OI.decode(new Uint8Array(r.data)).buffer;return(await import(`${e}.js`)).default({wasmBinary:s})}var xI=ce;var wA=new Map;async function fe(A,I,t){let e=A,g=A,r=null;return typeof A!="string"&&(e=new URL(A.href),g=e.href),wA.has(g)?r=await wA.get(g):(wA.set(g,xI(e,I,t)),r=await wA.get(g)),r}var PI=fe;var le={TextFile:"TextFile",BinaryFile:"BinaryFile",TextStream:"TextStream",BinaryStream:"BinaryStream",Image:"Image",Mesh:"Mesh",PolyData:"PolyData",JsonCompatible:"JsonCompatible"},D=le;var De={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},p=De;var ue={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},P=ue;function he(A,I){let t=null;switch(A){case p.UInt8:{t=new Uint8Array(I);break}case p.Int8:{t=new Int8Array(I);break}case p.UInt16:{t=new Uint16Array(I);break}case p.Int16:{t=new Int16Array(I);break}case p.UInt32:{t=new Uint32Array(I);break}case p.Int32:{t=new Int32Array(I);break}case p.UInt64:{typeof globalThis.BigUint64Array=="function"?t=new BigUint64Array(I):t=new Uint8Array(I);break}case p.Int64:{typeof globalThis.BigInt64Array=="function"?t=new BigInt64Array(I):t=new Uint8Array(I);break}case P.Float32:{t=new Float32Array(I);break}case P.Float64:{t=new Float64Array(I);break}case"null":{t=null;break}case null:{t=null;break}default:throw new Error("Type is not supported as a TypedArray")}return t}var Y=he;var ZI=typeof globalThis.SharedArrayBuffer=="function",jI=new TextEncoder,WI=new TextDecoder("utf-8");function de(A,I){let t={flags:"r",encoding:"binary"},e=A.fs_open(I,t.flags),r=A.fs_stat(I).size,i=null;ZI?i=new SharedArrayBuffer(r):i=new ArrayBuffer(r);let s=new Uint8Array(i);return A.fs_read(e,s,0,r,0),A.fs_close(e),s}function VI(A,I,t){let e=null;ZI?e=new SharedArrayBuffer(t):e=new ArrayBuffer(t);let g=new Uint8Array(e),r=new Uint8Array(A.HEAPU8.buffer,I,t);return g.set(r),g}function y(A,I,t,e){let g=0;return I!==null&&(g=A.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,t,e,I.buffer.byteLength]),A.HEAPU8.set(new Uint8Array(I.buffer),g)),g}function j(A,I,t){let e=JSON.stringify(I),g=A.lengthBytesUTF8(e)+1,r=A.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,t,g]);A.stringToUTF8(e,r,g)}function S(A,I,t,e){let g=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,I,t]),r=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,I,t]),i=VI(A,g,r);return Y(e,i.buffer)}function zA(A,I){let t=A.ccall("itk_wasm_output_json_address","number",["number","number"],[0,I]),e=A.UTF8ToString(t);return JSON.parse(e)}function ye(A,I,t,e){e!=null&&e.length>0&&e.forEach(function(Q,C){switch(Q.type){case D.TextStream:{let o=jI.encode(Q.data.data),f=y(A,o,C,0),n={size:o.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};j(A,n,C);break}case D.JsonCompatible:{let o=jI.encode(JSON.stringify(Q.data)),f=y(A,o,C,0),n={size:o.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};j(A,n,C);break}case D.BinaryStream:{let o=Q.data.data,f=y(A,o,C,0),n={size:o.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};j(A,n,C);break}case D.TextFile:{A.fs_writeFile(Q.data.path,Q.data.data);break}case D.BinaryFile:{A.fs_writeFile(Q.data.path,Q.data.data);break}case D.Image:{let o=Q.data,f=y(A,o.data,C,0),n=y(A,o.direction,C,1),E=typeof o.metadata?.entries<"u"?JSON.stringify(Array.from(o.metadata.entries())):"[]",c={imageType:o.imageType,name:o.name,origin:o.origin,spacing:o.spacing,direction:`data:application/vnd.itk.address,0:${n}`,size:o.size,data:`data:application/vnd.itk.address,0:${f}`,metadata:E};j(A,c,C);break}case D.Mesh:{let o=Q.data,f=y(A,o.points,C,0),n=y(A,o.cells,C,1),E=y(A,o.pointData,C,2),c=y(A,o.cellData,C,3),u={meshType:o.meshType,name:o.name,numberOfPoints:o.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,numberOfCells:o.numberOfCells,cells:`data:application/vnd.itk.address,0:${n}`,cellBufferSize:o.cellBufferSize,numberOfPointPixels:o.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${E}`,numberOfCellPixels:o.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${c}`};j(A,u,C);break}case D.PolyData:{let o=Q.data,f=y(A,o.points,C,0),n=y(A,o.vertices,C,1),E=y(A,o.lines,C,2),c=y(A,o.polygons,C,3),u=y(A,o.triangleStrips,C,4),d=y(A,o.pointData,C,5),R=y(A,o.pointData,C,6),N={polyDataType:o.polyDataType,name:o.name,numberOfPoints:o.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,verticesBufferSize:o.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${n}`,linesBufferSize:o.linesBufferSize,lines:`data:application/vnd.itk.address,0:${E}`,polygonsBufferSize:o.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${c}`,triangleStripsBufferSize:o.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${u}`,numberOfPointPixels:o.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${d}`,numberOfCellPixels:o.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${R}`};j(A,N,C);break}default:throw Error("Unsupported input InterfaceType")}}),A.resetModuleStdout(),A.resetModuleStderr();let g=A.stackSave(),r=0;try{r=A.callMain(I.slice())}catch(Q){throw typeof Q=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",A.getModuleStdout()),console.error("stderr:",A.getModuleStderr()),typeof A.getExceptionMessage<"u"?console.error("exception:",A.getExceptionMessage(Q)):console.error("Build module in Debug mode for exception message information.")),Q}finally{A.stackRestore(g)}let i=A.getModuleStdout(),s=A.getModuleStderr(),a=[];return t!=null&&t.length>0&&r===0&&t.forEach(function(Q,C){let o=null;switch(Q.type){case D.TextStream:{let n=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,C,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,C,0]),c=new Uint8Array(A.HEAPU8.buffer,n,E);o={data:WI.decode(c)};break}case D.JsonCompatible:{let n=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,C,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,C,0]),c=new Uint8Array(A.HEAPU8.buffer,n,E);o=JSON.parse(WI.decode(c));break}case D.BinaryStream:{let n=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,C,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,C,0]);o={data:VI(A,n,E)};break}case D.TextFile:{o={path:Q.data.path,data:A.fs_readFile(Q.data.path,{encoding:"utf8"})};break}case D.BinaryFile:{o={path:Q.data.path,data:de(A,Q.data.path)};break}case D.Image:{let n=zA(A,C);n.data=S(A,C,0,n.imageType.componentType),n.direction=S(A,C,1,P.Float64),n.metadata=new Map(n.metadata),o=n;break}case D.Mesh:{let n=zA(A,C);n.numberOfPoints>0?n.points=S(A,C,0,n.meshType.pointComponentType):n.points=Y(n.meshType.pointComponentType,new ArrayBuffer(0)),n.numberOfCells>0?n.cells=S(A,C,1,n.meshType.cellComponentType):n.cells=Y(n.meshType.cellComponentType,new ArrayBuffer(0)),n.numberOfPointPixels>0?n.pointData=S(A,C,2,n.meshType.pointPixelComponentType):n.pointData=Y(n.meshType.pointPixelComponentType,new ArrayBuffer(0)),n.numberOfCellPixels>0?n.cellData=S(A,C,3,n.meshType.cellPixelComponentType):n.cellData=Y(n.meshType.cellPixelComponentType,new ArrayBuffer(0)),o=n;break}case D.PolyData:{let n=zA(A,C);n.numberOfPoints>0?n.points=S(A,C,0,P.Float32):n.points=new Float32Array,n.verticesBufferSize>0?n.vertices=S(A,C,1,p.UInt32):n.vertices=new Uint32Array,n.linesBufferSize>0?n.lines=S(A,C,2,p.UInt32):n.lines=new Uint32Array,n.polygonsBufferSize>0?n.polygons=S(A,C,3,p.UInt32):n.polygons=new Uint32Array,n.triangleStripsBufferSize>0?n.triangleStrips=S(A,C,4,p.UInt32):n.triangleStrips=new Uint32Array,n.numberOfPointPixels>0?n.pointData=S(A,C,5,n.polyDataType.pointPixelComponentType):n.pointData=Y(n.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),n.numberOfCellPixels>0?n.cellData=S(A,C,6,n.polyDataType.cellPixelComponentType):n.cellData=Y(n.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),o=n;break}default:throw Error("Unsupported output InterfaceType")}let f={type:Q.type,data:o};a.push(f)}),{returnValue:r,stdout:i,stderr:s,outputs:a}}var XI=ye;var we=typeof globalThis.SharedArrayBuffer<"u";function me(A,I){if(A==null)return[];let t=[];for(let e=0;e<A.length;e++){let g=pe(A[e],I);g!==null&&t.push(g)}return t}function pe(A,I){if(A==null)return null;let t=null;return A.buffer!==void 0?t=A.buffer:A.byteLength!==void 0&&(t=A),we&&t instanceof SharedArrayBuffer?null:I?t:t.slice(0)}var zI=me;function Se(A){return[A.data,A.direction]}var _I=Se;function Fe(A){return[A.points,A.pointData,A.cells,A.cellData]}var vI=Fe;function Re(A){return[A.points,A.vertices,A.lines,A.polygons,A.triangleStrips,A.pointData,A.cellData]}var $I=Re;async function Ne(A,I,t,e){let g=XI(A,I,t,e),r=[];return g.outputs.forEach(function(i){if(i.type===D.BinaryStream||i.type===D.BinaryFile){let s=i.data;r.push(s)}else if(i.type===D.Image){let s=i.data;r.push(..._I(s))}else if(i.type===D.Mesh){let s=i.data;r.push(...vI(s))}else if(i.type===D.PolyData){let s=i.data;r.push(...$I(s))}}),SA(g,zI(r,!0))}var At=Ne;var Ue={runPipeline:async function(A,I,t,e,g,r){let i=await PI(A,I,r);return await At(i,t,e,g)}};oA(Ue);%0A/*! Bundled license information:%0A%0Acomlink/dist/esm/comlink.mjs:%0A  (**%0A   * @license%0A   * Copyright 2019 Google LLC%0A   * SPDX-License-Identifier: Apache-2.0%0A   *)%0A*/%0A';dr(yr);export{YA as bioRadReadImage,qA as bioRadWriteImage,UA as bmpReadImage,NA as bmpWriteImage,Y as extensionToImageIo,rt as fdfReadImage,fa as fdfWriteImage,$A as gdcmReadImage,et as gdcmWriteImage,_A as ge4ReadImage,VA as ge4WriteImage,ZA as ge5ReadImage,XA as ge5WriteImage,vA as geAdwReadImage,zA as geAdwWriteImage,y as getDefaultWebWorker,d as getPipelineWorkerUrl,E as getPipelinesBaseUrl,KA as giplReadImage,jA as giplWriteImage,SA as hdf5ReadImage,OA as hdf5WriteImage,RA as jpegReadImage,kA as jpegWriteImage,JA as lsmReadImage,LA as lsmWriteImage,CA as metaReadImage,EA as metaWriteImage,MA as mghReadImage,HA as mghWriteImage,PA as mincReadImage,xA as mincWriteImage,GA as mrcReadImage,TA as mrcWriteImage,hA as niftiReadImage,wA as niftiWriteImage,bA as nrrdReadImage,DA as nrrdWriteImage,BA as pngReadImage,dA as pngWriteImage,st as readImage,la as readImageFileSeries,mo as readImageHttp,At as scancoReadImage,tt as scancoWriteImage,_g as setDefaultWebWorker,dr as setPipelineWorkerUrl,Hg as setPipelinesBaseUrl,yA as tiffReadImage,QA as tiffWriteImage,WA as vtkReadImage,FA as vtkWriteImage,it as wasmReadImage,ot as wasmWriteImage,at as wasmZstdReadImage,nt as wasmZstdWriteImage,ma as writeImage};
/*! Bundled license information:

comlink/dist/esm/comlink.mjs:
  (**
   * @license
   * Copyright 2019 Google LLC
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
"""
default_config = JsPackageConfig(default_js_module)
js_package = JsPackage(default_config)
