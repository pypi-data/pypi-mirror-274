[tool.poetry]
name = "quart-schema"
version = "0.20.0"
description = "A Quart extension to provide schema validation"
authors = ["pgjones <philip.graham.jones@googlemail.com>"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
include = ["src/quart_schema/py.typed"]
license = "MIT"
readme = "README.rst"
repository = "https://gitlab.com/pgjones/quart-schema/"

[tool.black]
line-length = 100
target-version = ["py38"]

[tool.isort]
combine_as_imports = true
force_grid_wrap = 0
include_trailing_comma = true
known_first_party = "quart_schema, tests"
line_length = 100
multi_line_output = 3
no_lines_before = "LOCALFOLDER"
order_by_type = false
reverse_relative = true

[tool.mypy]
allow_redefinition = true
disallow_any_generics = false
disallow_subclassing_any = true
disallow_untyped_calls = false
disallow_untyped_defs = true
implicit_reexport = true
no_implicit_optional = true
plugins = "pydantic.mypy"
show_error_codes = true
strict = true
strict_equality = true
strict_optional = false
warn_redundant_casts = true
warn_return_any = false
warn_unused_configs = true
warn_unused_ignores = true

[tool.poetry.dependencies]
msgspec = { version = ">=0.18", optional = true }
pydata_sphinx_theme = { version = "*", optional = true }
pyhumps = ">=1.6.1"
python = ">=3.8"
pydantic = { version = ">=2", optional = true }
quart = ">=0.19.0"
sphinx-tabs = { version = ">=3.4.4", optional = true }
typing_extensions = { version = "*", python = "<3.9" }

[tool.poetry.dev-dependencies]
tox = "*"

[tool.poetry.extras]
docs = ["pydata_sphinx_theme", "sphinx-tabs"]
msgspec = ["msgspec"]
pydantic = ["pydantic"]

[tool.pytest.ini_options]
addopts = "--no-cov-on-fail --showlocals --strict-markers"
asyncio_mode = "auto"
testpaths = ["tests"]

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
