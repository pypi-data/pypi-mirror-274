name: CI

on:
  pull_request:
    branches: ['main']
  push:
    branches: ['main']
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Upgrade pip and install build tools
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel build
      - name: Build the package
        run: |
          python -m build
      - name: Upload built package
        uses: actions/upload-artifact@v3
        with:
          name: built-package
          path: dist/*.whl

  test:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Download built package
        uses: actions/download-artifact@v3
        with:
          name: built-package
          path: dist
      - name: Install package
        run: |
          if ($env:RUNNER_OS -eq "Windows") {
            Get-ChildItem dist/*.whl | ForEach-Object { pip install $_.FullName }
          } else {
            pip install dist/*.whl
          }
        shell: pwsh
      - name: Install testing dependencies
        run: |
          pip install pytest
      - name: Run tests with pytest
        run: |
          pytest
        env:
          JUPYTERHUB_USER: ${{ secrets.JUPYTERHUB_USER }}
          QBRAID_API_KEY: ${{ secrets.QBRAID_API_KEY }}
          REFRESH: ${{ secrets.REFRESH }}
          QBRAID_RUN_REMOTE_TESTS: True