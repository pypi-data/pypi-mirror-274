"use strict";
(self["webpackChunkpersist_ext"] = self["webpackChunkpersist_ext"] || []).push([["node_modules_hookstate_subscribable_dist_index_es_js"],{

/***/ "./node_modules/@hookstate/subscribable/dist/index.es.js":
/*!***************************************************************!*\
  !*** ./node_modules/@hookstate/subscribable/dist/index.es.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   subscribable: () => (/* binding */ subscribable)
/* harmony export */ });
/* harmony import */ var _hookstate_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hookstate/core */ "webpack/sharing/consume/default/@hookstate/core/@hookstate/core?16ab");
/* harmony import */ var _hookstate_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_hookstate_core__WEBPACK_IMPORTED_MODULE_0__);


function subscribable() {
    var subscribers = [];
    var stateAtRoot;
    return function () { return ({
        onCreate: function (s) {
            stateAtRoot = s;
            function pathsEqual(p1, p2) {
                if (p1.length !== p2.length) {
                    return false;
                }
                for (var i = 0; i < p1.length; i += 1) {
                    if (p1[i] !== p2[i]) {
                        return false;
                    }
                }
                return true;
            }
            return {
                subscribe: function (state) { return function (cb) {
                    if (!subscribers.find(function (i) { return pathsEqual(i[0], state.path) && i[1] === cb; })) {
                        subscribers.push([state.path, cb]);
                    }
                    return function () {
                        var found = subscribers.findIndex(function (i) { return pathsEqual(i[0], state.path) && i[1] === cb; });
                        if (found !== -1) {
                            subscribers.splice(found, 1);
                        }
                    };
                }; },
            };
        },
        onSet: function (s, d) {
            function pathStartsWith(p1, p2) {
                if (p1.length < p2.length) {
                    return false;
                }
                for (var i = 0; i < p2.length; i += 1) {
                    if (p1[i] !== p2[i]) {
                        return false;
                    }
                }
                return true;
            }
            function getValueAtPath(path) {
                var result = stateAtRoot.value;
                for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {
                    var p = path_1[_i];
                    if (result === undefined || result == null) {
                        return _hookstate_core__WEBPACK_IMPORTED_MODULE_0__.none;
                    }
                    result = result[p];
                }
                return result;
            }
            if (s.promise || s.error) {
                return;
            }
            for (var _i = 0, subscribers_1 = subscribers; _i < subscribers_1.length; _i++) {
                var subscriber = subscribers_1[_i];
                // Here is the path match logic
                // If a state is updated at /a/b, then the following subscribers should be invoked
                // - /
                // - /a
                // - /a/b (<-- this one is updated)
                // - /a/b/c
                // and the following should not be invoked
                // - /a/d
                // - /g
                // - /g/f
                if (pathStartsWith(s.path, subscriber[0]) || pathStartsWith(subscriber[0], s.path)) {
                    var v = getValueAtPath(subscriber[0]);
                    if (v !== _hookstate_core__WEBPACK_IMPORTED_MODULE_0__.none) {
                        subscriber[1](v);
                    }
                }
            }
        }
    }); };
}




/***/ })

}]);
//# sourceMappingURL=node_modules_hookstate_subscribable_dist_index_es_js.215a179d02b5960bcd53.js.map