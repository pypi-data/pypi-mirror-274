import{_ as s,c as i,o as a,a2 as e}from"./chunks/framework.CZXUNLJW.js";const F=JSON.parse('{"title":"Getting Started","description":"","frontmatter":{},"headers":[],"relativePath":"deployment/gettingStarted.md","filePath":"deployment/gettingStarted.md","lastUpdated":1715698384000}'),t={name:"deployment/gettingStarted.md"},n=e(`<h1 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h1><p><strong>Table of Contents</strong></p><ul><li><a href="#getting-started">Getting Started</a><ul><li><a href="#installation">Installation</a><ul><li><a href="#from-pypi">From PyPI</a></li><li><a href="#from-source">From source</a></li></ul></li><li><a href="#server-startup">Server startup</a><ul><li><a href="#basic-entries">Basic entries</a></li><li><a href="#more-on-starting-the-servers">More on starting the servers</a></li><li><a href="#cluster-startup">Cluster startup</a></li><li><a href="#run-with-docker">Run with Docker</a></li><li><a href="#on-the-first-run">On the first run</a></li></ul></li><li><a href="#management">Management</a><ul><li><a href="#user-management">User management</a></li><li><a href="#log-management">Log management</a></li></ul></li></ul></li></ul><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><h3 id="from-pypi" tabindex="-1">From PyPI <a class="header-anchor" href="#from-pypi" aria-label="Permalink to &quot;From PyPI&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Lires[all]&#39;</span></span></code></pre></div><h3 id="from-source" tabindex="-1">From source <a class="header-anchor" href="#from-source" aria-label="Permalink to &quot;From source&quot;">​</a></h3><p>Compile frontend files</p><blockquote><p><strong>Prerequisites:</strong> Node.js, Make</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div><p>Install the servers</p><blockquote><p><strong>Prerequisites:</strong> Python 3.8+, GCC</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;.[all]&quot;</span></span></code></pre></div><h2 id="server-startup" tabindex="-1">Server startup <a class="header-anchor" href="#server-startup" aria-label="Permalink to &quot;Server startup&quot;">​</a></h2><h4 id="basic-entries" tabindex="-1">Basic entries <a class="header-anchor" href="#basic-entries" aria-label="Permalink to &quot;Basic entries&quot;">​</a></h4><p>Start the microservices with the following commands:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lires</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> registry</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # the global resource module, for service discovery</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lires</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> log</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # the log service</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lires</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ai</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # the AI service</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lires</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feed</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # the feed service</span></span></code></pre></div><p>Lires services are designed to be scalable, and can be started with multiple instances (except for the registry service).</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The <code>registry</code> service is for service discovery, and should be started before other services.</p></div><p>Then, start the gateway server:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lires</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # the gateway server</span></span></code></pre></div><p>Lires server is a tornado server that provides API for the client (WebUI &amp; CLI) to communicate with, and should be exposed to the internet.</p><details class="details custom-block"><summary>Details</summary><h4 id="more-on-starting-the-servers" tabindex="-1">More on starting the servers <a class="header-anchor" href="#more-on-starting-the-servers" aria-label="Permalink to &quot;More on starting the servers&quot;">​</a></h4><p><code>$LRS_HOME</code> directory is used for application data storage, by default it is set to <code>~/.Lires</code>.<br> The data directory contains the configuration file, log files, database, cache files...</p><p>To start the application with arbitrary data directory, you can run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LRS_HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;your/path/here&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lires</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ...</span></span></code></pre></div><p>Additionally, various environment variables can be set to customize the behavior of the application. A detailed list of environment variables can be found at <strong><a href="./enviromentVariables.html">here</a></strong>.</p></details><hr><h3 id="cluster-startup" tabindex="-1">Cluster startup <a class="header-anchor" href="#cluster-startup" aria-label="Permalink to &quot;Cluster startup&quot;">​</a></h3><p>It will be laborious and error-prone to start multiple servers manually.<br> Especially when we want to start multiple servers with different configurations.</p><p>Instead, we provide a simple script to enable server clustering for easy deployment.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Generate a template configuration file</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lrs-cluster</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">your/configuration.yam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --generate</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Edit the configuration file</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start the cluster</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lrs-cluster</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">your/configuration.yam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>The configuration file designates the environment variables, as well as the command line arguments for each server.</p><h3 id="run-with-docker" tabindex="-1">Run with Docker <a class="header-anchor" href="#run-with-docker" aria-label="Permalink to &quot;Run with Docker&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># build the image</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker/Dockerfile</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lires:runtime</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># run the container</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 8080:8080</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/path/to/dat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:/root/.Lires</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lrs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lires:runtime</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># user management</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -it</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lrs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lrs-user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># check the logs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -it</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lrs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lrs-log</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># or check output by docker logs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> logs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lrs</span></span></code></pre></div><hr><h3 id="on-the-first-run" tabindex="-1">On the first run <a class="header-anchor" href="#on-the-first-run" aria-label="Permalink to &quot;On the first run&quot;">​</a></h3><p><strong>On the first run</strong> you need to create a user account, which can be done by running the <code>lrs-user</code> command in the container.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># export LRS_HOME=&quot;...&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lrs-user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">usernam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">passwor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --admin</span></span></code></pre></div><p>After the user is created, you can manage other users with this user via the web interface.</p><h2 id="management" tabindex="-1">Management <a class="header-anchor" href="#management" aria-label="Permalink to &quot;Management&quot;">​</a></h2><p>There are several management tools for the server, they are all accessible by <code>lrs-&lt;tool_name&gt;</code>.<br> A list of all the tools can be found in <a href="./manage.html">manage.md</a>.</p><p><strong>Following are some common management tasks.</strong></p><h3 id="user-management" tabindex="-1">User management <a class="header-anchor" href="#user-management" aria-label="Permalink to &quot;User management&quot;">​</a></h3><p>After installation, user should be registered with <code>lrs-user</code> command.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lrs-user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">usernam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">passwor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Or you want to change the password, admin status, or tag permisson of a user, run:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lrs-user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">usernam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">passwor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tag1&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tag2-&gt;subtag&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --admin</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span></code></pre></div><p>for more information, see <code>lrs-user -h</code>.</p><h3 id="log-management" tabindex="-1">Log management <a class="header-anchor" href="#log-management" aria-label="Permalink to &quot;Log management&quot;">​</a></h3><p>The log service is used to store the logs of the application, the log server can have multiple instances, each one will store the logs in a separate sqlite database.</p><p>The logs can be accessed by <code>lrs-log</code> command, the output is combined from the results of all log servers.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lrs-log</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> check</span></span></code></pre></div><p>This will check the overall logged information, specifically the table names and the number of logs in each table.</p><p>To view the log, run:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lrs-log</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> view</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">table_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> less</span></span></code></pre></div><p>Since every startup of the log server will create a new log file, it is recommended to periodically archive the logs.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lrs-log</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> merge</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --rm</span></span></code></pre></div><p>This will merge all the log files into a single file, and remove the original files.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Log archiving should be done when the log server is not running, otherwise, the log server will try to write to the removed files and cause errors.</p></div>`,56),l=[n];function h(r,p,k,o,d,g){return a(),i("div",null,l)}const u=s(t,[["render",h]]);export{F as __pageData,u as default};
