[project]
name = "ddeutil-model"
description = "Data Developer & Engineer Model Utility Objects"
readme = {file = "README.md", content-type = "text/markdown"}
license = {text = "MIT"}
authors = [{ name = "ddeutils", email = "korawich.anu@gmail.com" }]
keywords = ['data', 'model', 'utility', 'pipeline']
classifiers = [
    "Topic :: Utilities",
    "Natural Language :: English",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.9.13"
dependencies = [
    "ddeutil",
    "tzdata",
    "pydantic==2.7.1",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/ddeutils/ddeutil-model/"
"Source Code" = "https://github.com/ddeutils/ddeutil-model/"

[build-system]
requires = ["setuptools>=68.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.dynamic]
version = {attr = "ddeutil.model.__about__.__version__"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.shelf.version]
version = "./src/ddeutil/model/__about__.py"
changelog = "CHANGELOG.md"

[tool.coverage.run]
branch = true
source = ["ddeutil", "tests"]
relative_files = true

[tool.coverage.report]
exclude_lines = ["raise NotImplementedError"]

[tool.pytest.ini_options]
pythonpath = ["src"]
console_output_style = "count"
addopts = [
    "--strict-config",
    "--strict-markers",
]
filterwarnings = ["error"]

[tool.mypy]
python_version = "3.9"
files = ["ddeutil"]
show_error_codes = true
pretty = true
strict = true
local_partial_types = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "ddeutil.model"
warn_unused_ignores = false
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_missing_imports = true
check_untyped_defs = true

[tool.black]
line-length = 80
preview = true
target-version = ['py39']
exclude = """
/(
    \\.git
    | \\.__pycache__
    | \\.idea
    | \\.ruff_cache
    | \\.mypy_cache
    | \\.pytest_cache
    | \\.venv
    | _build
    | buck-out
    | build
    | dist
)/
"""

[tool.ruff]
line-length = 80
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "__pypackages__",
    "build",
    "dist",
    "venv",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
