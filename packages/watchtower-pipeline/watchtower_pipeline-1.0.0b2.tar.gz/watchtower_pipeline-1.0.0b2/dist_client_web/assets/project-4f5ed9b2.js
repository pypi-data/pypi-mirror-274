var m=Object.defineProperty;var g=(c,s,t)=>s in c?m(c,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):c[s]=t;var i=(c,s,t)=>(g(c,typeof s!="symbol"?s+"":s,t),t);import{f as y,I as d,H as h}from"./index-ffb61c14.js";const P=[[.8197601437568665,.7117544412612915,.5497459173202515,1],[.6462640762329102,.5692625641822815,.8191020488739014,1],[.5096713304519653,.7521656155586243,.5136501789093018,1],[.8272907137870789,.5883985161781311,.6541866064071655,1],[.5273313522338867,.659835934638977,.7609495520591736,1],[.7392144799232483,.7697654366493225,.5531221032142639,1],[.7357943654060364,.5509396195411682,.768614649772644,1],[.5617250204086304,.7625861167907715,.6736904978752136,1],[.8007439970970154,.638846218585968,.5802854895591736,1],[.6019799709320068,.6073563694953918,.807461678981781,1],[.5944148898124695,.7527848482131958,.520584225654602,1],[.8126696348190308,.5513396859169006,.7106873989105225,1],[.5918391346931458,.7710464000701904,.7906153798103333,1],[.7648254632949829,.7191355228424072,.5285170674324036,1],[.6757139563560486,.5736276507377625,.7719092965126038,1],[.5477100014686584,.784534752368927,.6005358695983887,1],[.750145435333252,.5404607057571411,.5548738241195679,1],[.5506091117858887,.6321061849594116,.7766551971435547,1],[.7142684459686279,.7983494400978088,.5565086007118225,1],[.6019799709320068,.5404607057571411,.768614649772644,1],[.5555555555555555,.5555555555555555,.5555555555555555,1]],f={paletteDefault:P,hexToRGB(c){const s=parseInt(c.slice(1,3),16)/255,t=parseInt(c.slice(3,5),16)/255,e=parseInt(c.slice(5,7),16)/255;return[s,t,e,1]},RGBtoHex(c,s,t){const e=r=>Math.round(r*255).toString(16).padStart(2,"0"),a=e(c),n=e(s),o=e(t);return`#${a}${n}${o}`},batchConvertColorHexToRGB(c){for(const s of c)s.color=this.hexToRGB(s.color)},batchAssignColor(c){let s=0;for(const t of c)t.color=this.paletteDefault[s],s+2<this.paletteDefault.length?s++:s=0}},u="/";class b{constructor(){i(this,"id","");i(this,"name","");i(this,"ratio",0);i(this,"resolution","");i(this,"assetTypes",[]);i(this,"taskTypes",[]);i(this,"taskStatuses",[]);i(this,"team",[]);i(this,"thumbnailUrl","");i(this,"sequences",[]);i(this,"shots",[]);i(this,"assets",[]);i(this,"totalFrames",1);i(this,"frameOffset",0);i(this,"fps",24);i(this,"videoPlayerSources",[]);i(this,"episodes",[])}}class _{constructor(){i(this,"data",y(new b))}getEpisodeSequences(s){const t=this.data.episodes.find(e=>e.id===s);return t?t.sequences:[]}async fetchProjectData(s){try{const t=await d.get(h.getUrl(h.urlType.Project,s));this.data.id=t.data.id,this.data.name=t.data.name,this.data.ratio=t.data.ratio,this.data.resolution=t.data.resolution,this.data.thumbnailUrl=t.data.thumbnailUrl,this.data.fps=t.data.fps,f.batchAssignColor(t.data.asset_types),this.data.assetTypes=t.data.asset_types,f.batchConvertColorHexToRGB(t.data.task_types),this.data.taskTypes=t.data.task_types,f.batchConvertColorHexToRGB(t.data.task_statuses),this.data.taskStatuses=t.data.task_statuses;const e=t.data.team;if(e.length>0){const a=[];for(const n of e){const o={name:n.full_name,id:n.id,profilePicture:`${u}static/img/placeholder-user.png`,color:void 0};n.has_avatar&&(o.profilePicture=`${u}${n.thumbnailUrl}`),a.push(o)}f.batchAssignColor(a),this.data.team=a}t.data.episodes.length>0&&(this.data.episodes=t.data.episodes)}catch(t){console.log(t)}}async fetchProjectSequences(s,t){try{const e=h.getUrl(h.urlType.Sequences,s),a=await d.get(e),n=a.data;let o=a.data;if(t){const r=this.getEpisodeSequences(t);o=n.filter(l=>r.some(p=>p.id===l.id))}o.forEach((r,l)=>{r.color=f.paletteDefault[l%f.paletteDefault.length]}),this.data.sequences=o}catch(e){console.log(e)}}async fetchProjectShots(s,t){try{const e=h.getUrl(h.urlType.Shots,s),a=await d.get(e),n=a.data;let o=a.data;if(t){const r=this.getEpisodeSequences(t);o=n.filter(l=>r.some(p=>p.id===l.sequence_id))}for(const r of o){if(!r.thumbnailUrl)r.thumbnailUrl=`${u}static/img/placeholder-asset.png`;else{const l="/";r.thumbnailUrl=`${l}${r.thumbnailUrl}`}r.asset_ids=[]}this.data.shots=o,this.data.shots.sort((r,l)=>r.startFrame>l.startFrame?1:-1)}catch(e){console.log(e)}}async fetchProjectCasting(s){try{const t=await d.get(h.getUrl(h.urlType.Casting,s));for(const e of this.data.shots){const a=t.data.find(n=>n.shot_id===e.id);a!==void 0&&(e.asset_ids=a.asset_ids)}for(const e of this.data.assets)e.shot_ids=t.data.filter(a=>{a.asset_ids&&a.asset_ids.includes(e.id)}).map(a=>a.shot_id)}catch(t){console.log(t)}}async fetchEditData(s,t){const e=`${u}data/projects/${s}/edits.json`,n=(await d.get(e)).data;let o={id:"",totalFrames:0,sourceName:"",sourceType:"video/mp4",episodeId:"",frameOffset:0};if(t){const r=n.find(l=>l.episodeId===t);r!=null&&(o=r)}else o=n[0];this.data.totalFrames=o.totalFrames,this.data.frameOffset=o.frameOffset,this.data.videoPlayerSources=[{src:`${u}${o.sourceName}`,type:o.sourceType}]}async fetchProjectAssets(s){try{const t=await d.get(h.getUrl(h.urlType.Assets,s));for(const e of t.data){if(e.thumbnailUrl===null)e.thumbnailUrl=`${u}static/img/placeholder-asset.png`;else{const a="/";e.thumbnailUrl=`${a}${e.thumbnailUrl}`}e.shot_ids=[]}this.data.assets=t.data}catch(t){console.log(t)}}async initWithProject(s){try{await this.fetchProjectData(s),await this.fetchProjectShots(s),await this.fetchProjectAssets(s),await this.fetchProjectSequences(s),await this.fetchProjectCasting(s),await this.fetchEditData(s)}catch(t){console.log(t)}}async initWithEpisode(s){this.data.id&&(await this.fetchProjectSequences(this.data.id,s),await this.fetchProjectShots(this.data.id,s),await this.fetchEditData(this.data.id,s))}}export{f as c,_ as u};
