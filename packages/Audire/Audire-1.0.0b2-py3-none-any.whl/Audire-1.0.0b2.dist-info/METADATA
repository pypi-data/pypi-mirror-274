Metadata-Version: 2.1
Name: Audire
Version: 1.0.0b2
Summary: A Package to search and get download links for songs from various platforms asynchronously.
Home-page: https://github.com/LinuxGuy312/Audire
Author: Eren
Author-email: linuxguy312@segfault.net
License: MIT
Keywords: songs,song,music,youtube,ytm,Audire,audire
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: MIT License
Requires-Python: ~=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: aiohttp
Requires-Dist: bs4

# Audire

A Package to search and get download links for songs from various platforms asynchronously.

[![Python](http://forthebadge.com/images/badges/made-with-python.svg)](https://python.org/)

---
> [!NOTE]
> "Audire" is a Latin verb meaning "to hear" or "to listen." It's the root of many English words related to sound and listening, like "audit" and "auditory."


## Installation

```sh
$ pip install audire
```

## Usage Examples

### Get Supported Platforms as List :
```py
from audire import Audire

print(Audire().platforms)
```

### Search on Youtube Music :

```py
import asyncio
from audire import Audire

async def main():
    audire = Audire()
    response = await audire.search("Pedro", platform="ytm")
    print(response)

asyncio.run(main())
```

### Getting Download Link from YouTube :
```py
import asyncio
from audire import Audire

async def main():
    audire = Audire()
    response = await audire.get_download('https://www.youtube.com/watch?v=RCqvSSfsP6w', 'yt')
    print(response)

asyncio.run(main())
```

## Documentation

There is no documentation as of now.
However, you can take help from the well written docstrings this way:

```py
from audire import Audire

print(help(Audire().search))
```
