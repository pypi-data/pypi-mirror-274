[build-system]
requires = ["hatchling", "hatch-vcs", "nipreps-versions"]
build-backend = "hatchling.build"

[project]
name = "fmriprep"
description = "A robust and easy-to-use pipeline for preprocessing of diverse fMRI data"
readme = "long_description.rst"
authors = [{name = "The NiPreps Developers", email = "nipreps@gmail.com"}]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
license = {file = "LICENSE"}
requires-python = ">=3.10"
dependencies = [
    "looseversion",
    "nibabel >= 4.0.1",
    "nipype >= 1.8.5",
    "nireports >= 23.2.0",
    "nitime",
    "nitransforms >= 21.0.0",
    "niworkflows >= 1.10.0",
    "numpy >= 1.22",
    "packaging",
    "pandas",
    "psutil >= 5.4",
    "pybids >= 0.15.2",
    "requests",
    "sdcflows >= 2.8.0",
    "smriprep >= 0.13.2",
    "tedana >= 23.0.2",
    "templateflow >= 23.0.0",
    "toml",
    "codecarbon",
    "APScheduler",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/nipreps/fmriprep"
Documentation = "https://fmriprep.org"
Paper = "https://doi.org/10.1038/s41592-018-0235-4"
"Docker Images" = "https://hub.docker.com/r/nipreps/fmriprep/tags/"
NiPreps = "https://www.nipreps.org/"

[project.optional-dependencies]
doc = [
    "pydot >= 1.2.3",
    "sphinx >= 5",
    "sphinx-argparse",
    "sphinx_rtd_theme>=0.5.2",
]
dev = [
    "black ~= 22.3.0",
    "pre-commit",
    "isort ~= 5.10.1",
    "flake8-pyproject",
]
duecredit = ["duecredit"]
resmon = []
container = [
    "fmriprep[telemetry]",
    # templateflow extras
    "datalad",
    "datalad-osf",
]
telemetry = [
    "migas >= 0.4.0",
    "sentry-sdk >= 1.3",
]
test = [
    "coverage",
    "pytest",
    "pytest-cov",
    "pytest-env",
]
maint = [
    "fuzzywuzzy",
    "python-Levenshtein",
]
# Aliases
docs = ["fmriprep[doc]"]
tests = ["fmriprep[test]"]
all = ["fmriprep[doc,maint,telemetry,test]"]

[project.scripts]
fmriprep = "fmriprep.cli.run:main"

#
# Hatch configurations
#

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.sdist]
exclude = [".git_archival.txt"]  # No longer needed in sdist

[tool.hatch.build.targets.wheel]
packages = ["fmriprep"]
exclude = [
    "fmriprep/data/tests/work",  # Large test data directory
]

##  The following two sections configure setuptools_scm in the hatch way

[tool.hatch.version]
source = "vcs"
raw-options = { version_scheme = "nipreps-calver" }

[tool.hatch.build.hooks.vcs]
version-file = "fmriprep/_version.py"

#
# Developer tool configurations
#

[tool.black]
line-length = 99
target-version = ['py39']
skip-string-normalization = true

[tool.isort]
profile = 'black'

[tool.flake8]
max-line-length = "99"
doctests = "False"
exclude = "*build/"
ignore = ["W503", "E203"]
per-file-ignores = [
    "**/__init__.py : F401",
    "docs/conf.py : E265",
]

[tool.pytest.ini_options]
norecursedirs = [".git"]
addopts = "-svx --doctest-modules"
doctest_optionflags = "ALLOW_UNICODE NORMALIZE_WHITESPACE ELLIPSIS"
env = "PYTHONHASHSEED=0"
filterwarnings = ["ignore::DeprecationWarning"]
junit_family = "xunit2"
