[metadata]
name = neuro-cli
version = 24.5.0
description = Neuro Platform client
url = https://github.com/neuro-inc/platform-client-python
long_description = file: README.md
long_description_content_type = text/markdown
author = Neu.ro Team
author_email = team@neu.ro
license = Apache 2
classifiers = 
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3.8
	Programming Language :: Python :: 3.9
	Programming Language :: Python :: 3.10
	Programming Language :: Python :: 3.11
	Operating System :: OS Independent
	Development Status :: 4 - Beta
	Environment :: Console
	Intended Audience :: Developers
	Intended Audience :: Science/Research
	Intended Audience :: Information Technology
	Topic :: Scientific/Engineering :: Artificial Intelligence
	Topic :: Software Development
	Topic :: Utilities
	License :: OSI Approved :: Apache Software License

[options]
package_dir = 
	=src
packages = find:
zip_safe = False
python_requires = >=3.8.0
include_package_data = True
install_requires = 
	python-jose>=3.0.0
	python-dateutil>=2.7.0
	neuro-sdk>=24.5.0
	click>=8.0
	humanize>=3.3
	typing_extensions>=3.7.4
	certifi
	wcwidth>=0.1.7
	prompt-toolkit>=3.0.13
	rich>=11.0.0
	jedi>=0.16
	async-timeout>=4.0.0 ; python_version < "3.11"

[options.entry_points]
console_scripts = 
	neuro = neuro_cli.main:main
	docker-credential-neuro = neuro_cli.docker_credential_helper:main
neuro_api = 
	neuro-cli=neuro_cli.plugin:setup

[options.packages.find]
where = src

[flake8]
exclude = .git,.env,__pycache__,.eggs
max-line-length = 88
ignore = N801,N802,N803,E252,W503,E133,E203,F541

[isort]
profile = black
sections = FUTURE,STDLIB,THIRDPARTY,NEUROSDK,FIRSTPARTY,TESTS,LOCALFOLDER
known_neurosdk = neuro_sdk
known_firstparty = neuro_cli
known_tests = tests

[coverage:run]
omit = neuro-sdk/tests/*
	neuro-cli/tests/*
	build-tools/*

[tool:pytest]
addopts = --cov-branch --cov-report xml
asyncio_mode = auto
log_cli = false
log_level = INFO
junit_family = xunit2
testpaths = neuro-sdk/tests/
	neuro-cli/tests/
markers = 
	e2e
	e2e_job
	require_admin
	xdist_group
filterwarnings = error
	ignore:.*PROTOCOL_TLS is deprecated:DeprecationWarning:neuro_sdk
	ignore:.*PROTOCOL_TLS is deprecated:DeprecationWarning:tests
	ignore:.*PROTOCOL_TLS is deprecated:DeprecationWarning:aiohttp
	ignore:Inheritance class AuthorizedSession from ClientSession is discouraged:DeprecationWarning:google
	ignore:returning HTTPException object is deprecated.+:DeprecationWarning:aiodocker
	ignore:ssl_context is deprecated.+:DeprecationWarning:aiodocker
	ignore:the imp module is deprecated.+:DeprecationWarning:past
	ignore:Flags not at the start of the expression.+:DeprecationWarning:cookiecutter
	ignore:Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working:DeprecationWarning:jinja2
	ignore:(rm_rf) error removing.+:UserWarning:pytest
	ignore::ResourceWarning:asyncio
	ignore::UserWarning:_pytest
	ignore:The loop argument is deprecated*:DeprecationWarning:asyncio
	ignore:int_from_bytes is deprecated:cryptography.utils.CryptographyDeprecationWarning:jose
	ignore:'autocompletion' is renamed to 'shell_complete'.+:DeprecationWarning:click
	ignore:.*pkg_resources\.declare_namespace.*:DeprecationWarning:pkg_resources

[mypy]
check_untyped_defs = True
disallow_any_generics = True
disallow_untyped_defs = True
follow_imports = silent
strict_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_unused_configs = True
incremental = False

[mypy-pytest]
ignore_missing_imports = true

[mypy-aiodocker.*]
ignore_missing_imports = true

[mypy-jose]
ignore_missing_imports = true

[mypy-humanize]
ignore_missing_imports = true

[mypy-trustme]
ignore_missing_imports = true

[mypy-async_generator]
ignore_missing_imports = true

[mypy-async_exit_stack]
ignore_missing_imports = true

[mypy-cookiecutter.*]
ignore_missing_imports = true

[mypy-idna]
ignore_missing_imports = true

[mypy-wcwidth]
ignore_missing_imports = true

[mypy-prompt_toolkit.*]
ignore_missing_imports = true

[mypy-pexpect]
ignore_missing_imports = true

[mypy-pexpect.replwrap]
ignore_missing_imports = true

[mypy-re_assert]
ignore_missing_imports = true

[mypy-setuptools]
ignore_missing_imports = true

[mypy-sphinxcontrib.*]
ignore_missing_imports = true

[mypy-aiobotocore.*]
ignore_missing_imports = true

[mypy-botocore.*]
ignore_missing_imports = true

[mypy-azure.*]
ignore_missing_imports = true

[mypy-google.*]
ignore_missing_imports = true

[egg_info]
tag_build = 
tag_date = 0

