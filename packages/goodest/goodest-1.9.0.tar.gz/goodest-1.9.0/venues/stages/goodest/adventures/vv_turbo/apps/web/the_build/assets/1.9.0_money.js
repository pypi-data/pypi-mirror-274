import{a as h,f as g}from"./1.9.0_string.js";import{_ as p,B as x,s as y,r,o as t,f as b,w as a,c as s,F as k,i as w,g as i,j as B,a as u,e as m,n as $}from"./1.9.0_index.js";const z={components:{s_outer_link:x,s_button:y},props:{affiliates:Array},methods:{furnish_string:h}},N=u("h2",{style:{textAlign:"center"}},"affiliate sources",-1),S={key:0,style:{textAlign:"center",height:"100%",paddingTop:"5px",boxSizing:"border-box"}};function V(e,v,_,A,C,n){const l=r("s_outer_link"),c=r("s_button"),d=r("lounge");return t(),b(d,null,{default:a(({palette:f})=>[N,(t(!0),s(k,null,w(_.affiliates,o=>(t(),s("div",null,[i(c,{ref_for:!0,ref:"button",pressable:!0,boundaries:"3px 12px 3px",clicked:()=>{},styles:{inside:{}}},{default:a(()=>[i(l,{new_tab:!0,address:n.furnish_string(o,"link",""),style:{},text:n.furnish_string(o,"name","")},null,8,["address","text"])]),_:2},1536)]))),256)),_.affiliates.length===0?(t(),s("div",S," not found ")):B("",!0)]),_:1})}const J=p(z,[["render",V]]);function K(){try{let e;if(arguments.length===3?e=m(arguments[0],arguments[1],arguments[2]):arguments.length===2?e=m(arguments[0],arguments[1],""):arguments.length===1&&(e=arguments[0]),Array.isArray(e)===!0)return e;throw console.log(arguments),new Error("An array could not be furnished from the preceeding arguments.")}catch(e){console.log("exception:",e)}return[]}const j={components:{s_outer_link:x,s_button:y},props:["goodness"],methods:{furnish_array:g,furnish_string:h},computed:{goodness_certs(){return g(this,"goodness")}}},E={style:{display:"flex",justifyContent:"space-between",flexDirection:"column"}},F=u("h3",{style:{margin:0,fontSize:".8em"}},"Goodness Certifications",-1),D={key:0},G=u("p",null,"Certification info for this product was not found.",-1),L=[G],T={key:1};function q(e,v,_,A,C,n){const l=r("s_outer_link"),c=r("s_button"),d=r("lounge");return t(),b(d,null,{default:a(({palette:f})=>[u("div",E,[F,n.goodness_certs.length===0?(t(),s("div",D,L)):(t(),s("div",T,[(t(!0),s(k,null,w(n.goodness_certs,o=>(t(),s("div",null,[i(c,{ref_for:!0,ref:"button",pressable:!0,boundaries:"3px 12px 3px",clicked:()=>{},styles:{inside:{}}},{default:a(()=>[i(l,{new_tab:!0,address:n.furnish_string(o,["links",0]),style:$({color:f[1]}),text:n.furnish_string(o,["show","text"],"")},null,8,["address","style","text"])]),_:2},1536)]))),256))]))])]),_:1})}const M=p(j,[["render",q]]);export{J as a,K as f,M as g};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
