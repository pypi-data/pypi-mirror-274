name: Python CI

on:
  push:
    branches:
      - main
    tags: ['*']
  pull_request:

concurrency:
  group: test-${{ github.head_ref }}
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"

jobs:
  build:
    name: Python ${{ matrix.python-version }} ${{ matrix.extra-env }}
    if: >-
        !contains(github.event.head_commit.message, '[skip ci]')
        && !contains(github.event.head_commit.message, '[skip tests]')
    strategy:
      matrix:
        python-version: ["3.11"]
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install -e ".[test]"
      - name: Lint
        run: |
          flake8 -v
      - name: Install elan
        run: |
          set -o pipefail
          curl https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh -sSf | bash -s -- -y --default-toolchain none
          echo "$HOME/.elan/bin" >> $GITHUB_PATH
      - name: Install repl
        run: |
          set -o pipefail
          ./scripts/install_repl.sh
      - name: Install Lean 4 Jupyter Kernel
        run: |
          python -m lean4_jupyter.install
      - name: Try run kernel
        run: |
          python -m lean4_jupyter.kernel --help
      # - name: Try run kernel with papermill
      #   run: |
      #     python -m papermill --kernel lean4 examples/repl-issue-40-dup-msg.ipynb examples/repl-issue-40-dup-msg.expected.ipynb
      - name: Prepare Lean 4 toolchain and demo projects
        run: |
          set -o pipefail
          elan default leanprover/lean4:v4.8.0-rc1
          cd examples/demo_proj
          lake exe cache get && lake build
      - name: Test
        run: |
          pytest -vv --durations=50 --nbval --nbval-kernel-name lean4 examples/

  release:
    name: Create release and send to PyPI
    needs: build
    if: >-
        github.ref_type == 'tag'
        && startsWith(github.ref, 'refs/tags/v')
        && !contains(github.event.head_commit.message, '[skip ci]')
        && !contains(github.event.head_commit.message, '[no release]')
    runs-on: ubuntu-latest
    # https://github.com/pypa/gh-action-pypi-publish/tree/release/v1/?tab=readme-ov-file#trusted-publishing
    permissions:
      id-token: write
    environment:
      name: pypi
      url: https://pypi.org/p/lean4_jupyter
    strategy:
      matrix:
        python-version: ["3.11"]
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install flit
        run: |
          python -m pip install flit
      - name: Build package distributions
        run: |
          python -m flit build --setup-py
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1