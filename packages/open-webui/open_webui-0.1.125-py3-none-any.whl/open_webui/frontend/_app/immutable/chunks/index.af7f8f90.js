import{i as C}from"./index.b093923e.js";import{O as u,L as f}from"./index.4db2cdd2.js";let g;const T=new Uint8Array(16);function S(){if(!g&&(g=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!g))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return g(T)}const r=[];for(let o=0;o<256;++o)r.push((o+256).toString(16).slice(1));function v(o,e=0){return r[o[e+0]]+r[o[e+1]]+r[o[e+2]]+r[o[e+3]]+"-"+r[o[e+4]]+r[o[e+5]]+"-"+r[o[e+6]]+r[o[e+7]]+"-"+r[o[e+8]]+r[o[e+9]]+"-"+r[o[e+10]]+r[o[e+11]]+r[o[e+12]]+r[o[e+13]]+r[o[e+14]]+r[o[e+15]]}const $=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),x={randomUUID:$};function L(o,e,t){if(x.randomUUID&&!e&&!o)return x.randomUUID();o=o||{};const a=o.random||(o.rng||S)();if(a[6]=a[6]&15|64,a[8]=a[8]&63|128,e){t=t||0;for(let n=0;n<16;++n)e[t+n]=a[n];return e}return v(a)}const z=async(o="")=>{let e=null;const t=await fetch(`${u}/config`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).catch(a=>(console.log(a),"detail"in a?e=a.detail:e="Server connection failed",null));if(e)throw e;return t},U=async(o="",e)=>{let t=null;const a=await fetch(`${u}/config/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}},body:JSON.stringify({enable_openai_api:e})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),"detail"in n?t=n.detail:t="Server connection failed",null));if(t)throw t;return a},B=async(o="")=>{let e=null;const t=await fetch(`${u}/urls`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).catch(a=>(console.log(a),"detail"in a?e=a.detail:e="Server connection failed",null));if(e)throw e;return t.OPENAI_API_BASE_URLS},k=async(o="",e)=>{let t=null;const a=await fetch(`${u}/urls/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}},body:JSON.stringify({urls:e})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),"detail"in n?t=n.detail:t="Server connection failed",null));if(t)throw t;return a.OPENAI_API_BASE_URLS},R=async(o="")=>{let e=null;const t=await fetch(`${u}/keys`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).catch(a=>(console.log(a),"detail"in a?e=a.detail:e="Server connection failed",null));if(e)throw e;return t.OPENAI_API_KEYS},Y=async(o="",e)=>{let t=null;const a=await fetch(`${u}/keys/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}},body:JSON.stringify({keys:e})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),"detail"in n?t=n.detail:t="Server connection failed",null));if(t)throw t;return a.OPENAI_API_KEYS},M=async(o="")=>{let e=null;const t=await fetch(`${u}/models`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>{var s;return e=`OpenAI: ${((s=n==null?void 0:n.error)==null?void 0:s.message)??"Network Problem"}`,[]});if(e)throw e;const a=Array.isArray(t)?t:(t==null?void 0:t.data)??null;return a&&a.map(n=>({id:n.id,name:n.name??n.id,external:!0})).sort((n,s)=>n.name.localeCompare(s.name))},G=async(o="",e,t=u)=>{const a=new AbortController;let n=null;const s=await fetch(`${t}/chat/completions`,{signal:a.signal,method:"POST",headers:{Authorization:`Bearer ${o}`,"Content-Type":"application/json"},body:JSON.stringify(e)}).catch(l=>(console.log(l),n=l,null));if(n)throw n;return[s,a]},J=async(o="",e,t,a,n=u)=>{var c,d;let s=null;e=E(e,a),console.log(e);const l=await fetch(`${n}/chat/completions`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${o}`},body:JSON.stringify({model:t,messages:[{role:"user",content:e}],stream:!1,max_tokens:50})}).then(async i=>{if(!i.ok)throw await i.json();return i.json()}).catch(i=>(console.log(i),"detail"in i&&(s=i.detail),null));if(s)throw s;return((d=(c=l==null?void 0:l.choices[0])==null?void 0:c.message)==null?void 0:d.content.replace(/["']/g,""))??"New Chat"},O=async(o="")=>{let e=null;const t=await fetch(`${f}/v1/models`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>{var s;return console.log(n),e=`LiteLLM: ${((s=n==null?void 0:n.error)==null?void 0:s.message)??"Network Problem"}`,[]});if(e)throw e;const a=Array.isArray(t)?t:(t==null?void 0:t.data)??null;return a&&a.map(n=>({id:n.id,name:n.name??n.id,external:!0,source:"LiteLLM"})).sort((n,s)=>n.name.localeCompare(s.name))},V=async(o="")=>{let e=null;const t=await fetch(`${f}/model/info`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>{var s;return console.log(n),e=`LiteLLM: ${((s=n==null?void 0:n.error)==null?void 0:s.message)??"Network Problem"}`,[]});if(e)throw e;return Array.isArray(t)?t:(t==null?void 0:t.data)??null},W=async(o="",e)=>{let t=null;const a=await fetch(`${f}/model/new`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}},body:JSON.stringify({model_name:e.name,litellm_params:{model:e.model,...e.api_base===""?{}:{api_base:e.api_base},...e.api_key===""?{}:{api_key:e.api_key},...isNaN(parseInt(e.rpm))?{}:{rpm:parseInt(e.rpm)},...e.max_tokens===""?{}:{max_tokens:e.max_tokens}}})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>{var s;return console.log(n),t=`LiteLLM: ${((s=n==null?void 0:n.error)==null?void 0:s.message)??"Network Problem"}`,[]});if(t)throw t;return a},H=async(o="",e)=>{let t=null;const a=await fetch(`${f}/model/delete`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}},body:JSON.stringify({id:e})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>{var s;return console.log(n),t=`LiteLLM: ${((s=n==null?void 0:n.error)==null?void 0:s.message)??"Network Problem"}`,[]});if(t)throw t;return a},K=async o=>{let e=await Promise.all([C(o).catch(t=>(console.log(t),null)),M(o).catch(t=>(console.log(t),null)),O(o).catch(t=>(console.log(t),null))]);return e=e.filter(t=>t).reduce((t,a,n,s)=>t.concat(a),[]),e},q=o=>o.replace(/<\|[a-z]*$/,"").replace(/<\|[a-z]+\|$/,"").replace(/<$/,"").replaceAll(/<\|[a-z]+\|>/g," ").replaceAll("<","&lt;").trim(),Q=o=>o.replaceAll("&lt;","<"),X=o=>{let e="";return new TransformStream({transform(t,a){e+=t;const n=e.split(o);n.slice(0,-1).forEach(s=>a.enqueue(s)),e=n[n.length-1]},flush(t){e&&t.enqueue(e)}})},Z=o=>{const e={messages:{},currentId:null};let t=null,a=null;for(const n of o)a=L(),t!==null&&(e.messages[t].childrenIds=[...e.messages[t].childrenIds,a]),e.messages[a]={...n,id:a,parentId:t,childrenIds:[]},t=a;return e.currentId=a,e},b=()=>{const o=document.createElement("canvas"),e=o.getContext("2d");o.height=1,o.width=1;const t=new ImageData(o.width,o.height),a=t.data;for(let s=0;s<t.data.length;s+=1)s%4!==3?a[s]=Math.floor(256*Math.random()):a[s]=255;e.putImageData(t,0,0);const n=e.getImageData(0,0,o.width,o.height).data;for(let s=0;s<n.length;s+=1)if(n[s]!==a[s])return console.log("canvasPixelTest: Wrong canvas pixel RGB value detected:",n[s],"at:",s,"expected:",a[s]),console.log("canvasPixelTest: Canvas blocking or spoofing is likely"),!1;return!0},ee=o=>{const e=document.createElement("canvas"),t=e.getContext("2d");if(e.width=100,e.height=100,!b())return console.log("generateInitialsImage: failed pixel test, fingerprint evasion is likely. Using default image."),"/user.png";t.fillStyle="#F39C12",t.fillRect(0,0,e.width,e.height),t.fillStyle="#FFFFFF",t.font="40px Helvetica",t.textAlign="center",t.textBaseline="middle";const a=o.trim(),n=a.length>0?a[0]+(a.split(" ").length>1?a[a.lastIndexOf(" ")+1]:""):"";return t.fillText(n.toUpperCase(),e.width/2,e.height/2),e.toDataURL()},te=async o=>{let e=!1;if(!navigator.clipboard){const t=document.createElement("textarea");t.value=o,t.style.top="0",t.style.left="0",t.style.position="fixed",document.body.appendChild(t),t.focus(),t.select();try{const n=document.execCommand("copy")?"successful":"unsuccessful";console.log("Fallback: Copying text command was "+n),e=!0}catch(a){console.error("Fallback: Oops, unable to copy",a)}return document.body.removeChild(t),e}return e=await navigator.clipboard.writeText(o).then(()=>(console.log("Async: Copying to clipboard was successful!"),!0)).catch(t=>(console.error("Async: Could not copy text: ",t),!1)),e},ne=(o,e)=>e==="0.0.0"?!1:e.localeCompare(o,void 0,{numeric:!0,sensitivity:"case",caseFirst:"upper"})<0,oe=o=>{const e=/\[([^\]]+)\]/g,t=[];let a;for(;(a=e.exec(o))!==null;)t.push({word:a[1],startIndex:a.index,endIndex:e.lastIndex-1});return t},ae=o=>{const e=o.split(" "),t=e.findIndex(n=>n.startsWith("#"));return t!==-1&&e.splice(t,1),e.join(" ")},se=o=>o.toLowerCase().replace(/[^\w\s]/g,"").replace(/\s+/g,"-"),re=o=>"mapping"in o[0]?"openai":"webui",_=o=>{var c,d,i,h,w,I,A,j;const e=o.mapping,t=[];let a="",n=null;for(let m in e){const p=e[m];a=m;try{if(t.length==0&&(p.message==null||((c=p.message.content.parts)==null?void 0:c[0])==""&&p.message.content.text==null))continue;{const y={id:m,parentId:n,childrenIds:p.children||[],role:((i=(d=p.message)==null?void 0:d.author)==null?void 0:i.role)!=="user"?"assistant":"user",content:((I=(w=(h=p.message)==null?void 0:h.content)==null?void 0:w.parts)==null?void 0:I[0])||((j=(A=p.message)==null?void 0:A.content)==null?void 0:j.text)||"",model:"gpt-3.5-turbo",done:!0,context:null};t.push(y),n=a}}catch(y){console.log("Error with",p,`
Error:`,y)}}let s={};return t.forEach(m=>s[m.id]=m),{history:{currentId:a,messages:s},models:["gpt-3.5-turbo"],messages:t,options:{},timestamp:o.create_time,title:o.title??"New Chat"}},F=o=>{const e=o.messages;if(e.length===0||e[e.length-1].childrenIds.length!==0||e[0].parentId!==null)return!1;for(let n of e)if(typeof n.content!="string")return!1;return!0},ie=o=>{const e=[];let t=0;for(let a of o){const n=_(a);F(n)?e.push({id:a.id,user_id:"",title:a.title,chat:n,timestamp:a.timestamp}):t++}return console.log(t,"Conversations could not be imported"),e},le=o=>{let e;try{e=new URL(o)}catch{return!1}return e.protocol==="http:"||e.protocol==="https:"},D=o=>{const e=/[\uD800-\uDBFF][\uDC00-\uDFFF]|\uD83C[\uDC00-\uDFFF]|\uD83D[\uDC00-\uDE4F]/g;return o.replace(e,"")},ce=o=>o.split(new RegExp("(?<=[.!?])")).map(t=>D(t.trim())).filter(t=>t!==""),ue=(o,e)=>new File([o],e,{type:o.type}),E=(o,e)=>o.replace(/{{prompt}}|{{prompt:start:(\d+)}}|{{prompt:end:(\d+)}}|{{prompt:middletruncate:(\d+)}}/g,(t,a,n,s)=>{if(t==="{{prompt}}")return e;if(t.startsWith("{{prompt:start:"))return e.substring(0,a);if(t.startsWith("{{prompt:end:"))return e.slice(-n);if(t.startsWith("{{prompt:middletruncate:")){if(e.length<=s)return e;const l=e.slice(0,Math.ceil(s/2)),c=e.slice(-Math.floor(s/2));return`${l}...${c}`}return""}),de=o=>{const e=Math.floor(o/1e9%60),t=Math.floor(o/6e10%60),a=Math.floor(o/36e11%24),n=[];return e>=0&&n.push(`${e}s`),t>0&&n.push(`${t}m`),a>0&&n.push(`${a}h`),n.reverse().join(" ")},pe=o=>{const e=new Date,t=new Date(o*1e3),n=(e.getTime()-t.getTime())/(1e3*3600*24),s=e.getDate(),l=e.getMonth(),c=e.getFullYear(),d=t.getDate(),i=t.getMonth(),h=t.getFullYear();return c===h&&l===i&&s===d?"Today":c===h&&l===i&&s-d===1?"Yesterday":n<=7?"Previous 7 days":n<=30?"Previous 30 days":c===h?t.toLocaleString("default",{month:"long"}):t.getFullYear().toString()};export{q as A,de as B,ce as C,Q as D,pe as E,te as a,ne as b,b as c,V as d,W as e,H as f,ee as g,re as h,ie as i,z as j,B as k,R as l,Y as m,U as n,K as o,oe as p,le as q,ae as r,X as s,ue as t,k as u,L as v,G as w,J as x,Z as y,se as z};
