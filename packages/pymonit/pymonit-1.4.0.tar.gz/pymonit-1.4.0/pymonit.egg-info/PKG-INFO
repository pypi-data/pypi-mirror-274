Metadata-Version: 2.1
Name: pymonit
Version: 1.4.0
Summary: Programa de monitoramento de código python, desenvolvido para ser utilizado pelas funcionário da Agência de dados
Home-page: https://github.com/arktnld/monit
Author: arktnld
Author-email: arktnld@gmail.com
License: MIT
Classifier: Development Status :: 3 - Alpha
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: sqlalchemy
Requires-Dist: pymysql
Requires-Dist: psutil
Requires-Dist: python-dotenv

### Monit

**Instalação:**
```bash
pip install pymonit
```
**Atualização:**
```bash
pip install -U pymonit
```
**Exemplo arquivo `.monit`:**
```bash
# Project info
# Informações obrigatórias
PROJECT=sample_project
COMPANY=acme
DEV=coder

# Database info
# Informações obrigatórias
DB_USER=user
DB_PASSWORD=p@ssw0rd
DB_HOST=localhost
DB_DATABASE=teste

# Email info
# Deixe em branco para desativar o envio de e-mails
EMAIL=
EMAIL_PASSWORD=
```
### Exemplo de Uso:

**Utilização simples**
```python
import time

from monit.core import Monitor as monit

def main():

    try:
        time.sleep(5)
        raise ValueError("This is a sample error.")

    except Exception as e:
        print("Erro: Ocorreu um erro inesperado.")
        monit.notify_and_exit(e)


if __name__ == "__main__":
    main()
```

**Utilização avançada**

```Python
import time

from monit.core import Monitor as monit
from monit.logger import Logger
from monit.log2file import Log2File

def main():

    Log2File() # Salva todo o log em um arquivo
    log = Logger()

    try:
        log.info("Hello, World!")
        time.sleep(5)

        raise ValueError("This is a sample error.")

    except Exception as e:
        monit.notify(e)

    try:
        time.sleep(2)
        raise ValueError("This is another a sample error.")

    except Exception as e:
        monit.notify(e, "Custom message")

    num = 0
    for _ in range(3):
        num += 1
    monit.msg(f"Total count in for loop: {num}")

    monit.end()


if __name__ == "__main__":
    main()
```
