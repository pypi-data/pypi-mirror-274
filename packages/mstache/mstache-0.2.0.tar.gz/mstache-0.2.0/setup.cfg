[pycodestyle]
select = 
	E121,
	E122,
	E124,
	E125,
	E126,
	E127,
	E128,
	E129,
	E131,
	E133,
	E704,
	E901,
	E504,

[tox:tox]
minversion = 3.18.0
envlist = 
	codestyle
	py
	coverage
	docs

[testenv]
extras = coverage
description = run test suite and generate coverage metrics
commands = 
	coverage run -m unittest tests.py

[testenv:benchmark]
extras = benchmark
description = run benchmark suite
commands = 
	python -m reference.benchmark

[testenv:comparison]
extras = benchmark
setenv = 
	NODE_PATH={envdir}{/}node_modules
	GEM_HOME={envdir}{/}gem
	PATH={env:PATH}{}{envdir}{/}gem{/}bin
allowlist_externals = 
	gem
	npm
commands_pre = 
	npm install mustache --prefix {envdir}
	gem install mustache --no-user-install
commands = 
	python -m reference.comparison

[testenv:codestyle]
extras = codestyle
description = check coding style (pep8, pep257, static checking)
commands = 
	ruff check mstache.py setup.py docs/conf.py
	pycodestyle mstache.py setup.py docs/conf.py
	mypy mstache.py
	rstcheck -r docs

[testenv:coverage]
extras = coverage
description = collect, process and report test coverage
commands = 
	coverage combine
	coverage html --fail-under=0
	coverage report

[testenv:docs]
extras = docs
description = generate module documentation
changedir = {toxinidir}/docs
commands = 
	sphinx-build -ab coverage . undoc
	sphinx-build -ab html . build

[testenv:release]
extras = release
description = upload release to (test)pypi
setenv = 
	TWINE_REPOSITORY = {env:TWINE_REPOSITORY:testpypi}
commands = 
	python -c 'import shutil; shutil.rmtree("dist/", ignore_errors=True)'
	python -m build --outdir dist
	python -m twine upload dist/*

[egg_info]
tag_build = 
tag_date = 0

