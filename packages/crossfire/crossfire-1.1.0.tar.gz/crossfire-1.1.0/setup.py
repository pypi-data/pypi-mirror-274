# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['crossfire', 'crossfire.clients']

package_data = \
{'': ['*']}

install_requires = \
['httpx>=0.25.0,<0.26.0',
 'nest-asyncio>=1.6.0,<2.0.0',
 'python-decouple>=3.5,<4.0',
 'tqdm>=4.66.1,<5.0.0']

extras_require = \
{'df': ['pandas>=2.1.1,<3.0.0'],
 'geodf': ['geopandas>=0.13.2,<0.14.0', 'pandas>=2.1.1,<3.0.0']}

setup_kwargs = {
    'name': 'crossfire',
    'version': '1.1.0',
    'description': 'crossfire: Download spatial data sets from crossfire project',
    'long_description': '<div style="text-align: center">\n<img src="https://raw.githubusercontent.com/voltdatalab/crossfire/master/crossfire_hexagono.png" width="130px" alt="hexagon crossfire"/>\n\n# `crossfire` Python client\n</div>\n\n`crossfire` is a package created to give easier access to [Fogo Cruzado](https://fogocruzado.org.br/)\'s datasets, which is a digital collaborative platform of gun shooting occurrences in the metropolitan areas of Rio de Janeiro and Recife.\n\nThe package facilitates data extraction from [Fogo Cruzado\'s open API](https://api.fogocruzado.org.br/).\n\n## Requirements\n\n* Python 3.9 or newer\n\n## Install\n\n```console\n$ pip install crossfire\n```\n\nIf you want to have access to the data as [Pandas `DataFrame`s](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html):\n\n```console\n$ pip install crossfire[df]\n```\n\nIf you want to have access to the data as [GeoPandas `GeoDataFrame`s](https://geopandas.org/en/stable/docs/reference/api/geopandas.GeoDataFrame.html):\n\n```console\n$ pip install crossfire[geodf]\n```\n\n## Authentication\n\nTo have access to the API data, [registration is required](https://api.fogocruzado.org.br/sign-up).\n\nThe `email` and `password` used in the registration can be configured as `FOGOCRUZADO_EMAIL` and `FOGOCRUZADO_PASSWORD` environment variables in a `.env` file:\n\n```env\nFOGOCRUZADO_EMAIL=your@mail.com\nFOGOCRUZADO_PASSWORD=YOUR_PASSWORD\n```\n\nIf you prefer _not_ to use these environment variables, you can still use the credentials [when instantiating a client](#custom-client).\n\n## Usage\n\n### List of states covered by the project\n\nGet all states with at least one city covered by the Fogo Cruzado project:\n\n```python\nfrom crossfire import states\n\n\nstates()\n```\n\nIt is possible to get results in `DataFrae`:\n\n```python\nstates(format=\'df\')\n```\n\n### List of cities covered by the project\n\nGet cities from a specific state covered by the Fogo Cruzado project.\n\n```python\nfrom crossfire import cities\n\n\ncities()\n```\n\nIt is possible to get results in `DataFrae`:\n\n```python\ncities(format=\'df\')\n```\n\n#### `Cities` parameters\n\n| Name        | Required | Description          | Type   | Default value | Example                                  |\n|-------------|----------|----------------------|--------|---------------|------------------------------------------|\n| `state_id`  | ❌        | ID of the state      | string | `None`        | `\'b112ffbe-17b3-4ad0-8f2a-2038745d1d14\'` |\n| `city_id`   | ❌        | ID of the city       | string | `None`        | `\'88959ad9-b2f5-4a33-a8ec-ceff5a572ca5\'` |\n| `city_name` | ❌        | Name of the city     | string | `None`        | `\'Rio de Janeiro\'`                       |\n| `format`    | ❌        | Format of the result | string | `\'dict\'`      | `\'dict\'`, `\'df\'` or `\'geodf\'`            |\n\n\n### Listing occurrences\n\nTo get shooting occurrences from Fogo Cruzado dataset it is necessary to specify a state id in `id_state` parameter:\n\n```python\nfrom crossfire import occurrences\n\n\noccurrences(\'813ca36b-91e3-4a18-b408-60b27a1942ef\')\n```\n\nIt is possible to get results in `DataFrae`:\n\n```python\noccurrences(\'813ca36b-91e3-4a18-b408-60b27a1942ef\', format=\'df\')\n```\n\nOr as `GeoDataFrame`:\n\n```python\noccurrences(\'813ca36b-91e3-4a18-b408-60b27a1942ef\', format=\'geodf\')\n```\n\n#### `Occurrences` parameters\n\n| Name                    | Required | Description                                    | Type                         | Default value | Example                                                                                                                        |\n|-------------------------|----------|------------------------------------------------|------------------------------|---------------|--------------------------------------------------------------------------------------------------------------------------------|\n| `id_state`              | ✅        | ID of the state                                | string                       | `None`        | `\'b112ffbe-17b3-4ad0-8f2a-2038745d1d14\'`                                                                                       |\n| `id_cities`             | ❌        | ID of the city                                 | string or list of strings    | `None`        | `\'88959ad9-b2f5-4a33-a8ec-ceff5a572ca5\'` or `[\'88959ad9-b2f5-4a33-a8ec-ceff5a572ca5\', \'9d7b569c-ec84-4908-96ab-3706ec3bfc57\']` |\n| `type_occurrence`       | ❌        | Type of occurrence                             | string                       | `\'all\'`       | `\'all\'`, `\'withVictim\'` or `\'withoutVictim\'`                                                                                   |\n| `initial_date`          | ❌        | Initial date of the occurrences                | string, `date` or `datetime` | `None`        | `\'2020-01-01\'`, `\'2020/01/01\'`, `\'20200101\'`, `datetime.datetime(2023, 1, 1)` or `datetime.date(2023, 1, 1)`                   | \n| `final_date`            | ❌        | Final date of the occurrences                  | string, `date` or `datetime` | `None`        | `\'2020-01-01\'`, `\'2020/01/01\'`, `\'20200101\'`, `datetime.datetime(2023, 1, 1)` or `datetime.date(2023, 1, 1)`                   |\n| `max_parallel_requests` | ❌        | Maximum number of parallel requests to the API | int                          | `16`          | `32`                                                                                                                           |\n| `format`                | ❌        | Format of the result                           | string                       | `\'dict\'`      | `\'dict\'`, `\'df\'` or `\'geodf\'`                                                                                                  |\n| `flat`                  | ❌        | Return nested columns as separate columns      | bool                         | `False`       | `True` or `False`                                                                                                              |\n\n\n##### About `flat` parameter\n\nOccurrence data often contains nested information in several columns. By setting the parameter `flat=True`, you can simplify the analysis by separating nested data into individual columns. This feature is particularly useful for columns such as `contextInfo`, `state`, `region`, `city`, `neighborhood`, and `locality`.\n\nFor example, to access detailed information about the context of occurrences, such as identifying the main reason, you would typically need to access the `contextInfo` column and then look for the mainReason key. With the `flat=True` parameter, this nested information is automatically split into separate columns, making the data easier to work with.\n\nWhen `flat=True` is set, the function returns occurrences with the flattened columns. Each new column retains the original column name as a prefix and the nested key as a suffix. For instance, the `contextInfo` column will be split into the following columns: `contextInfo_mainReason`, `contextInfo_complementaryReasons`, `contextInfo_clippings`, `contextInfo_massacre`, and `contextInfo_policeUnit`.\n\n\n###### Example\n\n```python\nfrom crossfire import occurrences\nfrom crossfire.clients.occurrences import flatten\n\noccs = occurrences(\'813ca36b-91e3-4a18-b408-60b27a1942ef\')\noccs[0].keys()\n# dict_keys([\'id\', \'documentNumber\', \'address\', \'state\', \'region\', \'city\', \'neighborhood\', \'subNeighborhood\', \'locality\', \'latitude\', \'longitude\', \'date\', \'policeAction\', \'agentPresence\', \'relatedRecord\', \'contextInfo\', \'transports\', \'victims\', \'animalVictims\'])\nflattened_occs = occurrences(\'813ca36b-91e3-4a18-b408-60b27a1942ef\', flat=True)\noccs[0].keys()\n# dict_keys([\'id\', \'documentNumber\', \'address\', \'state\', \'region\', \'city\', \'neighborhood\', \'subNeighborhood\', \'locality\', \'latitude\', \'longitude\', \'date\', \'policeAction\', \'agentPresence\', \'relatedRecord\', \'transports\', \'victims\', \'animalVictims\', \'contextInfo\', \'contextInfo_mainReason\', \'contextInfo_complementaryReasons\', \'contextInfo_clippings\', \'contextInfo_massacre\', \'contextInfo_policeUnit\'])\n```\n\nBy using the `flat=True parameter`, you ensure that all nested data is expanded into individual columns, simplifying data analysis and making it more straightforward to access specific details within your occurrence data.\n\n### Custom client\n\nIf not using the environment variables for authentication, it is recommended to use a custom client:\n\n```python\nfrom crossfire import Client\n\n\nclient = Client(email="fogo@cruza.do", password="Rio&Pernambuco") # credentials are optional, the default are the environment variables\nclient.states()\nclient.cities()\nclient.occurrences(\'813ca36b-91e3-4a18-b408-60b27a1942ef\')\n```\n\n### Asynchronous use with `asyncio`\n\n```python\nfrom crossfire import AsyncClient\n\n\nclient = AsyncClient()  # credentials are optional, the default are the environment variables\nawait client.states()\nawait client.cities()\nawait client.occurrences(\'813ca36b-91e3-4a18-b408-60b27a1942ef\')\n```\n\n## Credits\n\n[@FelipeSBarros](https://github.com/FelipeSBarros) is the creator of the Python package. This implementation was funded by CYTED project number `520RT0010 redGeoLIBERO`.\n\n### Contributors\n\n* [@sergiospagnuolo](https://github.com/sergiospagnuolo)\n* [@silvadenisson](https://github.com/silvadenisson)\n* [@cuducos](https://github.com/cuducos)\n',
    'author': 'Felipe Barros',
    'author_email': 'felipe.b4rros@gmail.com',
    'maintainer': 'None',
    'maintainer_email': 'None',
    'url': 'https://fogocruzado.org.br/',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'extras_require': extras_require,
    'python_requires': '>=3.9,<3.13',
}


setup(**setup_kwargs)
