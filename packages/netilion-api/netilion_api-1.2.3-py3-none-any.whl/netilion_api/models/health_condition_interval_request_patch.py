# coding: utf-8

"""
    Netilion API Documentation

    Welcome to the Netilion API Documentation, which provides interactive access and documentation to our REST API. Please visit our developer portal for further instructions and information: https://developer.netilion.endress.com/   # noqa: E501

    OpenAPI spec version: 01.00.00
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class HealthConditionIntervalRequestPatch(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'health_condition_id': 'int',
        'created_datetime': 'datetime',
        'deleted_datetime': 'datetime'
    }

    attribute_map = {
        'health_condition_id': 'health_condition_id',
        'created_datetime': 'created_datetime',
        'deleted_datetime': 'deleted_datetime'
    }

    def __init__(self, health_condition_id=None, created_datetime=None, deleted_datetime=None):  # noqa: E501
        """HealthConditionIntervalRequestPatch - a model defined in Swagger"""  # noqa: E501
        self._health_condition_id = None
        self._created_datetime = None
        self._deleted_datetime = None
        self.discriminator = None
        if health_condition_id is not None:
            self.health_condition_id = health_condition_id
        if created_datetime is not None:
            self.created_datetime = created_datetime
        if deleted_datetime is not None:
            self.deleted_datetime = deleted_datetime

    @property
    def health_condition_id(self):
        """Gets the health_condition_id of this HealthConditionIntervalRequestPatch.  # noqa: E501

        Id of health condition  # noqa: E501

        :return: The health_condition_id of this HealthConditionIntervalRequestPatch.  # noqa: E501
        :rtype: int
        """
        return self._health_condition_id

    @health_condition_id.setter
    def health_condition_id(self, health_condition_id):
        """Sets the health_condition_id of this HealthConditionIntervalRequestPatch.

        Id of health condition  # noqa: E501

        :param health_condition_id: The health_condition_id of this HealthConditionIntervalRequestPatch.  # noqa: E501
        :type: int
        """

        self._health_condition_id = health_condition_id

    @property
    def created_datetime(self):
        """Gets the created_datetime of this HealthConditionIntervalRequestPatch.  # noqa: E501

        Date of the Create Event  # noqa: E501

        :return: The created_datetime of this HealthConditionIntervalRequestPatch.  # noqa: E501
        :rtype: datetime
        """
        return self._created_datetime

    @created_datetime.setter
    def created_datetime(self, created_datetime):
        """Sets the created_datetime of this HealthConditionIntervalRequestPatch.

        Date of the Create Event  # noqa: E501

        :param created_datetime: The created_datetime of this HealthConditionIntervalRequestPatch.  # noqa: E501
        :type: datetime
        """

        self._created_datetime = created_datetime

    @property
    def deleted_datetime(self):
        """Gets the deleted_datetime of this HealthConditionIntervalRequestPatch.  # noqa: E501

        Date of the Destroy Event  # noqa: E501

        :return: The deleted_datetime of this HealthConditionIntervalRequestPatch.  # noqa: E501
        :rtype: datetime
        """
        return self._deleted_datetime

    @deleted_datetime.setter
    def deleted_datetime(self, deleted_datetime):
        """Sets the deleted_datetime of this HealthConditionIntervalRequestPatch.

        Date of the Destroy Event  # noqa: E501

        :param deleted_datetime: The deleted_datetime of this HealthConditionIntervalRequestPatch.  # noqa: E501
        :type: datetime
        """

        self._deleted_datetime = deleted_datetime

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(HealthConditionIntervalRequestPatch, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, HealthConditionIntervalRequestPatch):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
